<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">

<h2>
Enterprise JavaBeans(TM):&nbsp; Getting Started with EJB, Part 6</h2>
<i>Baldwin shows you how to use the New Enterprise Bean Wizard to deploy
your J2EE application into the J2EE server.</i>
<p><b>Published</b>&nbsp; January 22, 2001
<br><b>By <a href="#BaldwinBio">Richard G. Baldwin</a></b>
<p>Java Programming, Lecture Notes # 1315
<ul >
<li>
<a href="#Preface">Preface</a></li>

<li>
<a href="#Preview">Preview</a></li>

<li>
<a href="#Introduction">Introduction</a></li>

<li>
<a href="#Sample Bean Program">Sample Bean Program</a></li>

<li>
<a href="#Creating the J2EE Application">Creating the J2EE Application</a></li>

<li>
<a href="#Starting the System">Starting the System</a></li>

<li>
<a href="#Packaging the Enterprise Bean">Packaging the Enterprise Bean</a></li>

<li>
<a href="#Deploying the J2EE Application">Deploying the J2EE Application</a></li>

<li>
<a href="#Summary">Summary</a></li>

<li>
<a href="#Where To From Here">Where To From Here?</a></li>

<li>
<a href="#Complete Program Listings">Complete Program Listing</a></li>
</ul>

<hr size=3 width="100%" align=center>
<center>
<h2>
<a NAME="Preface"></a>Preface</h2></center>
This is one in a series of lessons designed to teach you about Sun's Enterprise
JavaBeans(TM) (EJB).
<p><b><font color="#FF0000">Sixth in a miniseries</font></b>
<p>This lesson is also the sixth lesson in a miniseries intended to get
you up and running with Sun's Enterprise JavaBeans(TM) very quickly.
<center>
<h2>
<a NAME="Preview"></a>Preview</h2></center>
<font color="#000000">The following three steps are required to deploy
your bean into the J2EE server:</font>
<ol>
<li>
<font color="#000000">Create the J2EE Application</font></li>

<li>
<font color="#000000">Package the Enterprise Bean</font></li>

<li>
<font color="#000000">Deploy the J2EE Application</font></li>
</ol>
<font color="#000000">Previous lessons showed you how to accomplish the
first two steps.&nbsp; This lesson will show you how to accomplish the
third step.&nbsp; This will involve several operations, including:</font>
<ul>
<li>
<font color="#000000">Starting the J2EE server and the deployment tool</font></li>

<li>
<font color="#000000">Specifying the JNDI name</font></li>

<li>
<font color="#000000">Actually deploying the application</font></li>

<li>
<font color="#000000">Creating a client jar file</font></li>

<li>
<font color="#000000">Completing the deployment process</font></li>
</ul>
<font color="#000000">I will walk you through the operations necessary
to accomplish this step without attempting to explain the purpose of each
operation.&nbsp; Subsequent lessons will provide information that bears
on the purpose of the operations.</font>
<center>
<h2>
<a NAME="Introduction"></a><font color="#000000">Introduction</font></h2></center>
<b><font color="#FF0000">Writing, compiling, deploying and executing a
simple bean</font></b>
<p>The lessons in this miniseries will show you the steps involved in writing,
compiling, deploying and executing a simple bean.&nbsp; The discussion
will be brief, and is intended primarily to get you to the point that you
can get something running very quickly.
<p><b><font color="#FF0000">More details in subsequent lessons</font></b>
<p>Subsequent lessons will come back and fill in the gaps to help you more-fully
understand each of the steps.
<p>Subsequent lessons will also teach you about the different kinds of
beans and how to use those beans in different situations.
<p><b><font color="#FF0000">Recommended supplementary reading</font></b>
<p>It is strongly recommended that you study the previous lesson entitled
<i>Enterprise
JavaBeans(TM), Getting Started with EJB, Part 5</i> before embarking on
this lesson.
<p>Additional supplementary material that I have written is available at
<a href="http://gamelan.earthweb.com/dlink.index-jhtml.72.1082.-.43.jhtml">Gamelan</a>.&nbsp;
As of the date of this writing, Gamelan does not maintain a consolidated
index to my Java tutorials.&nbsp; Therefore, they may be difficult to locate
on the Gamelan site.&nbsp; A consolidated index with links to the tutorials
on the Gamelan site is available at
<i>Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a></i><font color="#000000">.</font>
<p><b><font color="#FF0000">The required steps</font></b>
<p><font color="#000000">An earlier lesson entitled <i>Getting Started
with EJB, Part 1 </i>contained a list of the required steps for </font>writing,
compiling, deploying and executing a simple bean.&nbsp; Abbreviated versions
of the first seven steps in that list are repeated below.
<ul>
<li>
<font color="#000000">Download and install Java 2 Platform, Standard Edition
from Sun.</font></li>

<li>
<font color="#000000">Download and install the Java 2 Platform, Enterprise
Edition.</font></li>

<li>
<font color="#000000">Write the bean class and required helper classes.</font></li>

<li>
<font color="#000000">Write home and remote interfaces.</font></li>

<li>
<font color="#000000">Write a compilation batch file for the bean and the
interfaces.</font></li>

<li>
<font color="#000000">Compile the bean class, helper classes, and interfaces.</font></li>

<li>
Use Sun's J2EE <b>deploytool</b> program to deploy the bean into the server.</li>
</ul>
<b><font color="#FF0000">The last step is a big one</font></b>
<p>The last step shown above is a big one, so I have subdivided it into
several sequential lessons, beginning with the lesson entitled <i>Enterprise
JavaBeans(TM), Getting Started with EJB, Part 3</i>.
<p>In this group of lessons associated with deployment, I am walking you
through the detailed steps necessary to deploy your new bean in the J2EE
server.&nbsp; I am providing that information in cookbook fashion, meaning
that I will tell you what to do but not necessarily why to do it.
<p><b><font color="#FF0000">Application and bean jar files are available</font></b>
<p>In this lesson, I am assuming that you have completed the first six
steps and the first two parts of the seventh step.&nbsp; The first two
parts of the seventh step are described in the lessons entitled
<i>Enterprise
JavaBeans(TM), Getting Started with EJB, Parts 4 and 5</i>.
<p>Having completed these steps, you should have a J2EE application file
named <b>HelloApp.ear</b> that you created in a previous lesson entitled
<i>Enterprise
JavaBeans(TM), Getting Started with EJB, Part 4</i>.
<p><b><font color="#FF0000">The main topic of this lesson</font></b>
<p>That application should contain your Enterprise Bean packaged in a jar
file <i>(you packaged your bean in a jar file in Part 5)</i>.&nbsp; However,
the application hasn't yet been deployed into the J2EE server.&nbsp; Deployment
of the application into the J2EE server is the main topic of this lesson.
<p><b><font color="#FF0000">Viewing tip</font></b>
<p>This lesson provides screen shots of the critical steps in the process.&nbsp;
You may find it useful to open another copy of this lesson in a separate
browser window.&nbsp; That will make it easier for you to scroll back and
forth and refer to earlier material and figures without losing your place.
<p><b><font color="#FF0000">Beans versus beans</font></b>
<p><font color="#000000">Just in case you are reading this lesson without
having read the earlier lessons in this series, I will tell you that an
Enterprise Bean is not the same thing as a <i>JavaBean Component(TM)</i>,
as discussed in my series of <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">tutorial
lessons</a> beginning with lesson number 500.</font>
<center>
<h2>
<a NAME="Sample Bean Program"></a><font color="#000000">Sample Bean Program</font></h2></center>
<font color="#000000">At this point, you should have packaged the class
files for your bean in the jar file that is your bean.&nbsp; </font>A complete
listing of the bean program and the two required interfaces is provided
near the end of this lesson.
<center>
<h2>
<a NAME="Creating the J2EE Application"></a>Creating the J2EE Application</h2></center>
You created your J2EE application in a previous lesson and named the file
containing that application <b>HelloApp.ear</b>.&nbsp; In the lesson immediately
prior to this one, you packaged the class files for your bean in a jar
file along with a manifest file and a deployment descriptor file.&nbsp;
You put that jar file in the application file.
<center>
<h2>
<a NAME="Starting the System"></a>Starting the System</h2></center>
Assuming that you shut down the J2EE server and the deployment tool following
the previous lesson, the first thing that you need to do is to open two
<i>Command
Prompt</i> windows.&nbsp; I will refer to the <i>Command Prompt
</i>windows
simply as windows.
<p><b><font color="#FF0000">Start the J2EE server</font></b>
<p>To start the J2EE server running, enter the following command at the
prompt in one of the windows:
<p><b>j2ee -verbose</b>
<p>A large amount of text will appear on the screen.&nbsp; Make certain
that the text on that screen ends with the following text.&nbsp; Otherwise,
the server hasn't been properly started.
<p><b><tt>J2EE server startup complete.</tt></b>
<p><b><font color="#FF0000">Starting the deployment tool</font></b>
<p>Once the server has been started successfully, you need to start the
deployment tool running.&nbsp; To do this, enter the following command
in another window:
<p><b>deploytool</b>
<p>A splash screen will appear first followed by a screen that looks similar
to Figure 1.&nbsp; This is the main deployment screen.&nbsp; <i>(Unfortunately,
the text in this screen shot isn't readable.&nbsp; This screen is quite
large and I had to reduce the size of the screen shot considerably to make
it fit in this narrow publication format.)</i>
<center>
<p><img SRC="java1315a.gif" height=350 width=400>
<p>Figure 1 The J2EE Deployment Tool Main Screen</center>

<p><b><font color="#FF0000">My color coding scheme</font></b>
<p>Because the following text will be a mixture of action statements and
explanatory text, I will color the action statements the following color
of <font color="#3366FF">blue</font> to make them easy to separate from
the explanatory text.
<center>
<h2>
<a NAME="Packaging the Enterprise Bean"></a>Packaging the Enterprise Bean</h2></center>
You packaged your Enterprise Bean in a jar file and put that jar file in
the application file in the previous lesson entitled <i>Enterprise JavaBeans(TM):&nbsp;
Getting Started with EJB, Part 5</i>.&nbsp; There is nothing further that
needs to be done in that regard.
<center>
<h2>
<a NAME="Deploying the J2EE Application"></a>Deploying the J2EE Application</h2></center>
Our new application now contains an Enterprise Bean and is ready for deployment
into the J2EE server.&nbsp; That is the primary topic of this lesson.
<p><b><font color="#FF0000">What is JNDI?</font></b>
<p>JNDI stands for Java Naming and Directory Interface(TM).
<p>According to Sun:
<br>&nbsp;
<table BORDER COLS=1 WIDTH="400" BGCOLOR="#FFFF00" >
<tr>
<td BGCOLOR="#66FFFF">
<pre><i>"The Java Naming and Directory&nbsp;
Interface(TM) (JNDI) is a standard&nbsp;
extension to the Java(TM) platform,&nbsp;
providing Java technology-enabled&nbsp;
applications with a unified interface
to multiple naming and directory&nbsp;
services in the enterprise. As part&nbsp;
of the Java Enterprise API set, JNDI
enables seamless connectivity to&nbsp;
heterogeneous enterprise naming and
directory services. Developers can&nbsp;
now build powerful and portable&nbsp;
directory-enabled applications&nbsp;
using this industry standard."</i><font face="Courier New,Courier">&nbsp;</font></pre>
</td>
</tr>
</table>

<p><b><font color="#FF0000">What does this mean?</font></b>
<p>That's a mouthful for sure.&nbsp; Here is what it means in this situation.
<p>Later, we will be building a Java client application that can communicate
with the J2EE server and invoke business methods on our Enterprise Bean.&nbsp;
That application must be able to identify the bean upon which the business
methods are to be invoked.&nbsp; In this section, we will specify a name
that will be used by the client to identify the bean.&nbsp; That is the
JNDI name.
<p><b><font color="#FF0000">The JNDI name</font></b>
<p>I will have more to say about the technical ramifications of JNDI naming
in a future lesson.&nbsp; At this time, we simply need to specify a name
for the bean that is different from names given to other beans that have
been deployed in the server.
<p><b><font color="#FF0000">Confirm the correct application</font></b>
<p>First you need to make certain that you are working on the correct application.
<p>To do this, <font color="#3366FF">select <b>HelloApp</b></font> in the
tree view of the screen shown in Figure 1.
<p><b><font color="#FF0000">Specify the JNDI name</font></b>
<p>The next step is to specify the JNDI name of the bean.
<p><font color="#3366FF">Select the <i>JNDI Names</i> tab.</font>
<p>This will cause the screen to change to look something like Figure 2.
<center>
<p><img SRC="java1315g.gif" height=350 width=400>
<p>Figure 2&nbsp; JNDI Name Screen</center>

<p><font color="#3366FF">Type <b>MyHello</b></font> in the JNDI Names field
and <font color="#3366FF">press the Enter key</font><font color="#000000">
on your keyboard</font>.
<p><b><font color="#FF0000">Deploy the application</font></b>
<p>The next step is to actually deploy the application.
<p>To do this, <font color="#3366FF">select the <i>Tools</i> </font>pulldown
menu.
<p>Then <font color="#3366FF">select <i>Deploy Application</i></font> from
the Tools pulldown menu.
<p>This will cause a screen to appear that looks something like Figure
3.
<center>
<p><img SRC="java1315h.gif" height=400 width=400>
<p>Figure 3&nbsp; Screen Used to Specify Server to Deploy to.</center>

<p><b><font color="#FF0000">Specify the J2EE server</font></b>
<p>On this screen, <font color="#3366FF">verify</font> that the Target
Server selection near the center of the screen is either <font color="#3366FF">"localhost"
(or</font><i> the name of the host running the J2EE server)</i>.&nbsp;
If you have been following the instructions in these lessons up to this
point, it should be "localhost."
<p><b><font color="#FF0000">Check <i>Return Client Jar</i></font></b>
<p>Next, you should <font color="#3366FF">select the checkbox</font> entitled
<i>Return
Client Jar</i>.
<p>This will cause the appearance of the screen to change to something
like that shown in Figure 4 where an additional text field has been added
at the bottom of the screen.
<center>
<p><img SRC="java1315i.gif" height=400 width=400>
<p>Figure 4&nbsp; Modified Screen Showing Client Jar File Name</center>

<p><b><font color="#FF0000">Specify path for the client jar file</font></b>
<p><font color="#3366FF">Enter the full path name</font> for the file <b>HelloAppClient.jar</b>
in the text field that appears near the bottom of the screen.
<p>This jar file will be needed later when we build a client application
that accesses the bean.
<p>This path will specify where you would like for this jar file to reside.&nbsp;
For this example, you can simply accept the default path already in the
field.
<p><b><font color="#FF0000">Get the JNDI Name Verification screen</font></b>
<p><font color="#3366FF">Click <i>Next</i></font> to proceed to the next
screen, which should look something like Figure 5.
<center>
<p><img SRC="java1315j.gif" height=400 width=400>
<p>Figure 5&nbsp; JNDI Name Verification Screen</center>

<p>On this screen, you should <font color="#3366FF">verify</font> that
the JNDI name for the HelloBean is <b>MyHello</b>.
<p><b><font color="#FF0000">Get the Completion screen</font></b>
<p><font color="#3366FF">Click <i>Next</i></font> to proceed to a screen
that looks like Figure 6.
<center>
<p><img SRC="java1315k.gif" height=400 width=400>
<p>Figure 6&nbsp; Completion Screen</center>

<p>This screen contains some information about the status of your efforts.&nbsp;
Assuming that the text reads "Click Finish to deploy the application,"
<p><font color="#3366FF">Click <i>Finish</i></font> on this screen.
<p><b><font color="#FF0000">The Deployment Progress screen</font></b>
<p>That should cause the application to be deployed and a deployment progress
screen that looks something like Figure 7 should appear.
<center>
<p><img SRC="java1315m.gif" height=350 width=400>
<p>Figure 7&nbsp; Final Deployment Progress Screen</center>

<p>A lot of work is being done as these progress bars move up the screen.&nbsp;
If everything goes well, both the blue bar and the green bar should progress
to the top with no error messages being generated.
<p><font color="#3366FF">Click <i>OK</i></font> when both bars reach the
top, indicating that the deployment is complete.
<p><b><font color="#FF0000">Back to the J2EE Deployment Tool Main Screen</font></b>
<p>This will take you back to the <font color="#000000">J2EE Deployment
Tool Main Screen</font> shown in Figure 1.
<p><b><font color="#FF0000">Terminate the program</font></b>
<p><font color="#3366FF">Choose <i>Exit</i></font> on the <i>File</i> menu
of the screen shown in Figure 1 to terminate the Application Deployment
Tool.
<p><font color="#3366FF">Enter <b>j2ee -stop</b></font> at the command
prompt to terminate the J2EE server.
<p><b><font color="#FF0000">Your Enterprise Bean has been deployed</font></b>
<p>The new application and its associated Enterprise Bean have now been
deployed in your J2EE server.&nbsp; If you had a client program ready to
run at this point, you could access the server and execute the business
method of the bean.
<p>I will show you how to write such a client program in the next lesson.
<p><b><font color="#FF0000">Your application file</font></b>
<p>At this point, you also have an application file named <b>HelloApp.ear</b>,
which contains the following files:
<ul>
<li>
meta-inf\manifest.mf</li>

<li>
meta-inf\application.xml</li>

<li>
meta-inf\sun-j2ee-ri.xml</li>

<li>
ejb-jar-ic.jar</li>
</ul>
The manifest file is empty.
<p><b><font color="#FF0000">The application.xml file</font></b>
<p>The <b>application.xml</b> file contains the text shown in Listing 1.&nbsp;
Note that I have manually entered some line breaks to force this material
to fit in this format.&nbsp; <i>(I also added boldface and color for emphasis.)</i>
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&lt;?xml
version="1.0" encoding="Cp1252"?></font></font>
<p><font face="Courier New,Courier"><font size=-2>&lt;!DOCTYPE application&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>PUBLIC '-//Sun Microsystems,
Inc.//DTD J2EE Application 1.2//EN' 'http://java.sun.com/j2ee/dtds/</font></font>
<br><font face="Courier New,Courier"><font size=-2>application_1_2.dtd'></font></font>
<p><b><font face="Courier New,Courier"><font size=-2>&lt;application></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; <font color="#FF0000">&lt;display-name>HelloApp&lt;/display-name></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; <font color="#009900">&lt;description>Application
description</font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#009900"><font size=-2>&nbsp;
&lt;/description></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; <font color="#3333FF">&lt;module></font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#3333FF"><font size=-2>&nbsp;&nbsp;&nbsp;
&lt;ejb>ejb-jar-ic.jar&lt;/ejb></font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#3333FF"><font size=-2>&nbsp;
&lt;/module></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&lt;/application></font></font></b>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 1</font></font></b></td>
</tr>
</table>

<p>At this point, you can ignore everything near the top that I haven't
highlighted in boldface.&nbsp; <i>(For more information on XML, see the
consolidated index on my <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">web
site</a>.)</i>
<p><b><font color="#FF0000">The application element</font></b>
<p>The <i>application</i> element is highlighted in boldface.&nbsp; I used
color to help separate the three elements that are nested inside the <i>application</i>
element.
<p>The boldface material indicates that this is an application with the
<i>display-name</i>
and <i>description</i> shown and containing a single
<i>moduleI,</i> which
is an ejb jar file.
<p><i>(Presumably, if I had also added web components in addition to the
Enterprise Bean, additional modules would be identified in the XML file.)</i>
<p><b><font color="#FF0000">The file named sun-j2ee-ri.xml</font></b>
<p>The contents of the file named sun-j2ee-ri.xml are shown in Listing
2.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&lt;?xml
version="1.0" encoding="Cp1252"?></font></font>
<p><font face="Courier New,Courier"><font size=-2>&lt;j2ee-ri-specific-information></font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; &lt;server-name>&lt;/server-name></font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; &lt;rolemapping
/></font></font>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; &lt;enterprise-beans></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
&lt;ejb></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp; <font color="#FF0000">&lt;ejb-name>HelloBean&lt;/ejb-name></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp; <font color="#3333FF">&lt;jndi-name>MyHello&lt;/jndi-name></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
&lt;/ejb></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; &lt;/enterprise-beans></font></font></b>
<br><font face="Courier New,Courier"><font size=-2>&lt;/j2ee-ri-specific-information></font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 2</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">The enterprise-beans element</font></b>
<p>This XML file contains information about things that we haven't discussed
yet.&nbsp; However, you will probably recognize the
<i>enterprise-beans</i>
element highlighted in boldface.
<p>You will also probably recognize the red <i>ejb-name</i> and blue <i>jndi-name</i>
elements nested inside the <i>enterprise-beans</i> element.
<p><b><font color="#FF0000">The Enterprise Bean jar file</font></b>
<p>The file named <b>ejb-jar-ic.jar</b> in the above list of files is the
jar file containing the Enterprise Bean.&nbsp; The following files are
encapsulated in this jar file:
<ul>
<li>
Hello.class</li>

<li>
HelloBean.class</li>

<li>
HelloHome.class</li>

<li>
meta-inf\ejb-jar.xml</li>

<li>
meta-inf\manifest.mf</li>
</ul>
You will probably recognize the first three of these files as the compiled
class files for the program source code that is provided near the end of
this lesson.
<p><b><font color="#FF0000">The manifest file</font></b>
<p>Again, the manifest file is essentially empty, except that it does contain
the single line of text shown in listing 3.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>Manifest-Version:
1.0</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 3</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">The deployment descriptor file</font></b>
<p>The contents of the deployment descriptor file named <b>ejn-jar.xml</b>
are shown in Listing 4.&nbsp; <i>(Again, I manually entered some line breaks
to force the material to fit in this narrow format.)</i>
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&lt;?xml
version="1.0" encoding="Cp1252"?></font></font>
<p><font face="Courier New,Courier"><font size=-2>&lt;!DOCTYPE ejb-jar
PUBLIC '-//Sun Microsystems,</font></font>
<br><font face="Courier New,Courier"><font size=-2>nc.//DTD Enterprise
JavaBeans 1.1//EN' 'http://java.sun.com/j2ee/dtds/ejb-jar_1_1.dtd'></font></font>
<p><b><font face="Courier New,Courier"><font size=-2>&lt;ejb-jar></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; <font color="#009900">&lt;description></font><font color="#000000">Hello
Bean</font><font color="#009900">&lt;/description></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp; <font color="#3333FF">&lt;display-name></font><font color="#000000">HelloJAR</font><font color="#3333FF">&lt;/display-name></font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#FF0000"><font size=-2>&nbsp;
&lt;enterprise-beans></font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#009900"><font size=-2>&nbsp;&nbsp;&nbsp;
&lt;session></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#3333FF">&lt;description></font><font color="#000000">A
hello bean</font><font color="#3333FF">&lt;/description></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#993366">&lt;display-name></font><font color="#000000">HelloBean</font><font color="#993366">&lt;/display-name></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#3333FF">&lt;ejb-name></font><font color="#000000">HelloBean</font><font color="#3333FF">&lt;/ejb-name></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#993366">&lt;home></font><font color="#000000">HelloHome</font><font color="#993366">&lt;/home></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#3333FF">&lt;remote></font><font color="#000000">Hello</font><font color="#3333FF">&lt;/remote></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#993366">&lt;ejb-class></font><font color="#000000">HelloBean</font><font color="#993366">&lt;/ejb-class></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#3333FF">&lt;session-type></font><font color="#000000">Stateful</font><font color="#3333FF">&lt;/session-type></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#009900">&nbsp;&nbsp;
</font><font color="#993366">&lt;transaction-type></font><font color="#000000">Bean</font><font color="#993366">&lt;/transaction-type></font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#009900"><font size=-2>&nbsp;&nbsp;&nbsp;
&lt;/session></font></font></font></b>
<br><b><font face="Courier New,Courier"><font color="#FF0000"><font size=-2>&nbsp;
&lt;/enterprise-beans></font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2>&lt;/ejb-jar></font></font></b>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 4</font></font></b></td>
</tr>
</table>

<p>This is the deployment descriptor file for the Enterprise Bean. <i>(Once
again, I have used color in an attempt to visually separate the elements
in the XML document.)</i>
<p>Although you probably don't have the detailed knowledge at this point
to understand everything in Listing 4, you will probably see some glimmer
of recognition for all of the elements except perhaps the <i>transaction-type</i>
element.&nbsp; I will be discussing transaction processing and how that
effects Enterprise Beans in future lessons.
<center>
<h2>
<a NAME="Summary"></a>Summary</h2></center>
<font color="#000000">The following three steps are required to deploy
your bean into the J2EE server:</font>
<ol>
<li>
<font color="#000000">Create the J2EE Application</font></li>

<li>
<font color="#000000">Package the Enterprise Bean</font></li>

<li>
<font color="#000000">Deploy the J2EE Application</font></li>
</ol>
<font color="#000000">Previous lessons showed you how to accomplish the
first two of these steps.&nbsp; This lesson showed you how to accomplish
the third step.&nbsp; This involved several operations, including:</font>
<ul>
<li>
<font color="#000000">Starting the J2EE server and the deployment tool</font></li>

<li>
<font color="#000000">Learning a little about JNDI</font></li>

<li>
<font color="#000000">Confirming the correct application</font></li>

<li>
<font color="#000000">Specifying the JNDI name</font></li>

<li>
<font color="#000000">Actually deploying the application</font></li>

<li>
<font color="#000000">Creating a client jar file</font></li>

<li>
<font color="#000000">Completing the deployment process</font></li>
</ul>
<font color="#000000">Once the application had been deployed, I showed
and briefly discussed the contents of several of the files created by the
deployment process.</font>
<center>
<h2>
<a NAME="Where To From Here"></a>Where To From Here?</h2></center>
In the next lesson, I will show you how to write a client program that
executes the bean that you have installed in the J2EE server.
<center>
<h2>
<a NAME="Complete Program Listings"></a>Complete Program Listings</h2></center>
A complete listing of the bean program is shown in Listing 5 below.&nbsp;
Complete listings of the remote and home interfaces are shown in Listing
6 and Listing 7.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>/*
File HelloBean.java</font></font>
<br><font face="Courier New,Courier"><font size=-2>Copyright 2000 R.G.Baldwin</font></font>
<br><font face="Courier New,Courier"><font size=-2>Rev 9/15/00</font></font>
<p><font face="Courier New,Courier"><font size=-2>This bean receives and
returns a String object</font></font>
<br><font face="Courier New,Courier"><font size=-2>via a single business
method.&nbsp; It also displays</font></font>
<br><font face="Courier New,Courier"><font size=-2>information about its
life cycle in the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>System.out log file
or on the system comsole</font></font>
<br><font face="Courier New,Courier"><font size=-2>depending on whether
or not System.out has been</font></font>
<br><font face="Courier New,Courier"><font size=-2>directed to the log
files.</font></font>
<p><font face="Courier New,Courier"><font size=-2>This is a stateless session
bean.&nbsp; According to</font></font>
<br><font face="Courier New,Courier"><font size=-2>Sun, a session bean
must meet the following</font></font>
<br><font face="Courier New,Courier"><font size=-2>reuirements:</font></font>
<p><font face="Courier New,Courier"><font size=-2>Implement the SessionBean
interface.</font></font>
<br><font face="Courier New,Courier"><font size=-2>Class is defined as
public.</font></font>
<br><font face="Courier New,Courier"><font size=-2>Class cannot be defined
as abstract or final.</font></font>
<br><font face="Courier New,Courier"><font size=-2>Implements one or more
ejbCreate methods.</font></font>
<br><font face="Courier New,Courier"><font size=-2>Implements the business
methods.</font></font>
<br><font face="Courier New,Courier"><font size=-2>Contains a public constructor
with no&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; parameters.</font></font>
<br><font face="Courier New,Courier"><font size=-2>Must not define the
finalize method.</font></font>
<p><font face="Courier New,Courier"><font size=-2>Tested using Sun j2ee
and JDK 1.3 under&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>WinNT 4.0 workstation.</font></font>
<br><font face="Courier New,Courier"><font size=-2>***********************************************/</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.ejb.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import java.util.Date;</font></font>
<p><font face="Courier New,Courier"><font size=-2>public class HelloBean
implements SessionBean{</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; SessionContext
ctx;</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public void ejbCreate(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; System.out.println("HelloBean
Created "&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
+ new Date());</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end ejbCreate()</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public String
aBusinessMethod(String str){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; return
"Hello " + str;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end aBusinessMethod()</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public void ejbRemove(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; System.out.println("HelloBean
Removed "&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
+ new Date());</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end ejbRemove()</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public void ejbActivate(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; System.out.println("HelloBean
Activated "&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
+ new Date());</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end ejbActivate()</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public void ejbPassivate(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; System.out.println("HelloBean
Passivated "&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
+ new Date());</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//ejbPassivate()</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public void setSessionContext(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SessionContext ctx){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; this.ctx
= ctx;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; System.out.println(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"HelloBean got SessionContext "&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
+ new Date());</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//setSessionContext()</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public HelloBean(){}//public
constructor</font></font>
<p><font face="Courier New,Courier"><font size=-2>}//end class HelloBean</font></font>
<br>&nbsp;
<p><b><font face="Courier New,Courier"><font size=-2>Listing 5</font></font></b></td>
</tr>
</table>

<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>/*
File HelloHome.java&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>Copyright 2000 R.G.Baldwin</font></font>
<br><font face="Courier New,Courier"><font size=-2>Rev 9/15/00</font></font>
<br><font face="Courier New,Courier"><font size=-2>***********************************************/</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.ejb.*;</font></font>
<p><font face="Courier New,Courier"><font size=-2>public interface HelloHome
extends EJBHome{</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; public Hello
<b>create()</b></font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
throws java.rmi.RemoteException,&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
javax.ejb.CreateException;</font></font>
<br><font face="Courier New,Courier"><font size=-2>}//end interface</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 6</font></font></b></td>
</tr>
</table>

<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>/*
File Hello.java</font></font>
<br><font face="Courier New,Courier"><font size=-2>Copyright 2000 R.G.Baldwin</font></font>
<br><font face="Courier New,Courier"><font size=-2>Rev 9/15/00</font></font>
<br><font face="Courier New,Courier"><font size=-2>***********************************************/</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.ejb.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import java.rmi.*;</font></font>
<p><font face="Courier New,Courier"><font size=-2>public interface Hello
extends EJBObject{</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; String <b>aBusinessMethod(String
s)</b></font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
throws RemoteException;</font></font>
<br><font face="Courier New,Courier"><font size=-2>}//end interface</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 7</font></font></b></td>
</tr>
</table>

<p>
<hr size=3 width="100%" align=center>
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without express written permission from Richard
Baldwin is prohibited.
<h4>
<a NAME="BaldwinBio"></a>About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
