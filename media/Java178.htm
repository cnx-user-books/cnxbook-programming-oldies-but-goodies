<html><head>
   <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
   <meta name="generator" content="mozilla/4.04 [en] (win95; i) [netscape]">
   <meta name="author" content="richard g. baldwin">
   <title>... in Java by Richard G Baldwin</title></head><body><!--start-->

<center><h3><b><i>Richard G Baldwin (512) 223-4758, <a href="mailto:baldwin@austin.cc.tx.us">baldwin@austin.cc.tx.us</a>,
<a href="http://www2.austin.cc.tx.us/baldwin/">http://www2.austin.cc.tx.us/baldwin/</a></i></b></h3></center>

<center><h2><b><!--title-->JDK 1.1, Lightweight Components, Exercising the Lightweight 3D Button
Class<!--endtitle--></b></h2></center>
Java Programming, Lecture Notes # 178, Revised 02/24/98.
<ul><li><a href="#preface">Preface</a></li>

<li><a href="#introduction">Introduction</a></li>

<li><a href="#the lightweight button in a flowlayout manager">The Lightweight
Button in a FlowLayout Manager</a></li>

<ul><li><a href="#program listing in the flowlayout manager">Program Listing in
the FlowLayout Manager</a></li></ul>

<li><a href="#the lightweight button in a borderlayout manager">The Lightweight
Button in a BorderLayout Manager</a></li>

<ul><li><a href="#program listing in the borderlayout manager">Program Listing
in the BorderLayout Manager</a></li></ul>

<li><a href="#the lightweight button in a gridlayout manager">The Lightweight
Button in a GridLayout Manager</a></li>

<ul><li><a href="#program listing in the gridlayout manager">Program Listing in
the GridLayout Manager</a></li></ul></ul>

<hr align=left width="100%"><center><h2><a name="preface"></a><b><font color="#ff0000">Preface</font></b></h2></center>
Students in Prof. Baldwin's <b>Advanced Java Programming</b> classes at
ACC are responsible for knowing and understanding all of the material in
this lesson.
<center><h2><a name="introduction"></a><font color="#ff0000">Introduction</font></h2></center>
A previous lesson developed and discussed a lightweight 3D button class
that mimics a heavyweight button in many respects. That lesson did not
provide the code necessary to exercise the lightweight button class. This
lesson provides several different applications designed to exercise the
lightweight button under different layout managers. This provides the opportunity
to see how the button behaves when it is required to take on different
sizes and shapes.
<center><h2><a name="the lightweight button in a flowlayout manager"></a><font color="#ff0000">The
Lightweight Button in a FlowLayout Manager</font></h2></center>
You will probably need to compile and run this program to appreciate what
it does.

<p>This program requires access to the class named <b>LWButton01 </b>which
is a lightweight 3D button class.

<p>The purpose of the program is to exercise the lightweight button class
named <b>LWButton01 </b>under a <b>FlowLayout </b>manager which attempts
to honor the preferred size in both dimensions whenever possible.

<p>The program places two lightweight buttons and a heavyweight button
in a <b>Frame </b>object using a <b>FlowLayout </b>manager.

<p>An action listener object is registered on all three of the button objects.

<p>Whenever the user clicks an any of the three buttons, the background
color of the <b>Frame </b>object <u>toggles between two different colors</u>.

<p>Since the color of the lightweight buttons is tied to the color of the
background, the lightweight buttons also change color when the background
color changes. This gives you an opportunity to observe the 3D effect of
the highlights and shadows under two different color schemes.

<p>The program confirms proper operation of the <b>setLabel()</b> and <b>getLabel()</b>
methods of the <b>LWButton01 </b>class. It also demonstrates the <b>preferredSize
</b>aspect of the class as well.

<p>This and the following two programs demonstrate that the lightweight
button is <u>much more responsive</u> to rapid mouse clicks than the heavyweight
button, at least that is true using JDK 1.1.3 under Win95 on a machine
with a 133 mhz Pentium processor.

<p>With the possible exception of an anonymous inner-class <b>WindowListener</b>,
the code in this program is very straightforward so there is no need to
highlight it in fragments as we often do. The primary purpose of providing
this code is to give you an application that you can use to exercise the
lightweight button in a <b>FlowLayout</b> manager and observe how it behaves.
<center><h3><a name="program listing in the flowlayout manager"></a><font color="#ff0000">Program
Listing in the FlowLayout Manager</font></h3></center>
The program listing follows. Some interesting code fragments are highlighted
in boldface.
<table border bgcolor="#ffff80" ><tr><td><pre>/* File Lightweight04.java Copyright 1997, R.G.Baldwin
You will probably need to compile and run this program
to appreciate what it does.

This program requires <b>access </b>to the class named <b>LWButton01
</b>which is a lightweight 3D button class.

This program was tested using JDK 1.1 under Win95.
*/
//=======================================================//
import java.awt.*;
import java.awt.event.*;
//=======================================================//
public class <b>Lightweight04 </b>extends Frame {
&nbsp; public static void main(String[] args){
&nbsp;&nbsp;&nbsp; new Lightweight04();//instantiate an object of this type
&nbsp; }//end main

&nbsp; //-----------------------------------------------------//
&nbsp; public Lightweight04(){//constructor
&nbsp;&nbsp;&nbsp; this.setTitle("Copyright 1997, R.G.Baldwin");

&nbsp;&nbsp;&nbsp; //<b>Set background to a dull color
</b>&nbsp;&nbsp;&nbsp; this.setBackground(new Color(128,128,0));
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Set the layout to a <b>FlowLayout </b>so that the <b>preferred
&nbsp;&nbsp;&nbsp; </b>// <b>size</b> of the components will be honored.
&nbsp;&nbsp;&nbsp; this.setLayout(new FlowLayout());

&nbsp;&nbsp;&nbsp; //<b>Instantiate some lightweight button objects</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; LWButton01 oneLWButton = new LWButton01("Dick");
&nbsp;&nbsp;&nbsp; LWButton01 anotherLWButton = new LWButton01();
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //<b>Confirm that getLabel() and setLabel() work properly
</b>&nbsp;&nbsp;&nbsp; anotherLWButton.setLabel(oneLWButton.getLabel()&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + " Baldwin");
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //<b>Instantiate a heavyweight button
</b>&nbsp;&nbsp;&nbsp; Button myButton = new Button("Heavyweight Button");

&nbsp;&nbsp;&nbsp; //<b>Add the buttons to the container</b>&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(oneLWButton);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(anotherLWButton);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(myButton);

&nbsp;&nbsp;&nbsp; //<b>Instantiate an action listener object and register
&nbsp;&nbsp;&nbsp; </b>// <b>it on all three buttons.
</b>&nbsp;&nbsp;&nbsp; MyActionListener myActionListener =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new MyActionListener();
&nbsp;&nbsp;&nbsp; oneLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; anotherLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; myButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.setSize(300,100);
&nbsp;&nbsp;&nbsp; this.setVisible(true);

&nbsp;&nbsp;&nbsp; //<b>Anonymous inner-class listener</b> to terminate program
&nbsp;&nbsp;&nbsp; this.addWindowListener(new WindowAdapter(){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);}});//end addWindowListener
&nbsp; }//end constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end class Lightweight04
//=======================================================//
/*<b>Class to respond to action events
</b>This class responds to action events by <b>toggling </b>the
background color of the container of the source of the
event between two different colors.
*/
class MyActionListener implements ActionListener{
&nbsp;&nbsp;
&nbsp; Color color1 = new Color(0,128,128);
&nbsp; Color color2 = new Color(128,128,0);
&nbsp;&nbsp;
&nbsp; public void <b>actionPerformed</b>(ActionEvent e){
&nbsp;&nbsp;&nbsp; Component parent =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((Component)e.getSource()).getParent();
&nbsp;&nbsp;&nbsp; if(parent.<b>getBackground</b>().equals(color1))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parent.<b>setBackground</b>(color2);
&nbsp;&nbsp;&nbsp; else parent.<b>setBackground</b>(color1);
&nbsp;&nbsp;&nbsp; parent.invalidate();
&nbsp;&nbsp;&nbsp; parent.<b>repaint</b>();
&nbsp; }//end actionPerformed
}//end class MyActionListener
//=======================================================//</pre></td></tr></table>
From here, we move into the use of the <b>BorderLayout</b> manager with
the lightweight button.
<center><h2><a name="the lightweight button in a borderlayout manager"></a><font color="#ff0000">The
Lightweight Button in a BorderLayout Manager</font></h2></center>
This program also requires access to the class named <b>LWButton01 </b>which
is a lightweight 3D button class.

<p>As before, you will probably need to compile and run the program to
really appreciate what it does.

<p>The purpose of the program is to exercise the lightweight button class
named <b>LWButton01 </b>under a <b>BorderLayout </b>manager.

<p>The <b>BorderLayout </b>manager does not simultaneously honor both dimensions
of the <b>preferredSize </b>of a component in any of the five positions
of the border layout. Components in the <b>North </b>and <b>South </b>positions
probably have the vertical dimension of their <b>preferredSize </b>honored
(when possible). If you resize the container and make it too small in either
dimension, it is probably not possible to honor the <b>preferredSize</b>
in that dimension.

<p>Similarly, components in the <b>East </b>and <b>West </b>positions probably
have the horizontal dimension of their <b>preferredSize </b>honored (when
possible).

<p>Neither dimension of the <b>preferredSize </b>is honored for components
in the <b>Center</b>. Components in the <b>Center </b>simply occupy all
of the available space that is left over from placing components in the
other four positions..

<p>This program places three lightweight buttons of type <b>LWButton01</b>,
one heavyweight button of type <b>Button</b>, and a <b>Label </b>object
in a <b>Frame </b>object with a ten-pixel gap between all components.

<p>The lightweight buttons occupy the <b>East</b>, <b>North</b>, and <b>Center
</b>positions in the <b>Frame</b>.

<p>The heavyweight button occupies the <b>West </b>position.

<p>The <b>Label </b>occupies the <b>South </b>position.

<p>When you click on any of the four buttons, the <u>color of the Label
toggles between red and green</u>.

<p>You can experiment with the manner in which the <b>preferredSize </b>is
or is not honored by resizing the <b>Frame</b>.

<p>Note that this program makes use of a named inner class for the <b>ActionListener</b>
object. Use of a named inner class for this purpose makes it possible for
code in the listener object to refer directly to the <b>Label</b> object
to toggle its color without the requirement to pass parameters to the constructor,
or disassemble the <b>ActionEvent</b> object in an attempt to gain access
to the <b>Label</b>. That makes it very convenient to use.

<p>The program also uses an <b>anonymous </b>inner class to service the
<i>close</i> button on the <b>Frame</b> object.

<p>All of the code in this program has been discussed in earlier lessons.
Therefore, we won't break it up into fragments, but will simply highlight
interesting parts using boldface in the following program listing.

<p>This program was tested using JDK 1.1.3 under Win95.
<center><h3><a name="program listing in the borderlayout manager"></a><font color="#ff0000">Program
Listing in the BorderLayout Manager</font></h3></center>
The complete program listing along with highlighted fragments follows.
<table border bgcolor="#ffff80" ><tr><td><pre>/* File Lightweight05.java Copyright 1997, R.G.Baldwin
This program requires access to the class named LWButton01
which is a lightweight 3D button class.

This program was tested using JDK 1.1.3 under Win95.
*/
//=======================================================//
import java.awt.*;
import java.awt.event.*;
//=======================================================//
public class <b>Lightweight05 </b>extends Frame{
&nbsp; Label myLabel;
&nbsp;&nbsp;
&nbsp; public static void main(String[] args){
&nbsp;&nbsp;&nbsp; new Lightweight05();//instantiate object of this type
&nbsp; }//end main

//-------------------------------------------------------//
&nbsp; public Lightweight05(){//constructor
&nbsp;&nbsp;&nbsp; this.setTitle("Copyright 1997, R.G.Baldwin");
&nbsp;&nbsp;&nbsp; //Set background to a <b>dull yellow
</b>&nbsp;&nbsp;&nbsp; this.setBackground(new Color(128,128,0));
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Create a <b>borderLayout object with gaps</b> and apply
&nbsp;&nbsp;&nbsp; // it to the Frame object.
&nbsp;&nbsp;&nbsp; BorderLayout myLayout = new BorderLayout();
&nbsp;&nbsp;&nbsp; myLayout.setHgap(10);
&nbsp;&nbsp;&nbsp; myLayout.setVgap(10);
&nbsp;&nbsp;&nbsp; this.setLayout(myLayout);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Instantiate three lightweight buttons
</b>&nbsp;&nbsp;&nbsp; LWButton01 eastLWButton = new LWButton01("East");
&nbsp;&nbsp;&nbsp; LWButton01 northLWButton = new LWButton01("North");
&nbsp;&nbsp;&nbsp; LWButton01 centerLWButton = new LWButton01("Center");
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Instantiate a Label object and initialize it to green
</b>&nbsp;&nbsp;&nbsp; myLabel = new Label("Label Object");
&nbsp;&nbsp;&nbsp; myLabel.setBackground(Color.green);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Instantiate a heavyweight button object
</b>&nbsp;&nbsp;&nbsp; Button myButton = new Button("Heavyweight Button");
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Add all five components to the Frame object.
</b>&nbsp;&nbsp;&nbsp; this.add(eastLWButton,"East");&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(northLWButton,"North");&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(centerLWButton,"Center");
&nbsp;&nbsp;&nbsp; this.add(myButton,"West");
&nbsp;&nbsp;&nbsp; this.add(myLabel,"South");

&nbsp;&nbsp;&nbsp; <b>//Instantiate an ActionListener object
</b>&nbsp;&nbsp;&nbsp; MyActionListener myActionListener =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new MyActionListener();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Register the ActionListener object on all four
&nbsp;&nbsp;&nbsp; // of the buttons.</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; eastLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; northLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; centerLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; myButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.setSize(300,200);
&nbsp;&nbsp;&nbsp; this.setVisible(true);

&nbsp;&nbsp;&nbsp; <b>//Anonymous inner-class listener</b> to terminate program
&nbsp;&nbsp;&nbsp; this.addWindowListener(new WindowAdapter(){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);}});//end addWindowListener
&nbsp; }//end constructor
&nbsp; //-----------------------------------------------------//
&nbsp;&nbsp;
&nbsp; //<b>Named inner Class</b> to respond to action events. Make&nbsp;
&nbsp; // this an inner class for easy access to myLabel.
&nbsp; class <b>MyActionListener </b>implements ActionListener{
&nbsp;&nbsp;&nbsp; public void <b>actionPerformed</b>(ActionEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(myLabel.getBackground() == Color.green)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myLabel.setBackground(Color.red);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else myLabel.setBackground(Color.green);
&nbsp;&nbsp;&nbsp; }//end actionPerformed
&nbsp; }//end class MyActionListener
}//end class Lightweight05
//=======================================================//</pre></td></tr></table>
The primary purpose of providing this program is to give you a vehicle
for experimenting with the lightweight button in a <b>BorderLayout</b>
manager, while paying particular attention to how the lightweight button
gets resized and reshaped as you change the size and shape of the <b>Frame</b>
object.
<center><h2><a name="the lightweight button in a gridlayout manager"></a><font color="#ff0000">The
Lightweight Button in a GridLayout Manager</font></h2></center>
As with the previous two programs, this program requires access to the
class named <b>LWButton01 </b>which is a lightweight 3D button class.

<p>Again, you will probably need to compile and run the program to really
appreciate what it does.

<p>The purpose of the program is to exercise the lightweight button class
named <b>LWButton01 </b>under a <b>GridLayout </b>manager.

<p>The <b>GridLayout </b>manager <u>does not honor either dimension</u>
of the <b>preferredSize </b>of a component. Rather, all components are
displayed in a grid at the same size.

<p>This program places four lightweight buttons of type <b>LWButton01</b>,
one heavyweight button of type <b>Button</b>, and a <b>Label </b>object
in a <b>Frame </b>object with a ten-pixel gap between all components.

<p>When you click on any of the five buttons, <u>the color of the Label
toggles between red and green</u>.

<p>You can experiment with the fact that the <b>preferredSize </b>is not
honored by resizing the Frame and observing how all of the components change
their size and shape.

<p>As in the previous program, this program uses a <u>named inner class</u>
to implement an <b>ActionListener</b> object in order to make the reference
to the <b>Label</b> object more readily accessible.

<p>It also uses an <u>anonymous inner class</u> to service the <i>close</i>
button on the <b>Frame </b>object. Otherwise, there is nothing in this
program that we haven't seen many times before.
<center><h3><a name="program listing in the gridlayout manager"></a><font color="#ff0000">Program
Listing in the GridLayout Manager</font></h3></center>
Some of the interesting parts of the following program listing are highlighted
in boldface.
<table border bgcolor="#ffff80" ><tr><td><pre>/* File Lightweight06.java Copyright 1997, R.G.Baldwin
This program requires access to the class named LWButton01
which is a lightweight 3D button class.

This program was tested using JDK 1.1.3 under Win95.
*/
//=======================================================//
import java.awt.*;
import java.awt.event.*;
//=======================================================//

public class <b>Lightweight06 </b>extends Frame{
&nbsp; Label myLabel;&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp; public static void main(String[] args){
&nbsp;&nbsp;&nbsp; new Lightweight06();//instantiate object of this type
&nbsp; }//end main
//-------------------------------------------------------//

&nbsp; public Lightweight06(){//constructor
&nbsp;&nbsp;&nbsp; this.setTitle("Copyright 1997, R.G.Baldwin");
&nbsp;&nbsp;&nbsp; //Set background to a <b>dull yellow
</b>&nbsp;&nbsp;&nbsp; this.setBackground(new Color(128,128,0));
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Create a gridLayout object</b> with 10-pixel gaps and&nbsp;
&nbsp;&nbsp;&nbsp; // apply it to the Frame object; 3 rows, 2 columns.
&nbsp;&nbsp;&nbsp; GridLayout myLayout = new GridLayout(3,2,10,10);
&nbsp;&nbsp;&nbsp; this.setLayout(myLayout);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Instantiate three lightweight buttons</b>, one with a
&nbsp;&nbsp;&nbsp; // very long label to illustrate what happens to long
&nbsp;&nbsp;&nbsp; // labels in the GridLayout where preferred size is
&nbsp;&nbsp;&nbsp; // not honored.
&nbsp;&nbsp;&nbsp; LWButton01 oneLWButton = new LWButton01("Joe");
&nbsp;&nbsp;&nbsp; LWButton01 twoLWButton = new LWButton01("William");
&nbsp;&nbsp;&nbsp; LWButton01 threeLWButton = new LWButton01("Alexandria");
&nbsp;&nbsp;&nbsp; LWButton01 fourLWButton =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new LWButton01("My name is a very long label");
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; <b>//Instantiate a Label object</b> and initialize it to green
&nbsp;&nbsp;&nbsp; myLabel = new Label("Label Object");
&nbsp;&nbsp;&nbsp; myLabel.setBackground(Color.green);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<b> //Instantiate a heavyweight button</b> object
&nbsp;&nbsp;&nbsp; Button myButton = new Button("Real Button");
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<b> //Add all six components to the Frame object.
</b>&nbsp;&nbsp;&nbsp; this.add(oneLWButton);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(twoLWButton);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.add(threeLWButton);
&nbsp;&nbsp;&nbsp; this.add(fourLWButton);
&nbsp;&nbsp;&nbsp; this.add(myButton);
&nbsp;&nbsp;&nbsp; this.add(myLabel);

&nbsp;<b>&nbsp;&nbsp; //Instantiate an ActionListener object
</b>&nbsp;&nbsp;&nbsp; MyActionListener myActionListener =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new MyActionListener();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;<b> //Register the ActionListener object</b> on all five
&nbsp;&nbsp;&nbsp; // of the buttons.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; oneLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; twoLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; threeLWButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp; fourLWButton.addActionListener(myActionListener);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; myButton.addActionListener(myActionListener);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; this.setSize(300,200);
&nbsp;&nbsp;&nbsp; this.setVisible(true);

&nbsp;&nbsp;<b>&nbsp; //Anonymous inner-class</b> listener to terminate program
&nbsp;&nbsp;&nbsp; this.addWindowListener(new WindowAdapter(){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);}});//end addWindowListener
&nbsp; }//end constructor
&nbsp;&nbsp;
&nbsp; //-----------------------------------------------------//
&nbsp; <b>//Named inner class</b> to respond to action events.&nbsp; Make&nbsp;
&nbsp; // this an inner class for easy access to myLabel.
&nbsp; class <b>MyActionListener </b>implements ActionListener{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; public void actionPerformed(ActionEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(myLabel.getBackground() == Color.green)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myLabel.setBackground(Color.red);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else myLabel.setBackground(Color.green);
&nbsp;&nbsp;&nbsp; }//end actionPerformed
&nbsp; }//end class MyActionListener
&nbsp;&nbsp;
}//end class Lightweight06
//=======================================================//</pre></td></tr></table>
-end-<!--end--></body></html>