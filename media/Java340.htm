<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <title>Java Programming by Richard G Baldwin</title>
</head>
<body bgcolor="#FEFFF0" link="#0000ff" vlink="#666666" alink="#ff0000" lang="EN-US">
<font size="3" face="arial">
<h2 align="center">Multimedia Programming with Java</h2>
<h2 align="center">Getting Started</h2>
<p dir="ltr"><i>Learn how to download, install, and test a Java multimedia library 
developed by Mark Guzdial and Barbara Ericson at Georgia Tech.&nbsp; Also learn 
how to download, install, and test a lightweight Java IDE named DrJava, 
which has the ability to interactively evaluate Java code.</i></p>
<p><b>Published:</b>&nbsp; November 4, 2008<br>
<b>By <a href="mailto:Baldwin@DickBaldwin.com">Richard G. Baldwin</a></b>
</p>
<p>Java Programming Notes # 340</p>
<ul>
	<li><a href="#Preface">Preface</a></li>

	<ul>
		<li><a href="#General">General</a></li>
		<li><a href="#Preview">Preview</a></li>
		<li><a href="#Viewing_tip">Viewing tip</a><ul>
			<li><a href="#Figures">Figures</a></li>
			<li><a href="#Listings">Listings</a></li>
		</ul></li>
		<li><a href="#Supplementary_material">Supplementary material</a></li>
	</ul>
	<li><a href="#General%20Background%20Information">General
	background information</a><ul>
	<li><a href="#A_multimedia_class_library">A multimedia class library</a></li>
	<li><a href="#The_DrJava_IDE">The DrJava IDE</a></li>
</ul>
	</li>
	<li><a href="#The_multimedia_class_library">The multimedia class library</a><ul>
	<li><a href="#Installation">Installation</a></li>
	<li><a href="#Testing_">Testing</a><ul>
	<li><a href="#The_Turtle_test">The Turtle test</a></li>
	<li><a href="#The_Picture_test">The Picture test</a></li>
</ul>
	</li>
</ul>
	</li>
	<li><a href="#DrJavaIDE">The DrJava IDE</a><ul>
	<li><a href="#InstallDrJava">Installation</a></li>
	<li><a href="#TestDrJava">Testing</a><ul>
	<li><a href="#DJTurtleTest">The Turtle test</a></li>
	<li><a href="#DJPictureTest">The Picture test</a></li>
</ul>
	</li>
</ul>
	</li>
	<li><a href="#Run%20the%20program">Run the programs</a></li>
	<li><a href="#Summary">Summary</a></li>
	<li><a href="#Whats%20Next">What's next?</a></li>
	<li><a href="#Resources">Resources</a></li>
	<li><a href="#Complete%20Program%20Listings">Complete program
	listings</a></li>
	<li><a href="#Copyright">Copyright</a></li>
	<li><a href="#About_the_author">About the author</a></li>
</ul>
<hr size="3" width="100%" align="center">
<center>
<h2> <a name="Preface"></a>Preface</h2>
</center>
<h3> <a name="General">General</a></h3>
<p> Have you ever wondered how image processing programs can remove <i>redeye</i> 
from a photographic image?&nbsp; How does the weather forecaster on television 
stand in front of a changing weather map?&nbsp; How do they distort the voice of 
a secret witness in a TV documentary to disguise the identity of the witness?&nbsp; 
What about inserting cartoon characters in videos of live humans?&nbsp; If you 
have wondered about <i>multimedia</i> processes such as 
this, you've come to the right place.</p>
<p> This is the first lesson in a series of lessons designed to teach you 
how to write Java programs to accomplish these and other multimedia tasks.</p>
<h3> <a name="Preview">Preview</a></h3>
<p dir="ltr">In this lesson, you will learn about a Java multimedia library 
developed by Mark Guzdial and Barbara Ericson at Georgia Institute of 
Technology.&nbsp; You will also learn about a lightweight Java IDE named DrJava, 
which has the ability to interactively evaluate Java code.&nbsp; This IDE was 
developed by the JavaPLT group at Rice University.</p>
<p>You will learn how to download, install, and test the multimedia library and 
the DrJava IDE, both individually and in combination with one another.</p>
<h3> <a name="Viewing_tip">Viewing tip</a></h3>
<p> I recommend that you open another copy of this document in a separate 
browser window and use the following links to easily find and view the figures 
and listings while you are reading about them.</p>
<h4> <a name="Figures">Figures</a></h4>
<ul>
	<li><a href="#Figure_1">Figure 1</a>. Contents of zip file containing 
	multimedia library. </li>
	<li><a href="#Figure_2">Figure 2</a>. Documentation for the multimedia class 
	library. </li>
	<li><a href="#Figure_3">Figure 3</a>. Output from the first test program. </li>
	<li><a href="#Figure_4">Figure 4</a>. Output from the second test program. </li>
	<li><a href="#Figure_5">Figure 5</a>. The DrJava IDE.<b> </b></li>
</ul>
<h4> <a name="Listings">Listings</a></h4>
<ul>
	<li><a href="#Listing_1">Listing 1</a>. Batch file used for testing. </li>
	<li><a href="#Listing_2">Listing 2</a>. Testing DrJava interactively with the 
	turtle. </li>
	<li><a href="#Listing_3">Listing 3</a>. Source code for the program named 
	StartupTest01. </li>
	<li><a href="#Listing_4">Listing 4</a>. Source code for the program named 
	StartupTest02.</li>
</ul>
<h3 align="left"> <a name="Supplementary_material">Supplementary material</a></h3>
<p> I recommend that you also study the other lessons in my extensive collection 
of online programming tutorials.&nbsp; You will find a consolidated index at
<font
 color="#000000"> <a href="http://www.dickbaldwin.com/toc.htm">
www.DickBaldwin.com</a>.</font></p>
<h2 align="center"><font color="#000000"> <a
 name="General Background Information">General background information</a></font></h2>
<h3><a name="A_multimedia_class_library">A multimedia class library</a></h3>
<p>If you have read my previous programming tutorials, you will be 
aware that I usually develop and explain original program code.&nbsp; However, the 
lessons in this series will depart from that practice.&nbsp; In this series of 
lessons, I will present and explain many of the classes in a multimedia class 
library that was developed and released under a
<b>Creative 
Commons Attribution 3.0 United States License</b> <i>(see <a href="#Resources">Resources</a>) </i>by Mark Guzdial and Barbara 
Ericson at Georgia Institute of Technology.&nbsp; Of course, I will also present 
some interesting sample programs that use the library.</p>
<p><font color="#FF0000"><b>A textbook</b></font></p>
<p>The class library <i>(including source code)</i> was published in conjunction with an excellent textbook 
titled <i>Introduction to Computing and Programming with Java: A Multimedia Approach (see <a href="#Resources">Resources</a>)</i>.&nbsp; 
Unlike many textbook authors, Guzdial and Ericson did not hide their source code 
or their class 
library behind a password.&nbsp; As of the date of this writing, the class 
library and the source code along with a wealth of other related material is available for free 
downloading at <i>Media 
Computation book in Java (see <a href="#Resources">Resources</a>)</i>.&nbsp; The library is also included on a CD that is 
packaged with the textbook.</p>
<p><font color="#FF0000"><b>Won't duplicate the textbook</b></font></p>
<p>This series of lessons will not duplicate the material in the textbook.&nbsp; 
The textbook is written for beginning Java programming students and uses sample 
multimedia programs, along with the class library, to teach the fundamentals of 
object-oriented programming using Java.&nbsp; If you don't yet understand the 
fundamentals of object-oriented programming using Java, you should purchase the 
textbook and study it before embarking on this series of online lessons.</p>
<p>The material in this series will be much more advanced than the textbook.&nbsp; I will assume that 
you are already well acquainted with the Java/OOP fundamentals in the textbook.&nbsp; In this series, we 
examine the class library piece-by-piece and attempt 
to understand how and why objects instantiated from the classes in the library 
behave as they do.</p>
<h3><a name="The_DrJava_IDE">The DrJava IDE</a></h3>
<p>The explanations of sample programs in the textbook make heavy use of a free 
Java IDE named <b>DrJava</b> <i>(see <a href="#Resources">Resources</a>)</i>.&nbsp; I 
will also make some use of that IDE because it provides an interesting 
interactive Java programming mode.&nbsp; The interactive mode makes it easy to <i>&quot;try things out&quot;</i> without 
the requirement to write and compile a complete Java application.&nbsp; <i>(The 
IDE also provides a typical Java text editor, access to the Java compiler and 
runtime engine, a debugger, etc.)</i>&nbsp;
<p>Even though I will sometimes use DrJava, you should be able to use 
any Java IDE <i>(for the non-interactive material)</i> to compile and execute my sample programs so long as you set the classpath to include the 
media library.&nbsp; <i>(I will have more to say about the classpath later.)</i>&nbsp; 
You should also be able to avoid the use of a Java IDE altogether if you choose 
to do so.&nbsp; You can create the source code files using a simple text editor, 
and then compile and execute the sample programs from the command line.<h2 align="center"><a name="The_multimedia_class_library">The multimedia class 
library</a></h2>
<h3><a name="Installation">Installation</a></h3>
<p>The first step in installing the library is to 
<a href="http://coweb.cc.gatech.edu/mediaComp-plan/uploads/101/bookClasses10-1-07.zip">download</a> the zip file 
containing the library.&nbsp; The contents of the zip file may change over time, 
but as of the date of this writing, the zip file, which is named <b>bookClasses10-1-07.zip</b>, contains the directory tree shown in Figure 1.</p>












<p>
 <b><a name="Figure_1">Figure 1</a>. Contents of zip file containing multimedia 
	library. </b>
<table border="1" cols="1" width="477" bgcolor="#EFE9B8" >
	<tbody>
		<tr>
			<td>
<ul>
	<li>bookClasses<ul>
		<li>doc<ul>
			<li>resources<ul>
				<li>One gif file</li>
			</ul>
		</li>
		<li><b>HTML documentation files</b></li>
		</ul>
		</li>
		<li>help</li>
		<li>javazoom<ul>
			<li>Several layers of directories and files</li>
		</ul>
		</li>
		<li><b>Source, class, and jar files</b></li>
	</ul>
	</li>
</ul>
			</td>
		</tr>
	</tbody>
</table>
</p>
<p>


<table width="275" cellpadding="0" cellspacing="0" border="0" align="right">
<tr>
<td width="10">
<td>
  <table width="100%" cellpadding="5" cellspacing="0" border="1">
  <tr><td bgcolor="#eeeeee">
  <b>Saving the library files</b><br />
  As a college professor, I carry the multimedia library from one classroom to 
	the next on a USB memory stick.
</td></tr></table>
</td>
</tr>
</table>
<p><font color="#FF0000"><b>Extract and save the library files</b></font></p>
<p>You should extract the contents of the zip file, being careful to preserve 
the directory structure, and save the contents on your hard drive.&nbsp; <i>(You can 
also save those contents on a USB drive or a USB memory stick if you want to have 
a portable capability.)</i></p>
<p><font color="#FF0000"><b>Remember the location of the class library</b></font></p>
<p>You should make sure to remember where you saved the library.&nbsp; You will need that 
information to create a classpath, which I will explain later.&nbsp; In my case, 
I saved the library on the following path:</p>
<pre><b><a name="MEricsonBookClasses">M:\Ericson\bookClasses</a></b></pre></p>
<p>You will see how this information is used to construct a classpath later in 
this lesson.</p>
<p><font color="#FF0000"><b>The documentation files</b></font></p>
<p>In this series of lessons, you will interact most directly with the <b>HTML 
documentation files</b> and the <b>Source, class, and jar files</b> <i>(shown in 
boldface in Figure 1)</i>.</p>
<p>One of the HTML documentation files is named <b>index.html</b>.&nbsp; If you 
double-click on that file, standard Java documentation for the entire multimedia 
class library should appear in your browser as shown in Figure 2.</p>
<p>
 <b><a name="Figure_2">Figure 2</a>. Documentation for the multimedia class 
	library. </b>
<table border="0" cols="1" bgcolor="#EFE9B8" >
  <tbody>
    <tr>
      <td>
      <img border="0" src="java340a.jpg" width="469" height="519"></td>
    </tr>
  </tbody>
</table>
</p>
<p><font color="#FF0000"><b>The source, class, and jar files</b></font></p>
<p>We will be using the class and jar files to write sample programs and will be 
examining the source code for some of those class files in detail in this series 
of lessons.</p>
<p><font color="#FF0000"><b>Images, sounds, movies, etc.</b></font></p>
<p>The next step is to download zip files containing the images and sounds 
used in the book.&nbsp; <i>(I will use some of them in sample programs to illustrate the behavior of classes in the library.)</i>&nbsp; As of the date of this writing, the following two files 
are available for downloading:</p>
<ul>
	<li>
	<a title="mediasources-no-movies-7-30-06.zip: uploaded 30 September 2008 at 10:55 am" href="http://coweb.cc.gatech.edu/mediaComp-plan/uploads/101/mediasources-no-movies-7-30-06.zip">
	mediasources-no-movies-7-30-06.zip</a></li>
	<li>
	<a title="mediasources-movies-7-30-06.zip: uploaded 30 September 2008 at 10:55 am" href="http://coweb.cc.gatech.edu/mediaComp-plan/uploads/101/mediasources-movies-7-30-06.zip">
	mediasources-movies-7-30-06.zip</a></li>
</ul>
<p>Each zip file is about twelve megabytes in size, so unless you have disk capacity to spare, you might want to wait until we get into the 
manipulation of movies before downloading the zip file that contains the movies.</p>
<p><font color="#FF0000"><b>Extract and save the media content</b></font></p>
<p>Extract the material from one or both zip files, being careful to preserve 
the directory structure.&nbsp; Save the material on your hard drive, USB drive, or 
USB memory stick.</p>
<p>Open the directory named <b>mediasources</b> and examine 
the contents.&nbsp; You should see <i>jpg</i> files, <i>txt</i> files, <i>wav</i> files, and 
<i>html</i> 
files.&nbsp; </p>
<p>Once again, remember where you saved this material.&nbsp; You will 
need that information when you write programs that use the material.&nbsp; In my 
case, I discarded a directory named <b>students</b> and saved the directory 
named <b>mediasources</b> on the following path:</p>
<p><pre><b><a name="MEricsonMediasources">M:\Ericson\mediasources</a></b></pre></p>
<p>You will see how this information is used later in this lesson.</p>
<h3><a name="Testing_">Testing</a></h3>
<p>Now it's time to find out if you have everything <i>(including the Java JDK 
from Sun)</i> installed correctly.</p>
<p>


<table width="275" cellpadding="0" cellspacing="0" border="0" align="right">
<tr>
<td width="10">
<td>
  <table width="100%" cellpadding="5" cellspacing="0" border="1">
  <tr><td bgcolor="#eeeeee">
  <b>A Windows platform</b><br />
  These instructions are provided for persons using a Windows platform.&nbsp; Persons 
	using 
	other platforms will need to make the appropriate adjustments. 
</td></tr></table>
</td>
</tr>
</table>
<h4><b><a name="The_Turtle_test">The Turtle test</a></b></h4>
<p>Using your favorite text editor, copy the source code from Listing 3 and 
save it in a file named <b>Main.java</b> in an empty directory of your choice.</p>
<p><font color="#FF0000"><b>Create a batch file</b></font></p>
<p>Then, using your text editor, create a file named <b>RunMain.bat</b> 
containing contents similar to those shown in Listing 1 and store it in the 
directory containing <b>Main.java</b>.</p>
<p>
<b><a name="Listing_1">Listing 1</a>. Batch file used for testing. </b>
<table border="1" cols="1" width="477" bgcolor="#eeeeee">
  <tbody>
    <tr>
      <td>
      <pre>del *.class

javac -cp .;
M:\Ericson\bookClasses;
M:\Ericson\bookClasses\javazoom.jar;
M:\Ericson\bookClasses\jmf.jar;
M:\Ericson\bookClasses\sound.jar;
 Main.java

java -cp .;
M:\Ericson\bookClasses;
M:\Ericson\bookClasses\javazoom.jar;
M:\Ericson\bookClasses\jmf.jar;
M:\Ericson\bookClasses\sound.jar;
 Main

pause</pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p><font color="#FF0000"><b>Two cautions</b></font></p>
<p>Note first that I inserted line breaks immediately following each semicolon 
to make it easier for you to understand what you're looking at in Listing 1.&nbsp; You 
must remove those line breaks without inserting spaces.</p>
<p>Note also that the classpaths shown in Listing 1 reflect the location of the 
directory named <a href="#MEricsonBookClasses">bookClasses</a> on my system.&nbsp; 
You will probably need to modify those classpaths to reflect the location of the 
directory named <b>bookClasses</b> on your system.</p>
<p><font color="#FF0000"><b>No further explanation</b></font></p>
<p>At this point, I am going to assume that you know:</p>
<ul>
	<li>How to use Windows batch files.</li>
	<li>How to compile and execute Java programs from the command-line prompt.</li>
	<li>How to set the classpath in that process.</li>
</ul>
<p>Therefore, I won't provide a further explanation of the use of this batch 
file to compile and execute the Java program shown in Listing 3.</p>
<p><font color="#FF0000"><b>Run the batch file</b></font></p>
<p>If your system is set up correctly, you should be able to double-click on the 
batch file, causing the Java program to run, producing the screen output shown 
in Figure 3.</p>
<p>
 <b><a name="Figure_3">Figure 3</a>. Output from the first test program. </b>
<table border="0" cols="1" bgcolor="#ffffff" >
  <tbody>
    <tr>
      <td>
      <pre><img border="0" src="java340b.jpg" width="209" height="329"></pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p><font color="#FF0000"><b>The World and Turtle classes</b></font></p>
<p>This test program uses the <b>World</b> class and the <b>Turtle</b> class 
from the multimedia class library to produce the output shown in Figure 3.&nbsp; 
Because we will be analyzing those two classes in some detail in future lessons, 
I'm not going to go into much detail at this point.&nbsp; Suffice it to say that 
the program:</p>
<ul>
	<li>Instantiates an object of the class <b>World</b>.</li>
	<li>Instantiates an object of the class <b>Turtle</b>, placing it in the 
	center of the world.</li>
	<li>Causes the turtle to move forward by 100 pixels, leaving a green line as 
	a track showing the turtle's movements.</li>
</ul>
<p>If your output looks like Figure 3, you probably have everything set up 
correctly.</p>
<h4><a name="The_Picture_test">The Picture test</a></h4>
<p>This test is more comprehensive than the <b>Turtle</b> test described 
above.</p>
<p>Begin by copying the source code from Listing 4 into a file named <b>
Main.java</b> and save it in an empty directory.&nbsp; Modify the following statement 
in the source code to cause 
the statement to point to the 
location of your directory named <b>mediasources</b> instead of 
<a href="#MEricsonMediasources">mine</a>.&nbsp; <i>(Note the use for forward 
slashes instead of backward slashes.)</i></p>
<pre><b>FileChooser.setMediaPath(&quot;M:/Ericson/mediasources/");</b></pre></p>
<p>Copy the batch file from the previous test into the same directory as your 
new source code file and 
double-click on the batch file.&nbsp; This should cause the program to compile and run, 
producing the screen output shown in Figure 4.</p>
<p>
 <b><a name="Figure_4">Figure 4</a>. Output from the second test program. </b>
<table border="0" cols="1" bgcolor="#ffffff" >
  <tbody>
    <tr>
      <td>
      <pre><img border="0" src="java340c.jpg" width="431" height="526"></pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p><font color="#FF0000"><b>Was it successful?</b></font></p>
<p>This test program exercises quite a bit more of the class library than the 
turtle test.&nbsp; If your output matches Figure 4, this will greatly increase 
the probability that you have everything set up properly.</p>
<p>Once again, I will be explaining the various classes and methods involved in 
this test program in future lessons, so I won't provide an explanation here.&nbsp; 
The primary purpose of this lesson is to help you get your system set up so that 
you will be able to participate in future lessons.</p>
<h2 align="center"><a name="DrJavaIDE">The DrJava IDE</a></h2>
<h3><a name="InstallDrJava">Installation</a></h3>
<p>As of the date of this writing, you can

<a href="http://drjava.sourceforge.net/">download</a> any of the following files to 
obtain the DrJava IDE:</p>
<ul>
	<li>Jar File</li>
	<li>Windows App</li>
	<li>Mac OS X App</li>
</ul>
<p><font color="#FF0000"><b>A Java application</b></font></p>
<p>DrJava is a Java application.&nbsp; Even though I am running under 
Windows Vista, I elected to download the Jar File and to run it as a Java application 
instead of running it as a Windows App.&nbsp; 
The file that I downloaded is named <b>drjava-stable-20080904-r4668</b>.&nbsp; 
Download the jar file and store it anywhere on your disk.</p>
<p><font color="#FF0000"><b>Starting DrJava</b></font></p>
<p>I start DrJava running by issuing the following command at a command-line prompt 
in the directory containing the jar file:</p>
<p><pre><b>java -jar drjava-stable-20080904-r4668.jar</b></pre></p>
<p>For ease of use, I put this statement in a batch file in the directory 
containing the jar file and created a desktop 
shortcut to the batch file.&nbsp; This allows me to start it running simply by 
double-clicking the shortcut.</p>
<p>If you choose to take this approach, you may get a later version with a different file 
name but you should be able to run it essentially the same way that I do making 
certain that you reference the correct file name.</p>
<p>When you start DrJava, the IDE shown in Figure 5 should appear on your 
screen.</p>
<p>
 <b><a name="Figure_5">Figure 5</a>. The DrJava IDE. </b>
<table border="0" cols="1" bgcolor="#ffffff" >
  <tbody>
    <tr>
      <td>
      <pre><img border="0" src="java340d.jpg" width="470" height="569"></pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p><font color="#FF0000"><b>Interactive mode</b></font></p>
<p>Except for the availability of the interactive mode, this IDE is similar to other lightweight IDEs.&nbsp; 
The use of the IDE is fairly intuitive.&nbsp; To run 
in interactive mode, you select the <b>Interactions</b> tab at the bottom left 
in Figure 5 and 
enter Java expressions at the prompts.&nbsp; If you don't follow the expression 
with a semicolon, any <i>(text)</i> output produced by the expression is 
displayed on the next line following the expression.&nbsp; If you do enter a semicolon, the output is not 
displayed.</p>
<p>The <b>Reset</b> button at the top clears the interactive 
memory.</p>
<p><font color="#FF0000"><b><a name="Setting_the_classpath_in_DrJava">Setting the classpath in DrJava</a></b></font><p>
You 
can set the classpath in DrJava by selecting 
the <b>Edit/Preferences</b> menu and then using the <b>Add</b> button to add the 
following directory and jar files to the classpath:</p><ul>
	<li>...\bookClasses</li>
<li>...\bookClasses\javazoom.jar</li>
	<li>...\bookClasses\jmf.jar</li>
<li>...\bookClasses\sound.jar</li>
</ul>
<p>You will need to replace the ellipses in the above list with your path to the 
directory 
named <b>bookClasses</b>.</p>
<h3><a name="TestDrJava">Testing</a></h3>
<h3><a name="DJTurtleTest">The Turtle test</a></h3>
<p><font color="#FF0000"><b>Interactive Turtle test</b></font></p>
<p>Select the <b>Interactions</b> pane at the bottom left of the DrJava IDE 
shown in Figure 5 and 
enter the three commands shown in Listing 2.</p>
<p>
<b><a name="Listing_2">Listing 2</a>. Testing DrJava interactively with the turtle. </b>
<table border="1" cols="1" width="477" bgcolor="#eeeeee">
  <tbody>
    <tr>
      <td>
      <pre>> World mars = new World(200,300);
> Turtle joe = new Turtle(mars);
> joe.forward();</pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p>When you enter the first command, the <b>World</b> object shown in Figure 3 
should appear without the turtle.</p>
<p>When you enter the second command, the <b>Turtle</b> object should appear in 
the center of the world.</p>
<p>When you enter the third command, the turtle should move forward by 100 
pixels drawing the green line in the process.</p>
<p><font color="#FF0000"><b>Compiled Turtle test</b></font></p>
<p>Copy the source code from Listing 3 into the text editor panel in DrJava.&nbsp; 
Then click the <b>Compile</b> button at the top of the IDE.&nbsp; If there 
are compile errors, they will appear in the <b>Compiler Output</b> tab at the 
bottom.</p>
<p>Correct any compile errors and then click the <b>Run</b> button at the top of 
the IDE.&nbsp; If there are no runtime errors, the world containing the 
turtle with the vertical green line shown in Figure 3 should appear on the 
screen.</p>
<h3><a name="DJPictureTest">The Picture test</a></h3>
<p>Select <b>File/Close All</b> to prepare DrJava for a new program.&nbsp; Then 
copy the source code in Listing 4 into the text edit area of DrJava.&nbsp; 
Compile and run the program.&nbsp; If there are no errors, the picture shown in 
Figure 4 should appear on the screen.</p>
<p>If you can perform all of the above tests successfully, that is a very good 
indication that both the multimedia library and the DrJava IDE are properly 
installed on your system.</p>
<center>
<h2><a name="Run the program"></a>Run the programs</h2>
</center>
<p>I encourage you to copy the code from Listing 3 and Listing 4, compile 
the code, and execute it.&nbsp; Experiment with the code, making changes, and 
observing the results of your changes.&nbsp; Make certain that you can explain why 
your changes behave as they do. </p>
<h2 align="center"><a name="Summary">Summary</a></h2>
<p>In this lesson, you learned about a Java multimedia library from Mark Guzdial 
and Barbara Ericson at Georgia Institute of Technology.&nbsp; You also learned 
about a lightweight Java IDE named DrJava, which has the ability to 
interactively evaluate Java code.&nbsp; This IDE was developed by the JavaPLT group at Rice University.</p>
<p>You learned how to download and install the multimedia library and the 
DrJava IDE.</p>
<p>You learned how to compile and execute Java programs that use the multimedia 
library from the command line.&nbsp; You learned how to execute one of the 
programs interactively using the DrJava IDE.&nbsp; You also learned how to 
compile and execute the programs from within the DrJava IDE. </p>
<h2 align="center"><a name="Whats Next">What's next?</a></h2>
<p>The primary purpose of this series of lessons is to teach you about the inner 
workings of the multimedia library.&nbsp; In the next lesson, I will explain the
<b>Turtle</b> class from the multimedia library and possibly explain the <b>
World</b> class as well.</p>
<h2 align="center"><a name="Resources">Resources</a></h2>
<ul>
	<li><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/">
	Creative Commons Attribution 3.0 United States License</a></li>
<li><a href="http://coweb.cc.gatech.edu/mediaComp-plan/101">Media Computation book in Java</a> - numerous downloads available</li>
	<li>
	<a href="http://www.mypearsonstore.com/bookstore/product.asp?isbn=0131496980">
	Introduction to Computing and Programming with Java: A Multimedia Approach</a></li>
<li><a href="#Resources">DrJava</a> download site</li>
	<li><a href="http://www.cs.rice.edu/~javaplt/drjava/">DrJava, the JavaPLT 
	group at Rice University</a></li>
	<li><a href="http://www.cs.rice.edu/~javaplt/drjava/">DrJava Open Source 
	License</a></li>
</ul>
<center>
<h2> <a name="Complete Program Listings"></a>Complete program listings</h2>
</center>
Complete listings of the programs discussed in this lesson are shown in
Listing 3 and Listing 4 below.

<p>
<b><a name="Listing_3">Listing 3</a>. Source code for the program named StartupTest01. </b>
<table border="1" cols="1" width="477" bgcolor="#eeeeee">
  <tbody>
    <tr>
      <td>
      <pre>import java.awt.*;
import javax.swing.JFrame;

/**
 *StartupTest01
 * The purpose of this program is to test such items as
 * the classpath, the media path, etc.
 *
 * 10/10/08 Compiles and runs OK on my laptop computer.
 *
 * Displays a turtle in a world and moves it forward by
 * 100 pixels.
 * 
 * Note that the program does not terminate when you
 * click the X button in the frame.
 *
 * Based on a program by Barbara Ericson that is:
 * Copyright Georgia Institute of Technology 2004-2005
 */
public class Main{
  public static void main(String[] args){
    World mars = new World(200,300);
    Turtle joe = new Turtle(mars);
    joe.forward();
  }//end main

}//end class
</pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p>&nbsp;</p>
<p>
<b><a name="Listing_4">Listing 4</a>. Source code for the program named StartupTest02. </b>
<table border="1" cols="1" width="477" bgcolor="#eeeeee">
  <tbody>
    <tr>
      <td>
      <pre>import java.awt.*;
import javax.swing.JFrame;

/**
 *StartupTest02
 * The purpose of this program is to test such items as
 * the classpath, the media path, etc.
 *
 * 10/09/08 Compiles and runs OK on my laptop computer.
 *
 *Copies an image of a small turtle to an image of a
 * butterfly.
 *
 * Uses an object of the Graphics class to do the copy.
 *
 * Based on a program by Barbara Ericson that is:
 * Copyright Georgia Institute of Technology 2004-2005
 */
public class Main extends SimplePicture{
  ///////////////////// constructors /////////////////////
  //This constructor accepts the name of an image file
  // as a parameter.
  public Main(String fileName){
    //Let the parent class handle this fileName
    super(fileName);
  }//end constructor

  ////////////////////// methods /////////////////////////
  public void copy(Main source, int x, int y){
    //Get the graphics object
    Graphics g = this.getGraphics();

    //Copy the image
    g.drawImage(source.getImage(),x,y,null);
  }//end copy

  public static void main(String[] args){
    //Following statement eliminates necessity to manually
    // establish location of media files. Modify this to
    // point to the mediasources folder on your machine.
    FileChooser.setMediaPath("M:/Ericson/mediasources/");
    
    //Instantiate two objects of this class, each of 
    // which encapsulates an image.
    Main p1 = new Main("butterfly1.jpg");
    Main p2 = new Main("turtle.jpg");
    
    //Copy the turtle onto the butterfly and display using
    // the show format.
    p1.copy(p2,175,255);
    p1.show();

    //Cause program to terminate when the show window is
    // closed
    JFrame frame = p1.getPictureFrame().frame;
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  }//end main

}//end class</pre>
      </td>
    </tr>
  </tbody>
</table>
</p>
<p>&nbsp;</p>

<p> </p>
<hr align="center" size="3" width="100%">
<h2 align="center"><a name="Copyright">Copyright</a></h2>
<p>Copyright 2008, Richard G. Baldwin.&nbsp; Reproduction in whole or in part in any 
form or medium without express written permission from Richard Baldwin is 
prohibited. </p>
<h2 align="center"><a name="About_the_author">About the author</a></h2>
<b><a href="mailto:Baldwin@DickBaldwin.com">Richard Baldwin</a></b><i> is a 
college professor (at Austin Community College in Austin, TX) and private 
consultant whose primary focus is object-oriented programming using Java and 
other OOP languages.</i><p><i>Richard has participated in numerous consulting projects and he 
frequently provides onsite training at the high-tech companies located in and 
around Austin, Texas.&nbsp; He is the author of Baldwin's Programming
<a href="http://www.dickbaldwin.com">Tutorials</a>, which have gained a 
worldwide following among experienced and aspiring programmers. He has also 
published articles in JavaPro magazine.</i> </p>
<p><i>In addition to his programming expertise, Richard has many years of 
practical experience in Digital Signal Processing (DSP).&nbsp; His first job after he 
earned his Bachelor's degree was doing DSP in the Seismic Research Department of 
Texas Instruments.&nbsp; (TI is still a world leader in DSP.)&nbsp; In the following 
years, he applied his programming and DSP expertise to other interesting areas 
including sonar and underwater acoustics.</i> </p>
<p><i>Richard holds an MSEE degree from Southern Methodist University and has 
many years of experience in the application of computer technology to real-world 
problems.</i> </p>
<p><i><a href="mailto:baldwin@dickbaldwin.com">Baldwin@DickBaldwin.com</a></i>
</p>
<p>-end- </p>
</font>
</body>
</html>
