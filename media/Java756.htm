<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="author" content="richard g. baldwin">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">

<center>
<h2>
<!--start--><!--title-->JavaServer Pages, The Include Directive</h2></center>
<b><i>by Richard G. Baldwin</i></b>
<br><b><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i></b>
<p>Java Programming, Lecture Notes # 756
<p>April 20, 2000
<ul>
<li>
<a href="#_Introduction">Introduction</a></li>

<li>
<a href="#What is the Include Directive">What is the Include Directive?</a></li>

<li>
<a href="#_Sample_Include_Directives">Sample Include Directives</a></li>

<li>
<a href="#_Sample_JSP_Page">Sample JSP Page</a></li>

<li>
<a href="#_JSP_Syntax_Summary">JSP Syntax Summary</a></li>
</ul>

<center>
<hr size=3 width="100%" align=center></center>

<center>
<h2>
<a NAME="_Introduction"></a>Introduction</h2></center>
<b><font color="#FF0000">What is JSP?</font></b>
<p>With JSP, fragments of Java code embedded into special HTML tags are
presented to a JSP engine. The JSP engine automatically creates, compiles,
and executes servlets to implement the behavior of the combined HTML and
embedded Java code.
<p>Previous lessons have explained the use of the following syntax elements:
<ul>
<li>
Output comments</li>

<li>
Hidden comments</li>

<li>
Declarations</li>

<li>
Expressions</li>

<li>
Scriptlets</li>
</ul>
This lesson will discuss the <i>include directive</i>.
<center>
<h2>
<a NAME="What is the Include Directive"></a>What is the Include Directive?</h2></center>
The include directive is used to insert a file into a JSP page when the
JSP page is compiled.&nbsp; The text of the included file is added to the
JSP page (see the description of a <i>static</i> file later in this lesson).
<p><b><font color="#FF0000">What kinds of files are eligible for inclusion?</font></b>
<p>The included file can be a JSP file, an HTML file, or a text file.&nbsp;
The included file can also be a code file written in the Java programming
language.
<p>According to Sun:
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“The included file can be an HTML file, a JSP file, a text file,
or a code file written in the Java programming language.&nbsp;</i>
<p><i>Be careful, though, that the included file does not contain &lt;html>,
&lt;/html>, &lt;body>, or &lt;/body> tags. Because the entire content of
the included file is added at that location in the JSP file, these tags
would conflict with similar tags in the JSP file.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">Oops!</font></b>
<p>Actually, the sample JSP page that I am going to show you later violates
this caution and ends up with nested &lt;html> and &lt;body> tags in the
HTML source that the JSP page sends to the browser.
<p>I have tested the JSP page with Netscape 4.7 and IE 5.0, and it seems
to work OK with both of those browsers.&nbsp; However, it is certainly
possible that this could cause problems with other browsers.
<p><b><font color="#FF0000">Including JSP files</font></b>
<p>Sun tells us:
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“If the included file is a JSP file, its JSP tags are parsed and
their results included (along with any other text) in the JSP file.”</i></td>
</tr>
</table>

<p>A sample program later in this lesson illustrates the inclusion of a
JSP file and an HTML file into a primary JSP page.
<p><b><font color="#FF0000">Include only static files</font></b>
<p>According to Sun:
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“You can only use include to include static files. This means that
the parsed result of the included file is added to the JSP file where the
include directive is placed. Once the included file is parsed and included,
processing resumes with the next line of the calling JSP file.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">So, what is a <i>static</i> file?</font></b>
<p>According to Sun:
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“A static include means that the text of the included file is added
to the JSP file.”</i></td>
</tr>
</table>

<p>Elsewhere in conjunction with another JSP tag, <i>&lt;jsp:include>,
Sun</i> tells us:
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“The &lt;jsp:include> tag allows you to include either a static
or dynamic file.&nbsp;</i>
<p><i>A static file is parsed and its content included in the calling JSP
page.&nbsp;</i>
<p><i>A dynamic file acts on the request and sends back a result that is
included in the JSP page.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">What is the syntax for including a file?</font></b>
<p>You can include another file at a specific location in the JSP file
using an include directive with the following syntax:
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;%@ include file="relativeURL" %></font></b></td>
</tr>
</table>

<center>
<h2>
<a NAME="_Sample_Include_Directives"></a>Sample Include Directives</h2></center>
The following unrelated samples of include directives are used in the sample
program discussed later in this lesson.
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;%@ include file="jsp005a.jsp" %></font></b>
<p><b><font face="Arial Narrow">&lt;%@ include file="jsp005a.htm" %></font></b></td>
</tr>
</table>

<p>The first include directive causes another JSP file to be included at
a specific location in the primary JSP file.
<p>The second include directive causes an ordinary HTML file to be included
at the appropriate location.
<p><b><font color="#FF0000">More on <i>relativeURL</i></font></b>
<p>In the above syntax description, I showed an attribute named <i>file</i>
with a value of <i>relativeURL</i>.&nbsp; The relativeURL value is simply
the pathname to the included file.
<p>The value of the file attribute is always a relative URL.&nbsp; According
to Sun,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“a relative URL is just the path segment of an URL, without the
protocol, port, or domain.”</i></td>
</tr>
</table>

<p>Also according to Sun,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“If the relative URL starts with /, the path is relative to the
JSP application's context, which is a javax.servlet.ServletContext object
that is in turn stored in the application object.&nbsp;</i>
<p><i>If the relative URL starts with a directory or file name, the path
is relative to the JSP file.”</i></td>
</tr>
</table>

<p>If you don't know about the <i>ServletContext</i>, you will need to
take a look at some information on servlets.&nbsp; Several lessons on servlets
are contained in my <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">online
tutorials</a>.
<p>In the two examples that I showed above, the relative URLs both begin
with a file name.
<center>
<h2>
<a NAME="_Sample_JSP_Page"></a>Sample JSP Page</h2></center>
<a href="Java756-fig01.htm">Figure 1</a> shows a sample JSP page containing
two include directives.&nbsp; I highlighted the two include directives
in boldface in <a href="Java756-fig01.htm">Figure 1</a> to make them easier
to spot.
<p><b><font color="#FF0000">Include a JSP file</font></b>
<p>The first Include directive causes the file shown in <a href="Java756-fig02.htm">Figure
2</a> to be included at that specific location in the JSP page.
<p>Note that the file shown in <a href="Java756-fig02.htm">Figure 2</a>
is also a JSP file, and that it contains &lt;html> and &lt;body> tags in
violation of the caution given earlier.
<p><b><font color="#FF0000">Include an HTML file</font></b>
<p>The second include directive shown in <a href="Java756-fig01.htm">Figure
1</a> causes the file shown in <a href="Java756-fig03.htm">Figure 3</a>
to be included at that specific location in the JSP page.
<p>Note that <a href="Java756-fig03.htm">Figure 3</a> is a simple HTML
file, and like <a href="Java756-fig02.htm">Figure 2</a>, it also contains
&lt;html> and &lt;body> tags in violation of the caution given earlier.
<p><b><font color="#FF0000">The browser output</font></b>
<p><a href="Java756-fig04.htm">Figure 4</a> shows a replica of the browser
output obtained by using Netscape 4.7 to access the JSP page shown in Figure
1.&nbsp; Very similar output was obtained by accessing the same JSP page
using IE5.
<p><b><font color="#FF0000">The HTML source produced by the JSP page</font></b>
<p><a href="Java756-fig05.htm">Figure 5</a> shows a summary of most of
the above.&nbsp; <a href="Java756-fig05.htm">Figure 5</a> shows the HTML
source actually delivered to the browser as a result of accessing the JSP
file shown in <a href="Java756-fig01.htm">Figure 1</a>.
<p><b><font color="#FF0000">Color added</font></b>
<p>I added color to <a href="Java756-fig05.htm">Figure 5</a> in an attempt
to explain the different parts of the HTML source produced by the JSP page.
<p><font color="#FF0000">The primary HTML text</font>
<p>The text shown in black in <a href="Java756-fig05.htm">Figure 5</a>
resulted directly from the text in the primary JSP page.
<p><b><font color="#FF0000">The included JSP file</font></b>
<p>The text shown in red resulted from including the JSP file shown in
<a href="Java756-fig02.htm">Figure
2</a> in the primary JSP page.
<p>Note that the red text includes &lt;html> and &lt;body> tags that are
nested inside of the &lt;html> and &lt;body> in the original JSP page.&nbsp;
As mentioned earlier, both the Netscape 4.7 and IE5 browsers seem to be
happy with this nesting of &lt;html> and &lt;body> tags (browser programmers
have gone to great lengths to cause browsers to tolerate bad HTML code).
<p><b><font color="#FF0000">An evaluated expression</font></b>
<p>There is one line of text shown in green in the middle of the red text.&nbsp;
This is the result of the JSP engine having evaluated the following expression
that was contained in the JSP file shown in <a href="Java756-fig02.htm">Figure
2</a> that was inserted into the original JSP page of <a href="Java756-fig01.htm">Figure
1</a>.
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;%= new java.util.Date() %></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">A date string</font></b>
<p>As would be expected, the evaluation of this expression produced a <b>String</b>
containing the current date and time when the JSP page was accessed.
<p>Thus, the line of green text in <a href="Java756-fig05.htm">Figure 5</a>
is the date and time that the JSP page was accessed by the browser.&nbsp;
If you test this JSP page on your system, you should see a different date
and time.
<p><b><font color="#FF0000">Blue is the simple HTML file</font></b>
<p>The text shown in blue is the result of including the simple HTML file
shown in <a href="Java756-fig03.htm">Figure 3</a> in the original JSP page
of <a href="Java756-fig01.htm">Figure 1</a>.
<p><b><font color="#FF0000">What about the &lt;html> and &lt;body> tag
caution?</font></b>
<p><font color="#000000">I personally find the earlier caution against
including files having &lt;html> and &lt;body> tags to be bothersome.</font>
<p><font color="#000000">It seems contradictory to say that it is OK to
include an HTML page, but the HTML page can't contain &lt;html> and &lt;body>
tags.</font>
<p><b><font color="#FF0000">A serious restriction</font></b>
<p><font color="#000000">If this is actually true, then it greatly reduces
the versatility and usefulness of the include directive.&nbsp; This restriction
means that the only HTML pages that can be included in a JSP page are those
that have been prepared specifically for that purpose.&nbsp; This is true
because virtually all HTML pages contain &lt;html> and &lt;body> tags.</font>
<p><b><font color="#FF0000">What is an HTML file, anyway?</font></b>
<p><font color="#000000">I have always believed that &lt;html> and &lt;body>
tags are required to cause a file to be an HTML file.&nbsp; However, I
am not an HTML expert.&nbsp; I haven't taken the time (and don't plan to
take the time) to find and evaluate the HTML specifications regarding this
subject, so I'm just going to leave it up in the air.</font>
<p><b><font color="#FF0000">Life's many surprises</font></b>
<p><font color="#000000">I was surprised to learn, while performing experiments
for this lesson, that both Netscape 4.7 and IE5 are willing to properly
render a very simple HTML file whose &lt;html> and &lt;body> tags (and
the corresponding end tags) have been deleted.&nbsp; But then, the authors
of Netscape 4.7 and IE5 have include a variety of safety nets that try
to force proper rendering in the face of HTML errors by HTML page authors.</font>
<center>
<h2>
<a NAME="_JSP_Syntax_Summary"></a><font color="#000000">JSP Syntax Summary</font></h2></center>
<font color="#000000">In this and previous lessons, I have discussed the
following JSP syntax:</font>
<p><font color="#000000">Output comments:</font>
<br><b><font color="#000000">&lt;!-- comment</font></b>
<br><b><font color="#000000">[ &lt;%= expression %> ] --></font></b>
<p><font color="#000000">Hidden comments:</font>
<br><b><font color="#000000">&lt;%-- hidden comment --%></font></b>
<p><font color="#000000">Declarations:</font>
<br><b><font color="#000000">&lt;%! declarations %></font></b>
<p><font color="#000000">Expressions:</font>
<br><b><font color="#000000">&lt;%= expression %></font></b>
<p><font color="#000000">Scriptlets<b>:</b></font>
<br><b><font color="#000000">&lt;% code fragment %></font></b>
<p><font color="#000000">Include Directive:</font>
<br><b><font color="#000000">&lt;%@ include file="relativeURL" %></font></b>
<br>&nbsp;
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without&nbsp; express written permission from
Richard Baldwin is prohibited.&nbsp;
<h4>
About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-<!--end-->
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
