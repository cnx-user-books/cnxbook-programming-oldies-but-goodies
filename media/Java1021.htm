<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">

<center>
<h2>
Swing from A to Z</h2></center>

<center>
<h2>
The border Property</h2></center>

<center>
<h2>
Part 2, BevelBorder and EmptyBorder</h2></center>
<b><i>By <a href="#About the author">Richard G. Baldwin</a></i></b>
<p>Java Programming, Lecture Notes # 1021
<p>August 28, 2000
<ul >
<li>
<a href="#Preface">Preface</a></li>

<li>
<a href="#Introduction">Introduction</a></li>

<li>
<a href="#Sample Program">Sample Program</a></li>

<li>
<a href="#Interesting Code Fragments">Interesting Code Fragments</a></li>

<li>
<a href="#Summary">Summary</a></li>

<li>
<a href="#Where To From Here">Where To From Here?</a></li>

<li>
<a href="#Complete Program Listings">Complete Program Listing</a></li>
</ul>

<hr size=3 width="100%" align=center>
<center>
<h2>
<a NAME="Preface"></a>Preface</h2></center>
This lesson is Part 2 of a miniseries designed to illustrate the <i>border</i>
property and the use of that property to construct fancy borders on Swing
components.
<p><b><font color="#FF0000">Viewing tip</font></b>
<p>You may find it useful to open another copy of this lesson in a separate
browser window.&nbsp; That will make it easier for you to scroll back and
forth among the different figures and listings while you are reading about
them, without losing your place.
<p><b><font color="#FF0000">Recommended supplementary reading</font></b>
<p>It is strongly recommended that you study Part 1 entitled <a href="Java1020.htm">Swing
from A to Z, The border Property, Part1, EtchedBorder</a> before embarking
on this part.
<p>It is also recommended that you read the following lesson, which you
will find at
<i>Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a></i><font color="#000000">.</font>
<blockquote><b>Swing, Hidden Buttons with Icons, Icon Images, Borders,
Tool Tips, Nested Buttons, and Other Fun Stuff</b></blockquote>
That lesson illustrates some very interesting uses of borders with buttons
to cause buttons to rise up from the surface when you point at them with
the mouse.
<center>
<h2>
<a NAME="Introduction"></a>Introduction</h2></center>
<b><font color="#FF0000">What's in this lesson?</font></b>
<p><font color="#000000">This is the second of several sequential lessons
that emphasize an understanding of the <i>border</i> property along with
the use of that property to construct components having different border
styles.</font>
<p><b><font color="#FF0000">Several parts are needed</font></b>
<p><font color="#000000">Because of the large amount of material involved,
I have decided to break this discussion into several parts.</font>
<p><b><font color="#FF0000">What was in Part 1?</font></b>
<p><font color="#000000"><a href="Java1020.htm">Part 1</a> set the background
for future discussions, and also dealt specifically with the use of the
<b>EtchedBorder</b>
class to create borders of a style known as etched borders.</font>
<p><b><font color="#FF0000">What about Part 2?</font></b>
<p><font color="#000000">This lesson, Part 2, deals specifically with the
use of the <b>BevelBorder</b> class to create two different styles of beveled,
three-dimensional borders.</font>
<p><font color="#000000">This lesson also illustrates the use of the <b>EmptyBorder</b>
class to provide blank space around the component to which the border is
being applied.</font>
<center>
<h2>
<a NAME="Sample Program"></a><font color="#000000">Sample Program</font></h2></center>
<b><font color="#FF0000">A screen shot</font></b>
<p>The name of the sample program that I will discuss to illustrate borders
is <b>Swing13</b>.
<p>A screen shot of the GUI that is produced when the program is started
is shown below.
<center>
<p><img SRC="Java1021.gif" height=501 width=330>
<br>Figure 1&nbsp; A screen shot of the program running.</center>

<p><br>
<br>
<br>
<p><b><font color="#FF0000">Twelve JLabel objects</font></b>
<p><font color="#000000">The program creates and displays twelve different
<b>JLabel</b>
objects, applying a different border style to each of them.&nbsp; As you
can see, with Swing, there are many different ways to display a label simply
by taking control of the <b>border</b> property.</font>
<p><font color="#000000">The first object in the upper left-hand corner
was discussed in <a href="Java1020.htm">Part 1</a>.</font>
<p><font color="#000000">This lesson will discuss the right-most object
in the first row, and both objects in the second row.</font>
<center>
<h2>
<a NAME="Interesting Code Fragments"></a><font color="#000000">Interesting
Code Fragments</font></h2></center>
I will continue discussing the program in fragments.&nbsp; A complete listing
of the program is provided in Listing 4.&nbsp; I will skip those parts
of the program that were discussed in <font color="#000000"><a href="Java1020.htm">Part
1</a></font>.
<p><b><font color="#FF0000">The constructor</font></b>
<p><font color="#000000">Following some preliminary material, the constructor,
which you can view in its entirety in </font>Listing 4<font color="#000000">,
contains twelve fairly complex statements.&nbsp; Each of the twelve statements
causes a
<b>JLabel</b> object to be displayed with a specified border style.</font>
<p><font color="#000000">The text displayed in each <b>JLabel</b> object
label consists of the concatenation of a specified text value, and the
left and top insets for the specified border style.</font>
<p><b><font color="#FF0000">Open in another browser window</font></b>
<p><font color="#000000">At this point, it may be helpful for you to open
a copy of this lesson in another browser window so you can see the screen
shot of the GUI while I discuss the different border styles.</font>
<p><b><font color="#FF0000">BevelBorder RAISED,2,2</font></b>
<p><font color="#000000">Listing 1</font> shows the code fragment that
caused the label in the upper-right corner of the screen shot to be added
to the
<i>contentPane</i> of the
<b>JFrame</b> container.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;
getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; 
<i>"BevelBorder
RAISED"</i>,<b>new BevelBorder(</b></font></font>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.RAISED</font></font></b><font face="Courier New,Courier"><font size=-2>)));</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 1</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">The specified text content</font></b>
<p><font color="#000000">The first parameter&nbsp; to the <b>makeLabel()</b>
method is highlighted in Italics in the code fragment of Listing 1.&nbsp;
This parameter eventually becomes part of the text content of the label.</font>
<p><font color="#000000">This string is concatenated with the inset values
for the specified border style.&nbsp; The concatenated string is set into
the <i>text</i> property for the label.&nbsp; This, in turn, causes the
combination of the specified text string and the inset values to be displayed
as the text value for the label.</font>
<p><font color="#000000">Thus, the text displayed in the upper right-hand
label is</font>
<blockquote><b><font color="#000000">BevelBorder RAISED,2,2</font></b></blockquote>
This indicates that the top and left insets for the <b>BevelBorder</b>
style are each two pixels.
<p><b><font color="#FF0000">The specified border style</font></b>
<p><font color="#000000">The second parameter to the <b>makeLabel()</b>
method, highlighted in boldface in Listing 1, is a reference to a new object
of the class <b>BevelBorder</b>.</font>
<p><font color="#000000">Here is what Sun has to say about the
<b>BevelBorder</b>
class.</font>
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Arial Narrow"><font size=-1>A
class which implements a simple 2 line bevel border.&nbsp;</font></font></td>
</tr>
</table>

<p>As is sometimes the case with the Sun documentation, this isn't very
illuminating.
<p><b><font color="#FF0000">Constructors</font></b>
<p>There are three constructors for the <b><font color="#000000">BevelBorder</font></b>
class.&nbsp; I used the simplest of the three in <font color="#000000">Listing
1</font>.
<p><b><font color="#FF0000">Raised or lowered?</font></b>
<p>All three constructors allow you to provide an integer constant that
specifies whether the component should appear to protrude out of the screen
(RAISED) or be depressed into the screen (LOWERED).
<p>For this component, I specified that the label should be RAISED.&nbsp;
As you can see from the screen shot, this label appears to protrude out
of the screen.
<p><b><font color="#FF0000">Color, highlight, and shadows</font></b>
<p>The other two constructors for the <b>BevelBorder</b> class allow you
to customize the color, highlight, and shadow information, presumably to
produce a three-dimensional border that is more to your liking.
<p><b><font color="#FF0000">BevelBorder LOWERED,2,2</font></b>
<p><font color="#000000">Listing 2</font> shows the code that caused a
"LOWERED" version of the label with the <b>BevelBorder</b> to be added
to the <i>contentPane</i> of the <b>JFrame</b> object.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;
getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;
<i>"BevelBorder
LOWERED"</i>,<b>new BevelBorder(</b></font></font>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.LOWERED)))</font></font></b><font face="Courier New,Courier"><font size=-2>;</font></font><font face="Courier New,Courier"></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 2</font></font></b></td>
</tr>
</table>

<p>This code fragment is exactly like the previous code fragment except
for the value of the parameter passed to the constructor for the <b>BevelBorder</b>
class (LOWERED instead of RAISED).
<p><b><font color="#FF0000">See it in the screen shot</font></b>
<p><font color="#000000">This label appears in the screen shot on the left
side of the second row.</font>
<p><b><font color="#FF0000">The size of the label</font></b>
<p>As was the case in the previous lesson, the default size of the label
with the beveled border is barely large enough to accommodate its text,
particularly on the ends.
<p><b><font color="#FF0000">The inset values</font></b>
<p>The inset of the left border and the inset of the top border each have
a value of two pixels for the beveled border.
<p>Although I didn't display the inset for the right border and the bottom
border, they are probably the same.
<p><b><font color="#FF0000">EmptyBorder,5,5</font></b>
<p>A solution, or at least the beginning of a solution, to the size problem
is shown by the code in <font color="#000000">Listing 3</font>.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; "EmptyBorder",<b>new
EmptyBorder(</b></font></font>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5)))</font></font></b><font face="Courier New,Courier"><font size=-2>;</font></font><font face="Courier New,Courier"></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 3</font></font></b></td>
</tr>
</table>

<p><font color="#000000">The code in Listing 3 caused the label shown in
the right-hand side of the second row of the screen shot to be added to
the <i>contentPane
</i>container.&nbsp; This label has an <b>EmptyBorder</b>.</font>
<p><b><font color="#FF0000">What does Sun have to say?</font></b>
<p>Here is what Sun has to say about this border.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Arial Narrow"><font size=-1>A
class which provides an empty, transparent border which takes up space
but does no drawing.&nbsp;</font></font></td>
</tr>
</table>

<p>Regardless on Sun's brevity on the matter, this is an important border
style.
<p><b><font color="#FF0000">The constructor for EmptyBorder</font></b>
<p>The arguments to the constructor allow you to specify a band of blank
space on each of the four sides of the component.&nbsp; You can specify
different values for each side if you want to.
<p>When used alone, this border provides an improvement in the appearance
of a label with an opaque background where the text is normally crammed
up against the ends.
<p><b><font color="#FF0000">Very useful with CompoundBorder</font></b>
<p>As we will see in the next lesson, this border style can be used with
a <b>CompoundBorder</b> object to produce components whose appearance is
much improved over the first three labels in the screen shot.
<p><b><font color="#FF0000">Two overloaded constructors</font></b>
<p>Two overloaded constructors are available for the <b>EmptyBorder</b>
class.
<p>One constructor accepts a single parameter of the <b>Insets</b> class.&nbsp;
The other constructor accepts four <b>int</b> parameters.
<p>Whichever constructor you use, you specify the amount of blank space
in pixels on each of the four sides of the component.&nbsp; In <font color="#000000">Listing
3</font>, I specified a blank space of five pixels on each of the four
sides of the <b>JLabel</b> object.
<center>
<h2>
<a NAME="Summary"></a>Summary</h2></center>
This lesson has continued the discussion of the <i>border</i> property,
and has shown you how to use that property to cause fancy borders to be
rendered on Swing components.
<p>So far, four different standard borders have been shown:
<ul>
<li>
EtchedBorder</li>

<li>
BevelBorder RAISED</li>

<li>
BevelBorder LOWERED</li>

<li>
EmptyBorder</li>
</ul>
When the first three of these were applied to a <b>JLabel</b> object, the
results weren't very attractive because the ends of the text were too close
to the edge of the label.
<p>The third border can be used to provide empty space on each of the four
sides of the component, which can be used to solve the problem described
above.
<center>
<h2>
<a NAME="Where To From Here"></a>Where To From Here?</h2></center>
The real solution to the problem described above involves the combined
use of the <b>EmptyBorder</b> and the <b>CompoundBorder</b>, which will
be the subject of the next lesson.
<center>
<h2>
<a NAME="Complete Program Listings"></a>Complete Program Listing</h2></center>
A complete listing of the program is shown in <font color="#000000">Listing
4</font>.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>/*File
Swing13</font></font>
<br><font face="Courier New,Courier"><font size=-2>Rev 3/28/00</font></font>
<br><font face="Courier New,Courier"><font size=-2>Copyright 2000, R.G.Baldwin</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>Illustrates the border
property.&nbsp; This</font></font>
<br><font face="Courier New,Courier"><font size=-2>program creates and
displays several</font></font>
<br><font face="Courier New,Courier"><font size=-2>different border types
surrounding a</font></font>
<br><font face="Courier New,Courier"><font size=-2>JLabel object.</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>Tested using JDK 1.2.2
under WinNT 4.0 WkStn</font></font>
<br><font face="Courier New,Courier"><font size=-2>**********************************/</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>import java.awt.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import java.awt.event.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.swing.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.swing.border.*;</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>class Swing13 extends
JFrame{</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//&nbsp;</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public static
void main(String args[]) {</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new Swing13();</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end main()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; //The purpose
of this method is to create</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // and return
an opaque pink JLabel with</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // a border.&nbsp;
The text content of the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // lable is provided
as the first</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // parameter.&nbsp;
The border type is provided</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // as the second
parameter.&nbsp; When the</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // label is displayed,
the left and top</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // insets are
displayed following the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // text content
of the label.</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; JLabel makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
String content,Border borderType){</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; JLabel
label = new JLabel();</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setBorder(borderType);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setOpaque(true);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setBackground(Color.pink);</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setText(content
+ ","&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; +label.getInsets().left
+ ","</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; +label.getInsets().top);</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; return
label;</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; }//end makeLabel()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; Swing13(){//constructor</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().setLayout(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new FlowLayout());</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"EtchedBorder",new EtchedBorder()));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"BevelBorder RAISED",new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.RAISED)));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"BevelBorder LOWERED",new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.LOWERED)));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"EmptyBorder",new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5)));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp; 
getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + BevelBorder RAISED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.RAISED),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + BevelBorder LOWERED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.LOWERED),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + SoftBevelBorder " +</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"RAISED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new SoftBevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SoftBevelBorder.RAISED),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + SoftBevelBorder " +</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"LOWERED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new SoftBevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SoftBevelBorder.LOWERED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + LineBorder",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new LineBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Color.blue,5),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + MatteBorder Image",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new MatteBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
19,19,19,19,new ImageIcon(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"blue-ball.gif")),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + MatteBorder Color",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new MatteBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
19,19,19,19,Color.blue),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"></font>&nbsp;<font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + TitledBorder",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new TitledBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Title"),new EmptyBorder(5,5,5,5))));</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setTitle("Copyright
2000, R.G.Baldwin");</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setSize(329,500);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setVisible(true);</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //.....................................//</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //Anonymous
inner terminator class</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; this.addWindowListener(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new WindowAdapter(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
public void windowClosing(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
WindowEvent e){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.exit(0);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end windowClosing()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end WindowAdapter</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; );//end
addWindowListener</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //.....................................//</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; }//end constructor</font></font><font face="Courier New,Courier"></font>
<p><font face="Courier New,Courier"><font size=-2>}//end class Swing13</font></font><font face="Courier New,Courier"></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 4</font></font></b></td>
</tr>
</table>

<p>
<hr size=3 width="100%" align=center>
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without express written permission from Richard
Baldwin is prohibited.
<h4>
<a NAME="About the author"></a>About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
