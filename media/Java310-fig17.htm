<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
<!-- Template file for code body -->
</head>
<body>
&nbsp;
<table BORDER BGCOLOR="#FFFF99" >
<tr>
<td>
<pre><font face="Andale Mono, Verdana, Arial, Helvetica"><font size=-2>/*PathIterator01.java 12/12/99
Copyright 1999, R.G.Baldwin

Illustrates use of the GeneralPath class and the
PathIterator class.

Draws a 4-inch by 4-inch Frame on the screen.

Translates the orgin to the center of the Frame.

Draws a pair of X and Y-axes centered on the new origin.

Draws a GeneralPath object on the Frame. The object is
a diamond whose vertices are at plus and minus one-half&nbsp;
inch on each of the axes.&nbsp; The vertices are located at&nbsp;
the N, S, E, and W positions.

Uses getPathIterator() to get a PathIterator on the
GeneralPath (diamond) object.

Extracts information from the PathIterator to populate
another GeneralPath object that is offset by one inch
from the original in both the X and Y directions.

Draws the new GeneralPath object in red.

Tested using JDK 1.2.2 under WinNT Workstation 4.0
*******************************************/
import java.awt.geom.*;
import java.awt.*;
import java.awt.event.*;

class PathIterator01{
&nbsp; public static void main(String[] args){
&nbsp;&nbsp;&nbsp; GUI guiObj = new GUI();
&nbsp; }//end main
}//end controlling class PathIterator01

class GUI extends Frame{
&nbsp; int res;//store screen resolution here
&nbsp; static final int ds = 72;//default scale, 72 units/inch
&nbsp; static final int hSize = 4;//horizonal size = 4 inches
&nbsp; static final int vSize = 4;//vertical size = 4 inches
&nbsp;&nbsp;
&nbsp; GUI(){//constructor
&nbsp;&nbsp;&nbsp; //Get screen resolution
&nbsp;&nbsp;&nbsp; res = Toolkit.getDefaultToolkit().
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getScreenResolution();
&nbsp;&nbsp;&nbsp; //Set Frame size
&nbsp;&nbsp;&nbsp; this.setSize(hSize*res,vSize*res);
&nbsp;&nbsp;&nbsp; this.setVisible(true);
&nbsp;&nbsp;&nbsp; this.setTitle("Copyright 1999, R.G.Baldwin");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Window listener to terminate program.
&nbsp;&nbsp;&nbsp; this.addWindowListener(new WindowAdapter(){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);}});
&nbsp; }//end constructor
&nbsp;&nbsp;
&nbsp; //Override the paint() method
&nbsp; public void paint(Graphics g){
&nbsp;&nbsp;&nbsp; //Downcast the Graphics object to a Graphics2D object
&nbsp;&nbsp;&nbsp; Graphics2D g2 = (Graphics2D)g;
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Scale device space to produce inches on the screen
&nbsp;&nbsp;&nbsp; // based on actual screen resolution.
&nbsp;&nbsp;&nbsp; g2.scale((double)res/72,(double)res/72);

&nbsp;&nbsp;&nbsp; //Translate the origin to the center of the Frame
&nbsp;&nbsp;&nbsp; g2.translate((hSize/2)*ds,(vSize/2)*ds);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Draw x-axis
&nbsp;&nbsp;&nbsp; g2.draw(new Line2D.Double(-1.5*ds,0.0,1.5*ds,0.0));
&nbsp;&nbsp;&nbsp; //Draw y-axis
&nbsp;&nbsp;&nbsp; g2.draw(new Line2D.Double(0.0,-1.5*ds,0.0,1.5*ds));

&nbsp;&nbsp;&nbsp; //Use the GeneralPath class to instantiate a diamond&nbsp;
&nbsp;&nbsp;&nbsp; // object whose vertices are at plus and minus&nbsp;
&nbsp;&nbsp;&nbsp; // one-half inch on each of the axes. The
&nbsp;&nbsp;&nbsp; // vertices in the N, S, E, and W positions, centered
&nbsp;&nbsp;&nbsp; // about the origin.&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; GeneralPath thePath = new GeneralPath();
&nbsp;&nbsp;&nbsp; thePath.moveTo(0.5f*ds,0.0f*ds);
&nbsp;&nbsp;&nbsp; thePath.lineTo(0.0f*ds,0.5f*ds);
&nbsp;&nbsp;&nbsp; thePath.lineTo(-0.5f*ds,0.0f*ds);
&nbsp;&nbsp;&nbsp; thePath.lineTo(0.0f*ds,-0.5f*ds);
&nbsp;&nbsp;&nbsp; thePath.closePath();
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Now draw the diamond on the screen in black
&nbsp;&nbsp;&nbsp; g2.draw(thePath);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Get a PathIterator object on the diamond
&nbsp;&nbsp;&nbsp; PathIterator theIterator =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; thePath.getPathIterator(null);
&nbsp;&nbsp;&nbsp; //Use this array to store segment coordinate data
&nbsp;&nbsp;&nbsp; float[] theData = new float[6];&nbsp;
&nbsp;&nbsp;&nbsp; int theType;//store type of segment here
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Get a new GeneralPath object.&nbsp; Populate it based on
&nbsp;&nbsp;&nbsp; // coordinates and segment types extracted from the
&nbsp;&nbsp;&nbsp; // original GeneralPath object but offset the&nbsp;
&nbsp;&nbsp;&nbsp; // coordinate values by one inch in both X and Y.
&nbsp;&nbsp;&nbsp; GeneralPath newPath = new GeneralPath();
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //Iterate on the original GeneralPath object and
&nbsp;&nbsp;&nbsp; // get information to populate the new&nbsp;
&nbsp;&nbsp;&nbsp; // GeneralPath object.&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; while(!theIterator.isDone()){//while not done
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Get type of segment and coordinate values
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // for the current segment
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; theType = theIterator.currentSegment(theData);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Process the current segment to populate a new
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // segment of the new GeneralPath object.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch(theType){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case PathIterator.SEG_MOVETO :
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("SEG_MOVETO");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newPath.moveTo(theData[0]+1.0f*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; theData[1]+1.0f*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case PathIterator.SEG_LINETO :
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("SEG_LINETO");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newPath.lineTo(theData[0]+1.0f*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; theData[1]+1.0f*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case PathIterator.SEG_QUADTO :
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Not supported here");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Will illustrate SEG_QUADTO in later lesson&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case PathIterator.SEG_CUBICTO :
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Not supported here");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Will illustrate SEG_CUBICTO in later lesson
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case PathIterator.SEG_CLOSE :
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("SEG_CLOSE");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newPath.closePath();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }//end switch
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Get the next segment
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; theIterator.next();
&nbsp;&nbsp;&nbsp; }//end while loop
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; g2.setColor(Color.red);
&nbsp;&nbsp;&nbsp; g2.draw(newPath);

&nbsp; }//end overridden paint()
&nbsp;&nbsp;&nbsp;&nbsp;
}//end class GUI
//==================================//

</font><b><font size=-1>Figure 17</font></b></font></pre>
</td>
</tr>
</table>

</body>
</html>
