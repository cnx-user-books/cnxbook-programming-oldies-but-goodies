<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="author" content="richard g. baldwin">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">
<!--start-->
<center>
<h2>
JavaServer Pages, The <i>Page</i> <i>Directive</i></h2></center>
<b><i>by Richard G. Baldwin</i></b>
<br><b><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i></b>
<p>Java Programming, Lecture Notes # 758
<p>April 20, 2000
<ul>
<li>
<a href="#_Introduction">Introduction</a></li>

<li>
<a href="#What is the Page Directive">What is the Page Directive?</a></li>

<li>
<a href="#Sample Page Directives">Sample Page Directives</a></li>

<li>
<a href="#_Page_Directive_Attributes">Page Directive Attributes</a></li>

<li>
<a href="#_Sample_JSP_Page">Sample JSP Page</a></li>

<li>
<a href="#_JSP_Syntax_Summary">JSP Syntax Summary</a></li>
</ul>

<center>
<hr size=3 width="100%" align=center></center>

<center>
<h2>
<a NAME="_Introduction"></a>Introduction</h2></center>
<b><font color="#FF0000">What is JSP?</font></b>
<p>With JSP, fragments of Java code embedded into special HTML tags are
presented to a JSP engine. The JSP engine automatically creates, compiles,
and executes servlets to implement the behavior of the combined HTML and
embedded Java code.
<p>Previous lessons have explained the use of the following syntax elements:
<ul>
<li>
Output comments</li>

<li>
Hidden comments</li>

<li>
Declarations</li>

<li>
Expressions</li>

<li>
Scriptlets</li>

<li>
The include directive</li>
</ul>
This lesson will discuss the <i>Page Directive</i>.
<center>
<h2>
<a NAME="What is the Page Directive"></a>What is the Page Directive?</h2></center>
The page directive is used to define attributes that apply to an entire
JSP page.
<p>According to Sun,
<br>&nbsp;
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“The <tt>page</tt> directive applies to an entire JSP file and any
static files it includes with the Include Directive or <tt>&lt;jsp:include></tt>,
which together are called a translation unit.&nbsp;</i>
<p><i>Note that the <tt>page</tt> directive does not apply to any dynamic
included files; see <tt>&lt;jsp:include></tt> for more information.”</i></td>
</tr>
</table>

<p>See my <a href="Java756.htm">earlier lesson</a> on the <i>Include Directive</i>
for more information about the difference between <i>static</i> and <i>dynamic</i>
files.
<p><b><font color="#FF0000">How many page directives can you have in a
JSP page?</font></b>
<p>A page directive can be used to establish values for several different
attributes that apply to the JSP page.
<p>You can use the page directive more than once in a JSP page (translation
unit).&nbsp; However, (except for the import attribute), you can specify
a value for each attribute only once.
<p>The import attribute is similar to the import directive in a Java program,
and accordingly you can use it more than once.
<p><b><font color="#FF0000">Where do I place the page directive?</font></b>
<p>You may place the page directive anywhere in the translation unit and
it will apply to the entire translation unit.&nbsp; For clarity and ease
of understanding, it might be best to place it at the top of the primary
JSP file.
<p><b><font color="#FF0000">What is the syntax of the page directive?</font></b>
<p>The syntax for a page directive is shown below.&nbsp; Default values
for the different attributes are highlighted in boldface where appropriate.&nbsp;
The [...] indicates that a term is optional.&nbsp; The vertical bar (|)
provides a choice between two values such as true and false.
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><font face="Arial Narrow"><font size=-1>&lt;%@ page&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ language="<b>java</b>"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ extends="<i>package</i>.<i>class</i>"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ import= "{ <i>package</i>.<i>class</i>
|</font></font>
<br><i><font face="Arial Narrow"><font size=-1>&nbsp;&nbsp;&nbsp; package</font></font></i><font face="Arial Narrow"><font size=-1>.<i>*</i>
}, ..." ]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ session="<b>true</b>|false"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ buffer="none|<b>8kb</b>|<i>size</i>kb"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ autoFlush="<b>true</b>|false"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ isThreadSafe="<b>true</b>|false"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ info="<i>text</i>"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ errorPage="<i>relativeURL</i>"
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ contentType="<i>mimeType</i>
[</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp;&nbsp;&nbsp; ;charset=<i>characterSet</i>
]" |&nbsp;</font></font>
<br><b><font face="Arial Narrow"><font size=-1>&nbsp;&nbsp;&nbsp; "text/html
; charset=ISO-8859-1"</font></font></b><font face="Arial Narrow"><font size=-1>
]&nbsp;</font></font>
<br><font face="Arial Narrow"><font size=-1>&nbsp; [ isErrorPage="true|<b>false</b>"
]</font></font>
<br><font face="Arial Narrow"><font size=-1>%></font></font></td>
</tr>
</table>

<center>
<h2>
<a NAME="Sample Page Directives"></a>Sample Page Directives</h2></center>
Several sample page directives, used in the sample JSP page discussed later
in this lesson are shown below.
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow"><font size=-1>&lt;%@ page import="java.util.Date"
%></font></font></b>
<br><b><font face="Arial Narrow"><font size=-1>&lt;%@ page import="java.awt.*"
%></font></font></b>
<br><b><font face="Arial Narrow"><font size=-1>&lt;%@ page info="Info about
the page" %></font></font></b></td>
</tr>
</table>

<p>I will discuss the behavior of these page directives in conjunction
with my discussion of the sample JSP page.
<center>
<h2>
<a NAME="_Page_Directive_Attributes"></a>Page Directive Attributes</h2></center>
<b><font color="#FF0000">language<i>="java"</i></font></b>
<p>This attribute defines the scripting language used in scriptlets, declarations,
and expressions in the JSP file and any included files.&nbsp; In JSP 1.0,
the only allowed value is java.
<p><b><font color="#FF0000">extends<i>="package.class"</i></font></b>
<p>This attribute specifies a fully qualified name of a superclass that
will be extended by the Java class in the JSP file.&nbsp; Sun recommends
that you,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“Use this attribute cautiously, as it can limit the JSP engine's
ability to provide a specialized superclass that improves the quality of
the compiled file.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">import= "{ <i>package.class | package.*</i>
}, ..."</font></b>
<p>This attribute specifies a comma-separated list of one or more packages
or classes that the JSP file should import.
<p>The classes in the packages become available to scriptlets, expressions,
declarations, and tags within the JSP file.
<p><b><font color="#FF0000">Multiple import directives are allowed</font></b>
<p>As might be expected, the import attribute must appear before the tag
that refers to the imported class.&nbsp; To import multiple packages, you
can use a comma-separated list, more than one import directive, or a combination
of the two.
<p>This attribute is illustrated in the sample JSP page discussed later
in this lesson.
<p><b><font color="#FF0000">session=<i>"true</i>|false"</font></b>
<p>Here is what Sun has to say about this attribute.&nbsp; If you don't
know about sessions, this won't mean much to you at this point and you
may need to study my <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">tutorial
lessons</a> on servlets before trying to understand it.
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“Whether the client must join an HTTP session in order to use the
JSP page. If the value is <tt>true</tt>, the <tt>session</tt> object refers
to the current or new session. If the value is <tt>false</tt>, you cannot
use the <tt>session</tt> object in the JSP file. The default value is <tt>true</tt>.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">buffer="none|8kb|sizekb"</font></b>
<p>This attribute specifies the buffer size in kilobytes that will be used
by the <b>out</b> object to handle output sent from the compiled JSP page
to the client browser. The default value is 8kb.&nbsp; According to Sun,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“If you specify a buffer size, the output is buffered with at least
the size you specified.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">autoFlush=<i>"true</i>|false"</font></b>
<p>This attribute specifies whether or not the output will be flushed automatically
when the buffer is full.&nbsp; For the default value of true, the buffer
will be flushed.&nbsp; If specified as false, an exception will be raised
when the buffer overflows.&nbsp; According to Sun,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“you cannot set autoFlush to false when the value of buffer is none.”</i></td>
</tr>
</table>

<p><b><font color="#FF0000">isThreadSafe=<i>"true</i>|false"</font></b>
<p>This attribute specifies whether thread safety is implemented in the
JSP file.&nbsp; The default value of true means that the JSP engine can
send multiple concurrent requests to the page.
<p>If you use the default value, multiple threads can access the JSP page.&nbsp;
Therefore, you must synchronize your methods to provide thread safety.
<p>For false, the JSP engine does not send concurrent requests to the JSP
page.&nbsp; You probably don't want to force this restriction on a high-volume
server because it can significantly impair the ability of the server to
deliver your JSP page to multiple clients.
<p>If you don't know about thread safety and the synchronized keyword,
see my <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">earlier
lesson</a> on multithreaded programming.
<p><b><font color="#FF0000">info=<i>"text"</i></font></b>
<p>This attribute lets you specify a text string that is incorporated verbatim
into the compiled JSP page.
<p>You can retrieve the string later with the
<b>getServletInfo()</b> method
of the <b>Servlet</b> class.&nbsp; This attribute is illustrated in the
sample JSP page discussed later in this lesson.
<p><b><font color="#FF0000">errorPage=<i>"relativeURL"</i></font></b>
<p>This attribute specifies a pathname to a JSP file that this JSP file
sends exceptions to.
<p>According to Sun,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“If the pathname begins with a /, the path is relative to the JSP
application's document root directory and is resolved by the Web server.
If not, the pathname is relative to the current JSP file.”</i></td>
</tr>
</table>

<p>If you don't know about exceptions, see my <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">earlier
lesson</a> on exception handling in Java.
<p><b><font color="#FF0000">isErrorPage="true|<i>false"</i></font></b>
<p>According to Sun, this attribute specifies,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“Whether the JSP file displays an error page. If <tt>true</tt>,
you can use the <tt>exception</tt> object, which contains a reference to
the thrown exception, in the JSP file. If false (the default value), means
that you cannot use the
<tt>exception</tt> object in the JSP file.”</i></td>
</tr>
</table>

<p>If you don't understand all of this, you might want to study my lesson
on exception handling in Java for background information on exception handling.
<p><b><font color="#FF0000">contentType="<i>mimeType</i> [ ;</font></b>
<br><b><font color="#FF0000">&nbsp; charset=<i>characterSet</i> ]" |</font></b>
<br><b><font color="#FF0000">&nbsp; "text/html;charset=ISO-8859-1"</font></b>
<p>This attribute specifies the MIME type and character encoding the JSP
file uses for the response it sends to the client. According to Sun,
<br>&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td><i>“You can use any MIME type or character set that are valid for the
JSP engine. The default MIME type is <tt>text/html</tt>, and the default
character set is <tt>ISO-8859-1</tt>.”</i></td>
</tr>
</table>

<p>As of 2/14/00, you can find a discussion of MIME types at
<br><a href="http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html">http://www.utoronto.ca/webdocs/</a>
<br><a href="http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html">HTMLdocs/Book/Book-3ed/appb/</a>
<br><a href="http://www.utoronto.ca/webdocs/HTMLdocs/Book/Book-3ed/appb/mimetype.html">mimetype.html</a>
<center>
<h2>
<a NAME="_Sample_JSP_Page"></a>Sample JSP Page</h2></center>
<a href="Java758-fig01.htm">Figure 1</a> shows a sample JSP file that contains
three page directives.&nbsp; The page directives are near the top of the
file, and are highlighted in boldface to make them easy to find.
<p><b><font color="#FF0000">The import attribute</font></b>
<p>The first two page directives specify values for the <b>import</b> attribute.&nbsp;
You will recognize the values of these attributes as being very similar
to the import directives in a Java program.
<p><b><font color="#FF0000">The info attribute</font></b>
<p>The third page directive specifies a value for the <b>info</b> attribute.&nbsp;
At the moment, I can't think of an analogy to the <b>info</b> attribute
in a normal Java program, but its value can be accessed later in the JSP
page using the <b>getServletInfo()</b> method of the <b>Servlet</b> class
(as illustrated near the bottom of the page).
<p><b><font color="#FF0000">Path not required later</font></b>
<p>As with import directives in a Java program, the two <b>import</b> attributes
make it possible to access the following class files without the requirement
to provide a fully qualified path and file name each time the class file
is referenced:
<ul>
<li>
<b>Date</b></li>

<li>
<b>Button</b></li>
</ul>
(Actually, because the wildcard (<b>*</b>) notation was used in the second
<b>import</b>
attribute, there are many other class files in the <b>awt</b> package that
can also be referenced without the requirement to specify a full path name.)
<p><b><font color="#FF0000">References to Date and Button</font></b>
<p>The references to the <b>Date</b> and <b>Button</b> classes are highlighted
in boldface near the middle of the file, and are pretty obvious.
<p>An anonymous object of each of these classes is instantiated in two
separate JSP expressions.
<p><b><font color="#FF0000">The Date object</font></b>
<p>The instantiation of the anonymous <b>Date</b> object with no constructor
parameters causes a <b>String</b> to be inserted into the JSP page output
containing the current date and time.
<p><b><font color="#FF0000">The Button object</font></b>
<p>The instantiation of the anonymous <b>Button</b> object causes the default
<b>String</b>
representation of a <b>Button</b> object to be inserted into the JSP page
output.&nbsp; It isn't very pretty, but it does serve to illustrate the
use of the <b>import</b> attribute of the page directive.
<p><b><font color="#FF0000">Info about the page</font></b>
<p>The third page directive causes the <b>String</b> <i>“Info about the
page”</i> to be associated with the page.
<p>This String is later accessed and inserted into the JSP page output
by invoking <b>this.getServletInfo()</b> inside a JSP expression.
<p>The invocation of this method in the JSP page is also highlighted in
boldface to make it easy to find (near the bottom of the page).
<p><b><font color="#FF0000">JSP page output</font></b>
<p><a href="Java758-fig02.htm">Figure 2</a> shows a replica of the output
produced by accessing this JSP page using Netscape 4.7.&nbsp; Accessing
the JSP page using IE5.0 produced similar results.
<p>As I mentioned earlier, the default string representation of the <b>Button</b>
object near the middle of Figure 2 isn't very pretty, but it does serve
to illustrate the use of the <b>import</b> attribute of the page directive.
<p><b><font color="#FF0000">Review</font></b>
<p>To review, the <b>import</b> attributes makes it possible to reference
the <b>Date</b> and <b>Button</b> classes within the JSP page without the
requirement to provide a fully-qualified path and file name for the class.
<p>The <b>info</b> attribute makes it possible to associate an information
string with the JSP page that can later be accessed using the <b>getServletInfo()</b>
method of the <b>Servlet</b> class.
<center>
<h2>
<a NAME="_JSP_Syntax_Summary"></a>JSP Syntax Summary</h2></center>
In this and previous lessons, I have discussed the following JSP syntax:
<p><font face="Arial Narrow">Output comments:</font>
<br><b><font face="Arial Narrow">&lt;!-- comment [ &lt;%= expression %>
] --></font></b>
<p><font face="Arial Narrow">Hidden comments:</font>
<br><b><font face="Arial Narrow">&lt;%-- hidden comment --%></font></b>
<p><font face="Arial Narrow">Declarations:</font>
<br><b><font face="Arial Narrow">&lt;%! declarations %></font></b>
<p><font face="Arial Narrow">Expressions:</font>
<br><b><font face="Arial Narrow">&lt;%= expression %></font></b>
<p><font face="Arial Narrow">Scriptlets<b>:</b></font>
<br><b><font face="Arial Narrow">&lt;% code fragment %></font></b>
<p><font face="Arial Narrow">Include Directive:</font>
<br><b><font face="Arial Narrow">&lt;%@ include file="relativeURL" %></font></b>
<p><font face="Arial Narrow">Page Directive:</font>
<br><font face="Arial Narrow">&lt;%@ page</font>
<br><font face="Arial Narrow">&nbsp; [ language="<b>java</b>" ]</font>
<br><font face="Arial Narrow">&nbsp; [ extends="<i>package</i>.<i>class</i>"
]</font>
<br><font face="Arial Narrow">&nbsp; [ import= "{ <i>package</i>.<i>class</i>
|</font>
<br><i><font face="Arial Narrow">&nbsp;&nbsp;&nbsp; package</font></i><font face="Arial Narrow">.<i>*</i>
}, ..." ]</font>
<br><font face="Arial Narrow">&nbsp; [ session="<b>true</b>|false" ]</font>
<br><font face="Arial Narrow">&nbsp; [ buffer="none|<b>8kb</b>|<i>size</i>kb"
]</font>
<br><font face="Arial Narrow">&nbsp; [ autoFlush="<b>true</b>|false" ]</font>
<br><font face="Arial Narrow">&nbsp; [ isThreadSafe="<b>true</b>|false"
]</font>
<br><font face="Arial Narrow">&nbsp; [ info="<i>text</i>" ]</font>
<br><font face="Arial Narrow">&nbsp; [ errorPage="<i>relativeURL</i>" ]</font>
<br><font face="Arial Narrow">&nbsp; [ contentType="<i>mimeType</i> [</font>
<br><font face="Arial Narrow">&nbsp;&nbsp;&nbsp; ;charset=<i>characterSet</i>
]" |</font>
<br><b><font face="Arial Narrow">&nbsp;&nbsp;&nbsp; "text/html ; charset=ISO-8859-1"</font></b><font face="Arial Narrow">
]</font>
<br><font face="Arial Narrow">&nbsp; [ isErrorPage="true|<b>false</b>"
]</font>
<br><font face="Arial Narrow">%></font>
<br>&nbsp;
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without&nbsp; express written permission from
Richard Baldwin is prohibited.&nbsp;
<h4>
About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-<!--end-->
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
