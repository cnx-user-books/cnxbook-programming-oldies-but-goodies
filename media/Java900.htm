<html><head>
   <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
   <meta name="generator" content="mozilla/4.04 [en] (win95; i) [netscape]">
   <meta name="author" content="richard g. baldwin">
   <title>... in Java by Richard G Baldwin</title></head><body><!--start-->

<center><h3><b><i>Richard G Baldwin (512) 223-4758, <a href="mailto:baldwin@austin.cc.tx.us">baldwin@austin.cc.tx.us</a>,
<a href="http://www2.austin.cc.tx.us/baldwin/">http://www2.austin.cc.tx.us/baldwin/</a></i></b></h3></center>

<center><h2><b><!--title-->JDK 1.1, Controlling the Visible Text in a Text Area on Startup<!--endtitle--></b></h2></center>
Java Programming, Lecture Notes # 900, Revised 3/20/97.
<ul><li><a href="#introduction">Introduction</a></li>

<li><a href="#sample program">Sample Program</a></li></ul>

<hr width="100%"><center><h2><a name="introduction"></a><b><font color="#ff0000">Introduction</font></b></h2></center>
This is the first in a planned series of documents which will be written
in response to questions posted on the various Java newsgroups.

<p>In most cases, the response will be in the form of a sample program.
In most cases, the programs will be written using JDK 1.1 unless there
is some special reason to backtrack to JDK 1.0.2.

<p>Also, in most cases, there will be very little discussion other than
the comments contained in the program.
<center><h2><a name="sample program"></a><font color="#ff0000">Sample Program</font></h2></center><font color="#000000">This section contains a sample program designed to
answer some or all of the questions raised in the posting.</font>

<p><hr width="100%"><pre>/*File news001.java Copyright 1997, R.G.Baldwin
Designed to be compiled and run under JDK 1.1.
Written and tested using JDK 1.1 under Win95.

This program was written in response to a newsgroup poster who
was having difficulty controlling the initially visible text in
a TextArea object.

The program places a non-editible TextArea object in a Frame
object and then writes 99 lines of text into the TextArea object.

The setCaret() method of the TextComponent class is used to establish
the portion of the text that is visible on startup.

After the Frame appears on the screen, the vertical scroll bar can&nbsp;
be used to scroll up and down in the text.

Note that the default appears to be to display the beginning of the&nbsp;
text on startup.
*/

import java.awt.*;
import java.awt.event.*;
//===================================================================
class news001{
&nbsp; public static void main(String[] args){
&nbsp;&nbsp;&nbsp; GUI gui = new GUI(); //instantiate a user interface object
&nbsp; }//end main()
}//end class001
//===================================================================
class GUI{
&nbsp; GUI(){//constructor
&nbsp;&nbsp;&nbsp; Frame myFrame = new Frame("Copyright 1997, R.G.Baldwin");
&nbsp;&nbsp;&nbsp; TextArea myTextArea = new TextArea("Text Line 0\n");
&nbsp;&nbsp;&nbsp; myTextArea.setEditable(false);
&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; for(int cnt = 1; cnt &lt;100; cnt++)//add 98 more lines of text
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myTextArea.append("Text Line " + cnt + "");
&nbsp;&nbsp;&nbsp; myFrame.add("Center",myTextArea);//place test area in the Frame

&nbsp;&nbsp;&nbsp; myFrame.setSize(300,300);
&nbsp;&nbsp;&nbsp; myFrame.setVisible(true);
&nbsp;&nbsp;&nbsp; //The following statement uses the character count to establish
&nbsp;&nbsp;&nbsp; // that portion of the text in the TextArea object that is
&nbsp;&nbsp;&nbsp; // visible on startup. This statement causes character number
&nbsp;&nbsp;&nbsp; // 1200 to be visible.&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp; //To see the default case where the beginning of the text is
&nbsp;&nbsp;&nbsp; // visible on startup, comment the following statement out&nbsp;
&nbsp;&nbsp;&nbsp; // and recompile.
&nbsp;&nbsp;&nbsp; //Note that in order to avoid a "peer" runtime error, this&nbsp;
&nbsp;&nbsp;&nbsp; // statement must not execute until the Frame object is visible.
&nbsp;&nbsp;&nbsp; <b>myTextArea.setCaretPosition(1200)</b>;//must follow setVisible()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

&nbsp;&nbsp;&nbsp; //Instantiate and register program termination object.
&nbsp;&nbsp;&nbsp; myFrame.addWindowListener(new Terminate());&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp; }//end constructor
}//end class GUI
//==========================================================
//Terminates program when the user closes the Frame object.
class Terminate extends WindowAdapter{
&nbsp; public void windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp; System.exit(0);
&nbsp; }//end windowClosing()
}//end class Terminate
//==========================================================</pre>
-end-<!--end--></body></html>