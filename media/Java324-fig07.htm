<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
<!-- Template file for code body -->
</head>
<body>
&nbsp;
<table BORDER=2 WIDTH="330" BGCOLOR="#FFFF99" >
<tr>
<td>
<pre><font face="Andale Mono, Verdana, Arial, Helvetica"><font size=-2>/*Composite03.java 12/12/99
&nbsp;Copyright 1999, R.G.Baldwin
&nbsp;&nbsp;
&nbsp;Illustrates use of the constructors of the Color class
&nbsp;to achieve transparency with solid-fill colors.
&nbsp;&nbsp;
&nbsp;Similar to Composite01 except that Composite01
&nbsp;uses the&nbsp; AlphaComposite class to achieve
&nbsp;transparency.
&nbsp;&nbsp;
&nbsp;Draws a 4-inch by 4-inch Frame on the screen.
&nbsp;&nbsp;
&nbsp;Translates the orgin to the center of the Frame.
&nbsp;&nbsp;
&nbsp;Draws a pair of X and Y-axes centered on the new
&nbsp;origin.
&nbsp;&nbsp;
&nbsp;Draws a big circle centered on the origin underneath
&nbsp;all of the ellipses.
&nbsp;&nbsp;
&nbsp;Uses rotation and translation to fill three ellipses in
&nbsp;each of the four quadrants.&nbsp; The ellipses intersect at&nbsp;
&nbsp;their center.&nbsp; Each is rotated by 60 degrees relative
&nbsp;to the one below it.&nbsp; The order is:
&nbsp;&nbsp; Red ellipse on the bottom
&nbsp;&nbsp; Green ellipse in the middle
&nbsp;&nbsp; Blue ellipse on the top
&nbsp;&nbsp;&nbsp;
&nbsp;Each ellipse has a non-transparent outline,&nbsp;
&nbsp;approximately 0.05 inches in width.
&nbsp;&nbsp;&nbsp;
&nbsp;TRANSPARENCY
&nbsp;Upper-left quadrant
&nbsp;No transparency
&nbsp;&nbsp;
&nbsp;Upper-right quadrant
&nbsp;All three ellipses are 30-percent transparent
&nbsp;&nbsp;
&nbsp;Lower-left quadrant
&nbsp;All three ellipses are 60-percent transparent
&nbsp;&nbsp;
&nbsp;Lower-right quadrant
&nbsp;All three ellipses are 90-percent transparent
&nbsp;&nbsp;&nbsp;
&nbsp;Whether the dimensions in inches come out right
&nbsp;or not depends on whether the method&nbsp;
&nbsp;getScreenResolution() returns the correct resolution
&nbsp;for your screen.
&nbsp;&nbsp;
&nbsp;Tested using JDK 1.2.2 under WinNT Workstation 4.0
&nbsp;******************************************/
&nbsp;import java.awt.geom.*;
&nbsp;import java.awt.*;
&nbsp;import java.awt.event.*;
&nbsp;import java.awt.image.*;
&nbsp;&nbsp;
&nbsp;class Composite03{
&nbsp;&nbsp; publicstaticvoid main(String[] args){
&nbsp;&nbsp;&nbsp;&nbsp; GUI guiObj = new GUI();
&nbsp;&nbsp; }//end main
&nbsp;}//end controlling class Composite03
&nbsp;&nbsp;
&nbsp;class GUI extends Frame{
&nbsp;&nbsp; int res;//store screen resolution here
&nbsp;&nbsp; staticfinalint ds = 72;//default scale, 72 units/inch
&nbsp;&nbsp; staticfinalint hSize = 4;//horizonal size = 4 inches
&nbsp;&nbsp; staticfinalint vSize = 4;//vertical size = 4 inches
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp; GUI(){//constructor
&nbsp;&nbsp;&nbsp;&nbsp; //Get screen resolution
&nbsp;&nbsp;&nbsp;&nbsp; res = Toolkit.getDefaultToolkit().
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getScreenResolution();
&nbsp;&nbsp;&nbsp;&nbsp; //Set Frame size
&nbsp;&nbsp;&nbsp;&nbsp; this.setSize(hSize*res,vSize*res);
&nbsp;&nbsp;&nbsp;&nbsp; this.setVisible(true);
&nbsp;&nbsp;&nbsp;&nbsp; this.setTitle("Copyright 1999, R.G.Baldwin");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Window listener to terminate program.
&nbsp;&nbsp;&nbsp;&nbsp; this.addWindowListener(new WindowAdapter(){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);}});
&nbsp;&nbsp; }//end constructor
&nbsp;&nbsp; //-----------------------------------------------------//
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp; //Override the paint() method
&nbsp;&nbsp; public void paint(Graphics g){
&nbsp;&nbsp;&nbsp;&nbsp; //Downcast the Graphics object to a
&nbsp;&nbsp;&nbsp;&nbsp; // Graphics2D object
&nbsp;&nbsp;&nbsp;&nbsp; Graphics2D g2 = (Graphics2D)g;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Scale device space to produce inches on the
&nbsp;&nbsp;&nbsp;&nbsp; // screen based on actual screen resolution.
&nbsp;&nbsp;&nbsp;&nbsp; g2.scale((double)res/72,(double)res/72);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Translate origin to center of Frame
&nbsp;&nbsp;&nbsp;&nbsp; g2.translate((hSize/2)*ds,(vSize/2)*ds);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Draw x-axis
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(new Line2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.5*ds,0.0,1.5*ds,0.0));
&nbsp;&nbsp;&nbsp;&nbsp; //Draw y-axis
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(new Line2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0,-1.5*ds,0.0,1.5*ds));
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Draw a big circle underneath all of the ellipses.
&nbsp;&nbsp;&nbsp;&nbsp; g2.setStroke(new BasicStroke(0.1f*ds));
&nbsp;&nbsp;&nbsp;&nbsp; Ellipse2D.Double bigCircle = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.5*ds,-1.5*ds,3.0*ds,3.0*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(bigCircle);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; Ellipse2D.Double theEllipse;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setStroke(new BasicStroke(0.05f*ds));
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Translate origin to upper-left quadrant
&nbsp;&nbsp;&nbsp;&nbsp; g2.translate(-1.0*ds,-1.0*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Red horizontal ellipse
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.red);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.0f,0.0f,0.0f,1.0f));//red, not transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Green ellipse at 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(Math.PI/3.0);//rotate 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.green);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.green);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,1.0f,0.0f,1.0f));//green, not transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Blue ellipse at 120 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate((Math.PI/3.0));//rotate 60 more degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.blue);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,0.0f,1.0f,1.0f));//blue, not transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Translate origin to upper-right quadrant
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(-2*(Math.PI/3.0));//undo prev rotation
&nbsp;&nbsp;&nbsp;&nbsp; g2.translate(2.0*ds,0.0*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Red horizontal ellipse
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.red);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.0f,0.0f,0.0f,0.7f));//red, 30% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Green ellipse at 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(Math.PI/3.0);//rotate 60 degrees
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.green);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,1.0f,0.0f,0.7f));//green,30% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Blue ellipse at 120 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate((Math.PI/3.0));//rotate 60 more degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.blue);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,0.0f,1.0f,0.7f));//blue, 30% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Translate origin to lower-left quadrant
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(-2*(Math.PI/3.0));//undo prev rotation
&nbsp;&nbsp;&nbsp;&nbsp; g2.translate(-2.0*ds,2.0*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Red horizontal ellipse
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.red);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.0f,0.0f,0.0f,0.4f));//red, 60% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Green ellipse at 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(Math.PI/3.0);//rotate 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.green);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,1.0f,0.0f,0.4f));//green,60% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Blue ellipse at 120 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate((Math.PI/3.0));//rotate 60 more degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.blue);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,0.0f,1.0f,0.4f));//blue, 60% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Translate origin to lower-right quadrant
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(-2*(Math.PI/3.0));//undo prev rotation
&nbsp;&nbsp;&nbsp;&nbsp; g2.translate(2.0*ds,0.0*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Red horizontal ellipse
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.red);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.0f,0.0f,0.0f,0.1f));//red, 90% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Green ellipse at 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate(Math.PI/3.0);//rotate 60 degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.green);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,1.0f,0.0f,0.1f));//green,90% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Blue ellipse at 120 degrees
&nbsp;&nbsp;&nbsp;&nbsp; theEllipse = new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -1.0*ds,-0.25*ds,2.0*ds,0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; g2.rotate((Math.PI/3.0));//rotate 60 more degrees
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(Color.blue);//nontransparent outline
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theEllipse);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; g2.setPaint(new Color(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0f,0.0f,1.0f,0.1f));//blue, 90% transparent
&nbsp;&nbsp;&nbsp;&nbsp; g2.fill(theEllipse);
&nbsp;&nbsp;
&nbsp;&nbsp; }//end overridden paint()
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;}//end class GUI
&nbsp;//================================//

<b>Figure 7</b></font></font>

</pre>
</td>
</tr>
</table>

</body>
</html>
