<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
<!-- Template file for code body -->
</head>
<body>
&nbsp;
<table BORDER BGCOLOR="#FFFF99" >
<tr>
<td>
<pre><font face="Andale Mono, Verdana, Arial, Helvetica"><font size=-1>BufferedImage <b>getBufferedImage</b>(){
&nbsp; //Larger images produce better quality.
&nbsp; double imageSize = 10.0;
&nbsp; BufferedImage theBufferedImage =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (BufferedImage)this.createImage(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (int)(imageSize*ds),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (int)(imageSize*ds));
&nbsp;&nbsp;
&nbsp; //Get a Graphics2D context on&nbsp;
&nbsp; // the BufferedImage object
&nbsp; Graphics2D g2dImage =&nbsp;
&nbsp; theBufferedImage.createGraphics();
&nbsp;&nbsp;
&nbsp; //Draw a rectangle on the&nbsp;
&nbsp; // Graphics2d context on the
&nbsp; // BufferedImage and fill it with&nbsp;
&nbsp; // the color green.
&nbsp; Rectangle2D.Double theRectangle =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new Rectangle2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0,0.0,imageSize*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; imageSize*ds);
&nbsp; g2dImage.setPaint(new Color(0,255,0));
&nbsp; g2dImage.fill(theRectangle);
&nbsp; g2dImage.draw(theRectangle);
&nbsp;&nbsp;
&nbsp; //Draw a circle on the Graphics2d&nbsp;
&nbsp; // context on the BufferedImage and&nbsp;
&nbsp; // fill it with the color red.
&nbsp; // This circle will cover the green rectangle.
&nbsp; Ellipse2D.Double circleOntheBufferedImage&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =&nbsp; new Ellipse2D.Double(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.0,0.0,imageSize*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; imageSize*ds);
&nbsp; //red
&nbsp; g2dImage.setPaint(new Color(255,0,0));
&nbsp; g2dImage.fill(circleOntheBufferedImage);
&nbsp; g2dImage.draw(circleOntheBufferedImage);
&nbsp;&nbsp;
&nbsp; return theBufferedImage;
&nbsp;&nbsp;
&nbsp;&nbsp; }//end getBuffered Image
&nbsp;&nbsp;
&nbsp;}//end class GUI
&nbsp;//==============================//

<b>Figure 12</b></font></font></pre>
</td>
</tr>
</table>

</body>
</html>
