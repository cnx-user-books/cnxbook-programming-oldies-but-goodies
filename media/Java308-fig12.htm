<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
<!-- Template file for code body -->
</head>
<body>
&nbsp;
<table BORDER BGCOLOR="#FFFF99" >
<tr>
<td>
<pre><font face="Andale Mono, Verdana, Arial, Helvetica"><font size=-2>/*Shape03.java 12/12/99
&nbsp;Copyright 1999, R.G.Baldwin
&nbsp;&nbsp;
&nbsp;Illustrates use of the Shape interface.
&nbsp;&nbsp;
&nbsp;Draws a 4-inch by 4-inch Frame on the screen.
&nbsp;&nbsp;
&nbsp;Translates the origin to the center of the Frame.
&nbsp;&nbsp;
&nbsp;Draws a pair of X and Y-axes centered on the new origin.
&nbsp;&nbsp;
&nbsp;Draws a black circle on the screen with a diameter of
&nbsp;one inch centered at the origin.
&nbsp;&nbsp;
&nbsp;Gets the bounding box for the circle and draws it&nbsp;
&nbsp;in red.
&nbsp;&nbsp;
&nbsp;Draws a one-half inch green square completely inside
&nbsp;of the circle.
&nbsp;&nbsp;
&nbsp;Draws a one-half inch blue square partial inside and&nbsp;
&nbsp;partially outside the circle.
&nbsp;&nbsp;
&nbsp;Draws a one-half magenta square completely outside the
&nbsp;circle.
&nbsp;&nbsp;
&nbsp;Tests the bounding box and the three one-half inch&nbsp;
&nbsp;squares to determine if they are contained in the circle.
&nbsp;Displays the results on the command-line screen.
&nbsp;&nbsp;
&nbsp;Tests the bounding box and the three one-half inch
&nbsp;squares to determine if they intersect the circle.
&nbsp;Displays the results on the command-line screen.
&nbsp;&nbsp;
&nbsp;The program produces the following output:
&nbsp;&nbsp;&nbsp;
&nbsp;theCircle contains theBoundingBox: false
&nbsp;theCircle contains theInsideBox: true
&nbsp;theCircle contains theIntersectingBox: false
&nbsp;theCircle contains theOutsideBox: false
&nbsp;&nbsp;
&nbsp;theCircle intersects theBoundingBox: true
&nbsp;theCircle intersects theInsideBox: true
&nbsp;theCircle intersects theIntersectingBox: true
&nbsp;theCircle intersects theOutsideBox: false
&nbsp;&nbsp;
&nbsp;Tested using JDK 1.2.2 under WinNT Workstation 4.0
&nbsp;**************************************/
&nbsp;import java.awt.geom.*;
&nbsp;import java.awt.*;
&nbsp;import java.awt.event.*;
&nbsp;&nbsp;
&nbsp;class Shape03{
&nbsp;&nbsp; publicstaticvoid main(String[] args){
&nbsp;&nbsp;&nbsp;&nbsp; GUI guiObj = new GUI();
&nbsp;&nbsp; }//end main
&nbsp;}//end controlling class Shape03
&nbsp;&nbsp;
&nbsp;class GUI extends Frame{
&nbsp;&nbsp; int res;//store screen resolution here
&nbsp;&nbsp; staticfinalint ds = 72;//default scale, 72 units/inch
&nbsp;&nbsp; staticfinalint hSize = 4;//horizonal size = 4 inches
&nbsp;&nbsp; staticfinalint vSize = 4;//vertical size = 4 inches
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp; GUI(){//constructor
&nbsp;&nbsp;&nbsp;&nbsp; //Get screen resolution
&nbsp;&nbsp;&nbsp;&nbsp; res = Toolkit.getDefaultToolkit().
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getScreenResolution();
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Set Frame size
&nbsp;&nbsp;&nbsp;&nbsp; this.setSize(hSize*res,vSize*res);
&nbsp;&nbsp;&nbsp;&nbsp; this.setVisible(true);
&nbsp;&nbsp;&nbsp;&nbsp; this.setTitle("Copyright 1999, R.G.Baldwin");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Window listener to terminate program.
&nbsp;&nbsp;&nbsp;&nbsp; this.addWindowListener(new WindowAdapter(){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicvoid windowClosing(WindowEvent e){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);}});
&nbsp;&nbsp; }//end constructor
&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp; //Override the paint() method
&nbsp;&nbsp; publicvoid paint(Graphics g){
&nbsp;&nbsp;&nbsp;&nbsp; //Downcast the Graphics object to a Graphics2D object
&nbsp;&nbsp;&nbsp;&nbsp; Graphics2D g2 = (Graphics2D)g;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Scale device space to produce inches on the screen
&nbsp;&nbsp;&nbsp;&nbsp; // based on actual screen resolution.
&nbsp;&nbsp;&nbsp;&nbsp; g2.scale((double)res/72,(double)res/72);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Translate origin to center of Frame
&nbsp;&nbsp;&nbsp;&nbsp; g2.translate((hSize/2)*ds,(vSize/2)*ds);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Draw x-axis
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(new Line2D.Double(-1.5*ds,0.0,1.5*ds,0.0));
&nbsp;&nbsp;&nbsp;&nbsp; //Draw y-axis
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(new Line2D.Double(0.0,-1.5*ds,0.0,1.5*ds));
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Define a one-inch diameter circle centered about&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; // its origin.&nbsp; Note that Ellipse2D implements Shape
&nbsp;&nbsp;&nbsp;&nbsp; Ellipse2D.Double theCircle = new
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ellipse2D.Double(-0.5*ds, -0.5*ds, 1.0*ds, 1.0*ds);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Draw theCircle in the Frame in the default
&nbsp;&nbsp;&nbsp;&nbsp; // drawing color, black
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theCircle);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Get bounding box of theCircle
&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D theBoundingBox =&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; theCircle.getBounds2D();
&nbsp;&nbsp;&nbsp;&nbsp; g2.setColor(Color.red);//change the drawing color
&nbsp;&nbsp;&nbsp;&nbsp; //Draw the bounding box in the new color
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theBoundingBox);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Create boxes to test for contains and intersects
&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D.Double theInsideBox = new
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D.Double(-0.25*ds, -0.25*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.5*ds, 0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D.Double theIntersectingBox = new
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D.Double(0.3*ds, 0.3*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.5*ds, 0.5*ds);
&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D.Double theOutsideBox = new
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rectangle2D.Double(-1.25*ds, -1.25*ds,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.5*ds, 0.5*ds);
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Draw the test boxes in new colors
&nbsp;&nbsp;&nbsp;&nbsp; g2.setColor(Color.green);
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theInsideBox);//theInsideBox is green
&nbsp;&nbsp;&nbsp;&nbsp; g2.setColor(Color.blue);
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theIntersectingBox);//theIntersectingBox blue
&nbsp;&nbsp;&nbsp;&nbsp; g2.setColor(Color.magenta);
&nbsp;&nbsp;&nbsp;&nbsp; g2.draw(theOutsideBox);//theOutsideBox is magenta&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp; //Now perform the tests and display the results
&nbsp;&nbsp;&nbsp;&nbsp; // on the command-line screen.
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "theCircle contains theBoundingBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.contains(theBoundingBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("theCircle contains theInsideBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.contains(theInsideBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "theCircle contains theIntersectingBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.contains(theIntersectingBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("theCircle contains theOutsideBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.contains(theOutsideBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println();//blank line
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "theCircle intersects theBoundingBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.intersects(theBoundingBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "theCircle intersects theInsideBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.intersects(theInsideBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "theCircle intersects theIntersectingBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.intersects(theIntersectingBox));
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "theCircle intersects theOutsideBox: "
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + theCircle.intersects(theOutsideBox));
&nbsp;&nbsp;
&nbsp;&nbsp; }//end overridden paint()
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;}//end class GUI
&nbsp;//=================================//


</font><b><font size=-1>Figure 12</font></b></font></pre>
</td>
</tr>
</table>

</body>
</html>
