<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">

<center>
<h2>
Swing from A to Z</h2></center>

<center>
<h2>
The border Property</h2></center>

<center>
<h2>
Part 5, Nested Compound Borders</h2></center>
<b><i>By <a href="mailto:baldwin.richard@iname.com">Richard G. Baldwin</a></i></b>
<p>Java Programming, Lecture Notes # 1024
<p>September 18, 2000
<ul >
<li>
<a href="#Preface">Preface</a></li>

<li>
<a href="#Introduction">Introduction</a></li>

<li>
<a href="#Sample Program">Sample Program</a></li>

<li>
<a href="#Interesting Code Fragments">Interesting Code Fragments</a></li>

<li>
<a href="#Summary">Summary</a></li>

<li>
<a href="#Where To From Here">Where to from Here?</a></li>

<li>
<a href="#Complete Program Listings">Complete Program Listing</a></li>
</ul>

<hr size=3 width="100%" align=center>
<center>
<h2>
<a NAME="Preface"></a>Preface</h2></center>
This lesson is Part 5 in a miniseries of several parts designed to illustrate
the <i>border</i> property and the use of that property to construct fancy
borders on Swing components.
<p>I recommend that you study previous lessons on the border property beginning
with <a href="Java1020.htm">The border Property, Part 1</a> before embarking
on this lesson.
<p>I also recommended that in addition to studying this set of lessons,
you also study my earlier lessons on Swing, which are available at <a href="http://gamelan.earthweb.com/dlink.index-jhtml.72.1082.-.43.jhtml">Gamelan</a>.&nbsp;
A consolidated index to those earlier lessons is available at my personal
web <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">site</a>.
<p><b><font color="#FF0000">Viewing tip</font></b>
<p>You may find it useful to open another copy of this lesson in a separate
browser window.&nbsp; That will make it easier for you to scroll back and
forth among the different figures and listings while you are reading about
them.
<center>
<h2>
<a NAME="Introduction"></a>Introduction</h2></center>
<font color="#000000">This lesson illustrates the use of nested compound
borders.</font>
<center>
<h2>
<a NAME="Sample Program"></a><font color="#000000">Sample Program</font></h2></center>
<b><font color="#FF0000">A screen shot</font></b>
<p>The name of the sample program that I will discuss to illustrate nested
compound borders is <b>Swing14</b>.
<p>A screen shot of the GUI that is produced by that program is shown in
Figure 1.
<center>
<p><img SRC="Java1024A.gif" height=201 width=330>
<p><b><font color="#000000">Figure 1&nbsp; Two JLabel objects</font></b></center>

<p><font color="#000000">The program creates and displays two different
<b>JLabel</b>
objects, applying a different border style to each of them.</font>
<center>
<h2>
<a NAME="Interesting Code Fragments"></a><font color="#000000">Interesting
Code Fragments</font></h2></center>
I will discuss the program in fragments.&nbsp; A complete listing of the
program is provided in Listing 4 near the end of this listing
<p>This program is very similar to the program named <b>Swing13</b> that
I discussed in detail in the first four parts of this miniseries.&nbsp;
Therefore, I will skip those parts of the program that were discussed in
the previous lessons
<p><b><font color="#FF0000">The top Swing component</font></b>
<p>Listing 1 shows the code fragment that prepares the border for the top
Swing component in the screen shot of Figure 1.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
CompoundBorder theBorder =&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new <b>CompoundBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; <i><font color="#FF0000">new
BevelBorder(BevelBorder.LOWERED)</font></i>,</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;

<font color="#00CC00">new <b>CompoundBorder</b>(</font></font></font>
<br><font face="Courier New,Courier"><font color="#00CC00"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new MatteBorder(19,19,19,19,</font></font></font>
<br><font face="Courier New,Courier"><font color="#00CC00"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Color.blue),</font></font></font>
<br><font face="Courier New,Courier"><font size=-2><font color="#00CC00">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5</font>)));</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 1</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">A CompoundBorder object</font></b>
<p><font color="#000000">This statement instantiates an object of the <b>CompoundBorder</b>
class, which will be used as the border for a <b>JLabel</b> object.</font>
<p><b><font color="#FF0000">The constructor</font></b>
<p><font color="#000000">The constructor for <b>CompoundBorder</b> requires
two parameters, each of which must be references to <b>Border</b> objects
(<b>Border</b> is an interface).</font>
<p><font color="#000000">The code fragment in </font>Listing 1<font color="#000000">
shows the first parameter in red, and shows the second parameter in green.&nbsp;
I did this to make them easier to separate visually.</font>
<p><b><font color="#FF0000">The <i>outside</i> border</font></b>
<p><font color="#000000">The first parameter, or outside border, is a <i>LOWERED
</i><b>BeveledBorder</b>
object.&nbsp; This causes the blue area in the screen shot of Figure 1
to appear to be depressed into the surface of the <b>JFrame</b>.</font>
<p><b><font color="#FF0000">The <i>inside</i> border</font></b>
<p><font color="#000000">The second parameter, or inside border, is itself
a reference to a <b>CompoundBorder</b> object.&nbsp; Thus, a <b>CompoundBorder</b>
is nested inside of another <b>CompoundBorder</b>.&nbsp; The constructor
for this object also requires two parameters.</font>
<p><b><font color="#FF0000">A MatteBorder object</font></b>
<p><font color="#000000">The first parameter to the constructor for the
nested <b>CompoundBorder</b> object is a reference to a solid blue <b>MatteBorder</b>
object.&nbsp;&nbsp;&nbsp; This is what produces the blue area in the screen
shot.</font>
<p><b><font color="#FF0000">An EmptyBorder object</font></b>
<p><font color="#000000">The second parameter to the nested <b>CompoundBorder</b>
object is a reference to an <b>EmptyBorder</b> object.&nbsp; This produces
a blank margin five pixels in width between the original <b>JLabel</b>
object and the solid blue matte border.</font>
<p><b><font color="#FF0000">Adding the component to the <i>contentPane</i></font></b>
<p>Listing 2 shows the invocation of the
<b>makeLabel()</b> method that
applies the <b>Border</b> object constructed above to a <b>JLabel</b> object
and adds it to the <i>contentPane</i> for later rendering.&nbsp; (See Part
1 of this miniseries on borders for an explanation of this method.)
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
getContentPane().add(<b>makeLabel</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Nested CompoundBorder",<b>theBorder</b>));</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 2</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">The bottom component</font></b>
<p>Listing 3 shows the code fragment that prepares the border for the bottom
component in the screen shot.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
theBorder = new CompoundBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new BevelBorder(BevelBorder.<b>RAISED</b>),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new MatteBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
19,19,19,19,Color.blue),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5)));</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 3</font></font></b></td>
</tr>
</table>

<p><font color="#000000">This fragment is the same as the one for the top
component, except that this fragment uses a <i>RAISED</i><b> BevelBorder</b>
for the outside border instead of a <i>LOWERED</i> <b>BevelBorder</b>.</font>
<center>
<h2>
<a NAME="Summary"></a>Summary</h2></center>
In this miniseries on borders, I have introduced you to each of the standard
<b>Border</b>
classes, and have illustrated one or more variations on each of them.
<p>I have also pointed out that compound borders can be nested to produce
very complex borders, and have illustrated two different nested compound
borders.
<p>I have mentioned that if the standard borders won't fulfill your needs,
you can define your own class that implements the <b>Border</b> interface
and use an object of that class for your custom border.
<center>
<h2>
<a NAME="Where To From Here"></a>Where To From Here?</h2></center>
I have one more topic to cover before I leave this miniseries on borders:
the <b>BorderFactory</b> class.&nbsp; I will cover that topic in the next
lesson.
<center>
<h2>
<a NAME="Complete Program Listings"></a>Complete Program Listing</h2></center>
A complete listing of the program is shown in Listing 4.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>/*File
Swing14</font></font>
<br><font face="Courier New,Courier"><font size=-2>Rev 3/30/00</font></font>
<br><font face="Courier New,Courier"><font size=-2>Copyright 2000, R.G.Baldwin</font></font>
<p><font face="Courier New,Courier"><font size=-2>Illustrates nesting of
CompoundBorder&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>objects.&nbsp; This
program creates and&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>displays two different
border styles</font></font>
<br><font face="Courier New,Courier"><font size=-2>constructed by nesting
CompoundBorder</font></font>
<br><font face="Courier New,Courier"><font size=-2>objects.&nbsp;</font></font>
<br>&nbsp;
<p><font face="Courier New,Courier"><font size=-2>Tested using JDK 1.2.2
under WinNT 4.0 WkStn</font></font>
<br><font face="Courier New,Courier"><font size=-2>*******************************************/</font></font>
<p><font face="Courier New,Courier"><font size=-2>import java.awt.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import java.awt.event.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.swing.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.swing.border.*;</font></font>
<p><font face="Courier New,Courier"><font size=-2>class Swing14 extends
JFrame{</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//&nbsp;</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public static
void main(String args[]) {</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new Swing14();</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end main()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; //The purpose
of this method is to create</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // and return
an opaque pink JLabel with</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // a border.&nbsp;
The text content of the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // lable is provided
as the first</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // parameter.&nbsp;
The border type is provided</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // as the second
parameter.&nbsp; When the</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // label is displayed,
the left and top</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // insets are
displayed following the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // text content
of the label.</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; JLabel makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
String content,Border borderType){</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; JLabel
label = new JLabel();</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setBorder(borderType);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setOpaque(true);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setBackground(Color.pink);</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setText(content
+ ","&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; +label.getInsets().left
+ ","</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; +label.getInsets().top);</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; return
label;</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; }//end makeLabel()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; Swing14(){//constructor</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().setLayout(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new FlowLayout());</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; CompoundBorder
theBorder =&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new BevelBorder(BevelBorder.LOWERED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new MatteBorder(19,19,19,19,</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Color.blue),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5)));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Nested CompoundBorder",theBorder));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; theBorder
= new CompoundBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new BevelBorder(BevelBorder.RAISED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new MatteBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
19,19,19,19,Color.blue),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5)));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Nested CompoundBorder",theBorder));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setTitle("Copyright
2000, R.G.Baldwin");</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setSize(329,200);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setVisible(true);</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //.....................................//</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //Anonymous
inner terminator class</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; this.addWindowListener(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new WindowAdapter(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
public void windowClosing(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
WindowEvent e){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.exit(0);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end windowClosing()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end WindowAdapter</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; );//end
addWindowListener</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //.....................................//</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; }//end constructor</font></font>
<p><font face="Courier New,Courier"><font size=-2>}//end class Swing14</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 4</font></font></b></td>
</tr>
</table>

<p>
<hr size=3 width="100%" align=center>
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without express written permission from Richard
Baldwin is prohibited.
<h4>
About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
