<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
                
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
                
  <meta name="GENERATOR" content="Microsoft FrontPage 6.0">
  <title>... JAVA and DSP by Richard G Baldwin</title>
</head>
<body link="#0000ff" vlink="#666666" alink="#ff0000" lang="EN-US">
 
<h2>Getting Started with Jakarta Tomcat, Servlets, and JSP</h2>
    <i>Using information provided by Marty Hall, Baldwin shows you how to install a preconfigured version of Tomcat 5 as a 
localhost servlet/JSP container on a Windows system, and how to deploy servlets and JSP documents 
on that container.</i><p><b>Published:</b>&nbsp; October 2, 2004<br>
<b>Revised:</b>&nbsp; January 28, 2005 to correct color error in Listing 2.<br>
   <b>By <a href="#About_the_author">Richard G. Baldwin</a></b> </p>
     
<p>Java Programming, Notes # 679</p>
     
<ul>
  <li><a href="#Preface">Preface</a></li>
	<li><a href="#Background_Information">Background Information</a></li>
  <li><a href="#Installing_Jakarta_Tomcat_5.0.27">Installing Jakarta Tomcat 5</a></li>
	<li><a href="#Testing_Jakarta_Tomcat_5.0.27">Testing Jakarta Tomcat 5</a></li>
	<li><a href="#Installing_Servlet_Packages_for_use_with_J2SE">Installing Servlet Packages 
	for use with J2SE</a></li>
	<li><a href="#Deploying_a_Simple_Servlet_on_Tomcat">Deploying Simple Servlets on Tomcat</a></li>
	<li><a href="#Deploying_JSP_Documents_on_Tomcat">Deploying JSP Documents on 
	Tomcat</a></li>
	<li><a href="#Summary">Summary</a> </li>
</ul>
        
<hr size="3" width="100%" align="center">    
<center>    
<h2> <a name="Preface">Preface</a></h2>
   </center>
<p>The purpose of this document is twofold:</p>
<ul>
	<li>To express my sincere appreciation to
	<a href="http://www.coreservlets.com/">Marty Hall</a> for freely sharing his 
	expertise on the Jakarta Tomcat servlet/JSP container with the rest of us.</li>
	<li>To show my students how they can get started deploying and testing servlets and JSP 
	documents without first having to develop expertise in the technology of deploying web 
	applications.</li>
</ul>
<p>If you have ever suffered the pain of searching through the
<a href="http://jakarta.apache.org/tomcat/tomcat-5.0-doc/index.html">Apache 
Jakarta Tomcat documentation</a> trying to figure out how to deploy a simple 
servlet and a simple JSP document on a Tomcat container, you can appreciate the importance of Marty Hall's contribution to the world of clarity.&nbsp; 
Fortunately, because of his
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/">contribution</a>, 
you may never have to suffer that pain.</p>
<h2 align="center"><a name="Background_Information">Background Information</a></h2>
<p>As a professor of computer studies at Austin Community College in Austin, 
Texas, I teach several courses in Java and Object-Oriented programming.&nbsp; In 
one of those courses, which covers about ten major topics in a sixteen-week 
semester, our students need to learn how to design, write, and test Java 
servlets both with and without database connections via JDBC.&nbsp; Because of 
the large number of topics covered in a short period of time, the students simply 
don't have the time available to develop expertise in <i><b>deploying</b></i> web applications.</p>
<p>Thus, the students need a way to deploy and test their servlets with a 
minimum of effort in the <i><b>deployment</b></i> process.</p>
<p><font color="#FF0000"><b>What is the Apache Jakarta Tomcat 5 Servlet/JSP 
Container?</b></font></p>
<p><a href="http://java.sun.com/products/jsp/tomcat/">Sun</a> has this to say 
about Apache Tomcat:</p>
<blockquote>
	<p><i>&quot;<a href="http://java.sun.com/products/jsp/tomcat/">Tomcat</a> is a 
	free, open-source implementation of Java Servlet and JavaServer Pages 
	technologies developed under the Jakarta project at the Apache Software 
	Foundation. Tomcat is available for commercial use under the ASF license 
	from the Apache web site in both binary and source versions. </i></p>
	<p><i>Sun adapts and integrates the Tomcat code base into the
	<a href="http://java.sun.com/j2ee/download.html#sdk">J2EE SDK</a> and owns 
	and evolves the JavaServer Pages and Java Servlets specifications under the
	<a href="http://java.sun.com/jcp/">Java Community Process</a>.&quot;</i></p>
</blockquote>
<p><font color="#FF0000"><b>Attractive for teaching purposes</b></font></p>
<p>Tomcat is attractive for teaching purposes, because it is freely 
available to all students, and because it is endorsed by Sun.</p>
<p>As I mentioned earlier, however, the Tomcat documentation is arcane and 
convoluted.&nbsp; It appears to have been written by experts to be consumed by experts, 
instead of having been written by experts to be consumed by those those with 
less expertise who need the information.</p>
<p><b><font color="#FF0000">Marty Hall to the rescue</font></b></p>
<p>Fortunately, 
Marty Hall has published an excellent 
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/">web site</a> explaining how to install 
and configure Tomcat, and how to deploy servlets and JSP documents on 
Tomcat with a minimum of effort.</p>
<p>Perhaps more importantly, he has provided 
a link where students can download a
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Preconfigured-Tomcat">
preconfigured</a> version of Tomcat 5, which eliminates the requirement for 
configuration following installation <i>(normally, configuration entails making 
numerous editing changes to XML files).</i></p>
<p><font color="#FF0000"><b>Preconfigured versions</b></font></p>
<p>As of this writing in September of 2004, preconfigured versions are available for Tomcat 4 and 
Tomcat 5.&nbsp; These <a name="preconfigured">preconfigured</a> Tomcat versions:
</p>
<ul>
	<li>Have the ROOT context enabled <i>(so that you can use the default Web 
	application). </i></li>
	<li>Have servlet reloading turned on <i>(so you do not have to restart the 
	server if you change a servlet .class file). </i></li>
	<li>Have the port changed from 8080 to 80 <i>(so you do not have to type the 
	port number in the URL).</i> </li>
	<li>Have the invoker servlet enabled <i>(so you can invoke servlets with 
	http://localhost/<b>servlet/ServletName</b>, without making changes to 
	web.xml or restarting the server). </i></li>
	<li>Include the sample HTML page, JSP page, servlets, and utility classes 
	needed to test your setup. </li>
	<li>Include a sample development directory with shortcuts to <i>ROOT</i>, <i>
	ROOT/WEB-INF/classes</i>, <i>startup.bat</i>, and <i>shutdown.bat</i>. </li>
	<li>Include an <i>autoexec.bat</i> file that sets the PATH,
	CLASSPATH, and JAVA_HOME variables. <i>(If you use 
	this file, be sure you edit the file to refer to the proper JDK path, and be 
	sure to save your original autoexec.bat file beforehand, if you have one.)
	</i></li>
</ul>
<p><font color="#FF0000"><b>The remainder of the document</b></font></p>
<p>The remainder of this document will provide detailed instructions for my 
students on:</p>
<ul>
	<li>How to download and install the preconfigured version of Tomcat version 
	5 on a Windows system.</li>
	<li>How to test Tomcat after it is installed.</li>
	<li>How to supplement the Java 2 Software Development Kit <i>(J2SE)</i> to 
	make it compatible with the development of servlets.</li>
	<li>How to deploy and exercise a simple servlet and a simple JSP document on Tomcat.</li>
</ul>
<p>Although this information is intended primarily for my students, I am 
publishing it on a public web server because I believe that others may benefit 
from the information as well.</p>
<h2 align="center"><a name="Installing_Jakarta_Tomcat_5.0.27">Installing Jakarta Tomcat 5</a></h2>
<p>Marty Hall describes two different ways to install and configure Jakarta 
Tomcat:</p>
<ul>
	<li>Go to <a href="http://jakarta.apache.org/site/binindex.cgi">
	http://jakarta.apache.org/site/binindex.cgi</a> and download and unpack the 
	zip file for the current release build of Tomcat 5.&nbsp; Then follow his 
	detailed instructions for
	<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Configure-Tomcat">
	installing and configuring</a> the software.</li>
	<li>
	<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Preconfigured-Tomcat">
	Download</a> and install a preconfigured version of Tomcat 5.</li>
</ul>
<p><font color="#FF0000"><b>The second option is recommended</b></font></p>
<p>Although his step-by-step configuration instructions are detailed, the fact that the 
instructions apply to two different versions <i>(4 and 5)</i> can occasionally 
lead to some confusion.&nbsp; In addition, the configuration effort represents a lot of work 
with numerous opportunities for making mistakes.&nbsp; Therefore, 
unless there is a particular reason for you to elect the first option given 
above, I recommend that you elect the second option.</p>
<p>Here is what I did to download and install the preconfigured version of 
Tomcat 5.</p>
<p><font color="#FF0000"><b>Download and save the zip file</b></font></p>
<p>I downloaded the preconfigured zip file for Tomcat 5 from
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Preconfigured-Tomcat">
http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Preconfigured-Tomcat</a>.&nbsp;
</p>
<p>Then I saved the zip file in an archive folder for backup and later access if 
needed.</p>
<blockquote>
	<p><i>(One of the most difficult aspects of rebuilding a crashed system is 
	going out on the web to find and install all of the software that was 
	installed on your computer before the crash.)</i></p>
</blockquote>
<p><font color="#FF0000"><b>Extract and position the contents of the zip file</b></font></p>
<p>I extracted the contents of the zip file into a temporary directory.&nbsp; This 
produced the following items in the temporary directory:</p>
<ul>
	<li>A file named <b>autoexec.bat</b>.&nbsp; This file can be used to set 
	environment variables.&nbsp; However, I didn't use it because I am running 
	WinXP and can set the environment variables from a dialog box accessible 
	from the control panel.</li>
	<li>A folder named <b>Servlets+JSP</b>.&nbsp; This constitutes the <i>sample 
	development directory</i> mentioned in the earlier <a href="#preconfigured">list</a>.&nbsp; I also didn't 
	use this, but I did save it in case I need to use it later.</li>
	<li>A folder named <b>jakarta-tomcat-5.0.27</b>.&nbsp; This is the root directory 
	for Tomcat 5.&nbsp; I moved this folder to the root directory on my C drive, 
	causing the Tomcat 5 system to reside at <b>c:\jakarta-tomcat-5.0.27 </b>on 
	my computer.</li>
</ul>
<p><font color="#FF0000"><b>Update environment variables</b></font></p>
<p>I used the dialog accessible from the control panel to update the following 
environment variables as indicated.</p>
<ul>
	<li>CATALINA_HOME=c:\jakarta-tomcat-5.0.27</li>
	<li>JAVA_HOME=C:\j2sdk1.4.2</li>
</ul>
<p><font color="#FF0000"><b>Create start and stop icons on desktop</b></font></p>
<p>The folder named <b>c:\jakarta-tomcat-5.0.27\bin</b> contains the following 
two batch files:</p>
<ul>
	<li><a name="startup.bat">startup.bat</a></li>
	<li>shutdown.bat</li>
</ul>
<p>As you might guess from the names, these two batch files are used to start 
and stop the Tomcat server.&nbsp; For convenience, I created desktop icons with 
shortcuts to these two batch files.&nbsp; This makes it easy to start and 
stop the server by double-clicking on the respective icon on the desktop.</p>
<h2 align="center"><a name="Testing_Jakarta_Tomcat_5.0.27">Testing Jakarta 
Tomcat 5</a></h2>
<p>Unless I have forgotten to include something, if you follow these 
instructions, Tomcat 5 should be ready for use at this point with the features provided in the above list of <a href="#preconfigured">
preconfigured</a> features.</p>
<p><font color="#FF0000"><b>Start the server running</b></font></p>
<p>To test the installation to see if it is working, double-click the <b>start</b> 
icon that you placed on your desktop <i>(or double-click the file named 
<a href="#startup.bat">startup.bat</a> mentioned earlier).</i>&nbsp; This should cause a command-line 
window to appear containing a lot of text.&nbsp; The text in the window should 
end with something like the text shown in Figure 1.</p>
<table border="1" cols="1" width="400" bgcolor="#00FFFF">
<tbody>
<tr>
<td>                     
<pre>
Sep 28, 2004 8:43:01 PM 
org.apache.catalina.startup.Catalina start
INFO: Server startup in 21731 ms

<b>Figure 1</b>
</pre>
</td>
</tr>
</tbody>                                
</table></p>
<p>If you see the text shown in Figure 1, that means that your server is 
running.&nbsp; Furthermore because of one of the <a href="#preconfigured">
preconfigured</a> features, the server is listening for HTTP requests on port 80
<i>(instead of 8080, which is the installation default).</i></p>
<p><font color="#FF0000"><b>Test for a successful connection on localhost</b></font></p>
<p>To test for a successful connection on localhost, enter the following URL in your browser:</p>
<p><font face="Arial Narrow"><b>http://localhost/</b></font></p>
<p>If everything is working correctly, a page similar to that shown in Figure 2 should appear in 
your browser window.</p>
<table border="1" cols="1" width="400" bgcolor="#00FFFF">
<tbody>
<tr>
<td>                     
<pre>
<img border="0" src="java679a.jpg" width="409" height="428">

<b>Figure 2 Successful server operation.</b>
</pre>
</td>
</tr>
</tbody>                                
</table></p>
<p>Once you see that, you can probably conclude that Tomcat 5 is working 
properly as a localhost server on your computer listening for connection requests on 
port 80.</p>
<p><font color="#FF0000"><b>Stop and browse the page</b></font></p>
<p>While you are there, stop and examine the page showing in your browser 
window.&nbsp; It is packed with information regarding Tomcat 5, including the 
source code for numerous servlet and JSP examples.</p>
<p><font color="#FF0000"><b>Deploying servlets and JSP documents on Tomcat</b></font></p>
<p>Before I show you how to deploy servlets and JSP documents on Tomcat, I 
need to show you how to upgrade your Java J2SE installation to support the creation of servlet 
programs.</p>
<h2 align="center"><a name="Installing_Servlet_Packages_for_use_with_J2SE">Installing Servlet 
Packages for use with J2SE</a></h2>
<p>As of September 2004, I am currently using Java 2 SDK 1.4.2.&nbsp; This Java distribution does not 
include two packages that are required for compiling servlets:</p>
<ul>
	<li><font id="FrameItemFont">javax.servlet</font> </li>
	<li><font id="FrameItemFont">javax.servlet.http</font> </li>
</ul>
<p><font color="#FF0000"><b>Two different ways to upgrade</b></font></p>
<p>I know of two ways to upgrade a J2SE installation to include these two 
packages:</p>
<ul>
	<li>Download and install J2EE from
	<a href="http://java.sun.com/j2ee/sdk_1.3/">
	http://java.sun.com/j2ee/sdk_1.3/</a></li>
	<li>Download and install the two packages from
	<a href="http://java.sun.com/products/servlet/archive.html">
	http://java.sun.com/products/servlet/archive.html</a></li>
</ul>
<p><font color="#FF0000"><b>Installing J2EE may be an overkill</b></font></p>
<p>If you have other needs for J2EE, that is probably the best way to go.&nbsp; 
However, if you are solely interested in the classes for the <b>
javax.servlet</b> and <b>javax.servlet.http</b> packages, downloading and 
installing J2EE is probably overkill.&nbsp; Since I don't currently have any 
other need for J2EE, I elected the second option.</p>
<p><font color="#FF0000"><b>Download and install the two servlet packages</b></font></p>
<p>Here is what I did:</p>
<ul>
	<li>Download and save the file named <b>servletapi2_1_1-win.zip</b> from the bottom 
	of the web page at
	<a href="http://java.sun.com/products/servlet/archive.html">
	http://java.sun.com/products/servlet/archive.html</a>.</li>
	<li>Create a folder in the root directory of my C-drive named <b>
	JavaServlet2.1.1</b>.</li>
	<li>Extract the contents of the zip file into the new folder.&nbsp; The most 
	important item extracted is a file named <b>servlet.jar</b>, which contains 
	the servlet packages.&nbsp; In addition, there is a folder named <b>api</b>, 
	which contains standard documentation for the packages.&nbsp; Also included, 
	but of little interest to me, is a folder named <b>src</b>, apparently 
	containing the source code for all the files in the package.</li>
	<li>Create a desktop shortcut to the file named <b>index.html</b> in the <b>
	api</b> folder to make the documentation readily available.</li>
	<li>Add the following environment variable to make the servlet classes 
	available to the Java compiler and the Java virtual machine:<br>
	<b>CLASSPATH=c:\JavaServlet2.1.1\servlet.jar;.</b> <i><br>
	(Don't forget the period on the end, which makes it possible to find class 
	files in the current directory.&nbsp; If you already have a CLASSPATH 
	environment variable, don't replace it, update it.)</i></li>
</ul>
<p>Once again, unless I left something out, if you follow these instructions, you 
should be ready at this point to 
write, compile, and deploy a simple servlet and a simple JSP document on the Tomcat 
servlet/JSP container.</p>
<h2 align="center"><a name="Deploying_a_Simple_Servlet_on_Tomcat">Deploying 
Simple Servlets on Tomcat</a></h2>
<p>Start by compiling the servlet code shown in Listings 1 and 2 producing the 
compiled bytecode files named <b>Inew2338_050.class</b> and <b>Inew2338_051.class</b>.</p>
<table border="1" cols="1" width="400" bgcolor="#FFFF00">
<tbody>
<tr>
<td>                     
<pre>
/*File Inew2338_050.java,
Copyright 2004, R.G.Baldwin

The purpose of this program is to illustrate a
very simple servlet.

The servlet was tested using Jakarta Tomcat 5 as
localhost along with the Java servlet packages
version 2.1.1 running under WinXP.

The servlet produces the following text in the
browser window in large red letters.

Hello Big Red World
************************************************/
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class Inew2338_050 extends HttpServlet{
  public void doGet(HttpServletRequest req,
                    HttpServletResponse res)
                    throws ServletException,
                                     IOException{

    res.setContentType("text/html");
    PrintWriter out = res.getWriter();

    out.println("&lt;HTML>");
    out.println(
     "&lt;HEAD>&lt;TITLE>Inew2338_050&lt;/TITLE>&lt;/HEAD>");
    out.println("&lt;BODY>");

    out.println("&lt;h1 align=\"center\">"
                    +"&lt;font color=\"#FF0000\">");
    out.println("Hello Big Red World");
    out.println("&lt;/font>&lt;/h1>");

    out.println("&lt;/BODY>&lt;/HTML>");
  }//end doGet()
}//end class Inew2338_050

<b>Listing 1</b>
</pre>
</td>
</tr>
</tbody>                                
</table></p>
   </body>
   
<br><br>
   
<table border="1" cols="1" width="400" bgcolor="#FFFF00">
<tbody>
<tr>
<td>                     
<pre>
/*File Inew2338_051.java,
Copyright 2004, R.G.Baldwin

Updated 01/28/05 to correct an error having
 to do with color.  Originally, the text
 was displayed in blue instead of green.

The purpose of this program is to illustrate a
very simple servlet.

The servlet was tested using Jakarta Tomcat 5 as
localhost along with the Java servlet packages
version 2.1.1 running under WinXP.

The servlet produces the following text in the
browser window in large green letters.

Hello Big Green World
************************************************/
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class Inew2338_051 extends HttpServlet{
  public void doGet(HttpServletRequest req,
                    HttpServletResponse res)
                    throws ServletException,
                                     IOException{

    res.setContentType("text/html");
    PrintWriter out = res.getWriter();

    out.println("&lt;HTML>");
    out.println(
     "&lt;HEAD>&lt;TITLE>Inew2338_051&lt;/TITLE>&lt;/HEAD>");
    out.println("&lt;BODY>");

    out.println("&lt;h1 align=\"center\">"
                    +"&lt;font color=\"#00FF00\">");
    out.println("Hello Big Green World");
    out.println("&lt;/font>&lt;/h1>");

    out.println("&lt;/BODY>&lt;/HTML>");
  }//end doGet()
}//end class Inew2338_051

<b>Listing 2</b>
</pre></td></tr></tbody></table></p><p><font color="#FF0000"><b>Deploy the 
servlets</b></font></p>
<p>Start the Tomcat 5 server if it isn't already running.&nbsp; </p>
<blockquote>
	<p><i>(This is important to test the servlet reloading feature described in 
	the above <a href="#preconfigured">list</a> of features.)</i></p>
</blockquote>
<p>Copy the two compiled class files into 
the following folder in the Tomcat tree:</p>
<p><b><font face="Arial Narrow">c:\jakarta-tomcat-5.0.27\webapps\ROOT\WEB-INF\classes</font></b></p>
<p><font color="#FF0000"><b>Test the deployment</b></font></p>
<p>Making sure that the Tomcat 5 server is running, enter the following URL into your browser:</p>
<p><b><font face="Arial Narrow">http://localhost/servlet/Inew2338_050</font></b></p>
<p>This should produce an output in your browser window that looks like that 
shown in Figure 3.</p>
<table border="1" cols="1" width="400" bgcolor="#00FFFF">
<tbody>
<tr>
<td>                     
<pre>
<img border="0" src="java679b.jpg" width="389" height="247">

<b>Figure 3</b>
</pre></td></tr></tbody></table></p>
<p><font color="#FF0000"><b>Access a second servlet</b></font></p>
<p>Then enter the following URL into your browser:</p>
<p><b><font face="Arial Narrow">http://localhost/servlet/Inew2338_051</font></b></p>
<p>This should produce an output in your browser window that looks like that 
shown in Figure 4.</p>
<table border="1" cols="1" width="400" bgcolor="#00FFFF">
<tbody>
<tr>
<td>                     
<pre>
<img border="0" src="java679c.jpg" width="389" height="247">

<b>Figure 4</b>
</pre></td></tr></tbody></table></p><p>If you can replicate these results, that means 
that you now have the ability to deploy simple
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Test1">packageless</a> servlets in Tomcat 5.&nbsp; </p>
<blockquote>
	<p><i>(Marty Hall also provides information on how to deploy and test the deployment of servlets 
that use <a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Test2">packages</a> as well as servlets that use
	<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Test3">packages and 
utility classes</a>.&nbsp; I will refer you to his page for instructions for 
	dealing with those kinds of servlets.)</i></p>
</blockquote>
<h2 align="center"><a name="Deploying_JSP_Documents_on_Tomcat">Deploying JSP 
Documents on Tomcat</a></h2>
<p><font color="#FF0000"><b>Create a JSP document file</b></font></p>
<p>Listing 3 contains the text of a very simple JSP document.</p>
<table border="1" cols="1" width="400" bgcolor="#FFFF00">
<tbody>
<tr>
<td>                     
<pre>
&lt;!--File Inew2338_052.jsp -->

&lt;html>
  &lt;title>My title&lt;/title>
     &lt;body>
     &lt;H1>My First JSP Page&lt;/H1>
     &lt;H2>Hello, JSP world!&lt;/H2>

     &lt;% for (int i=0; i&lt;6; i++) { %>
         &lt;br> 
         &lt;%= i %>
     &lt;% }//end for loop %>

     &lt;H3>Isn't this fun&lt;/H3>

     &lt;/body>
&lt;/html>

<b>Listing 3</b>
</pre></td></tr></tbody></table></p><p>Copy this text into a file named <b>
Inew2338_052.jsp</b>.</p>
<p><font color="#FF0000"><b>Deploy the JSP document</b></font></p>
<p>Copy the file into the following folder in the 
Tomcat tree.</p>
<p><b><font face="Arial Narrow">c:\jakarta-tomcat-5.0.27\webapps\ROOT</font></b></p>
<p><font color="#FF0000"><b>Test the deployment</b></font></p>
<p>Enter the following URL into your browser, making sure that the Tomcat 
server is running:</p>
<p><b><font face="Arial Narrow">http://localhost/Inew2338_052.jsp</font></b></p>
<p>This should produce an output in your browser window that looks like that 
shown in Figure 5.</p>
<table border="1" cols="1" width="400" bgcolor="#00FFFF">
<tbody>
<tr>
<td>                     
<pre>
<img border="0" src="java679d.jpg" width="387" height="464">

<b>Figure 5</b>
</pre></td></tr></tbody></table></p><p><font color="#FF0000"><b>Congratulations</b></font></p>
<p>If you see the output shown in Figure 5, you 
have just deployed a JSP document on the Tomcat 5 servlet/JSP container.</p>
<h2 align="center"><a name="Summary">Summary</a></h2>
<p><font color="#FF0000"><b>Thanks to Marty Hall</b></font></p>
<p>I began the lesson by expressing my sincere appreciation to
<a href="http://www.coreservlets.com/">Marty Hall</a> for freely sharing his 
expertise on Jakarta Tomcat with the rest of us.</p>
<p><font color="#FF0000"><b>Needed, a simple way to deploy servlets and JSP 
documents</b></font></p>
<p>Then I explained why students in my Advanced Java class need to be able to 
deploy servlets and JSP documents without first becoming experts in web 
application deployment technology.</p>
<p><font color="#FF0000"><b>Why use Apache Jakarta Tomcat?</b></font></p>
<p>Then I explained why I have selected Apache Jakarta Tomcat as the reference 
servlet/JSP container for use by students in my Advanced Java class.</p>
<p>Along the way I complained a little about the quality of the documentation 
for the Tomcat servlet/JSP container.</p>
<p><font color="#FF0000"><b>Outstanding instructions from Marty Hall</b></font></p>
<p>I explained that
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/">Marty Hall</a> has 
published an excellent web site explaining how to install and configure Tomcat, 
and how to deploy servlets and JSP documents on Tomcat with a minimum of 
effort.&nbsp; </p>
<p><font color="#FF0000"><b>A preconfigured version of Tomcat 5</b></font></p>
<p>I also explained that he has provided a link where students can 
download a
<a href="http://www.coreservlets.com/Apache-Tomcat-Tutorial/#Preconfigured-Tomcat">
preconfigured</a> version of Tomcat, which eliminates the requirement for 
configuration following installation </p>
<p><font color="#FF0000"><b>Downloading, installing, and testing preconfigured 
Tomcat 5</b></font></p>
<p>Then I explained how to download and install the preconfigured version of 
Tomcat 5 as a <b>localhost </b>server on a Windows system.&nbsp; After that, I 
explained how to start the Tomcat 5 server running, and how to confirm that it 
is accepting HTTP requests on port 80.</p>
<p><font color="#FF0000"><b>Upgrading a J2SE installation to compile servlets</b></font></p>
<p>At that point, I departed from my discussion of Tomcat 5 and explained how to 
upgrade a Java 2 Standard Edition 1.4.2 installation to make it possible to 
compile servlets.&nbsp; This involves downloading and installing a small jar 
file and associated documentation from Sun.</p>
<p><font color="#FF0000"><b>How to deploy packageless servlets on Tomcat 5</b></font></p>
<p>Then I showed how to deploy simple packageless servlets on the Tomcat 5 
servlet/JSP container by copying 
compiled servlet program files into the following folder in the Tomcat tree:</p>
<p><b><font face="Arial Narrow">c:\jakarta-tomcat-5.0.27\webapps\ROOT\WEB-INF\classes</font></b></p>
<p>I provided two sample servlets that you can compile and use to test your 
system.</p>
<p><font color="#FF0000"><b>How to deploy a JSP document on Tomcat 5</b></font></p>
<p>Then I showed how to deploy a simple JSP document on the Tomcat 5 servlet/JSP 
container by 
copying JSP files into the following folder in the Tomcat tree.</p>
<p><b><font face="Arial Narrow">c:\jakarta-tomcat-5.0.27\webapps\ROOT</font></b></p>
<p>I provided a sample JSP document that you can use to test your system.</p>
<p><font color="#FF0000"><b>Confirming proper operation of Tomcat 5</b></font></p>
<p>For both servlets and JSP documents, I showed you how to use your browser to 
confirm that your system is behaving properly.</p>
<p>Then I congratulated you on your successful installation of Tomcat 5 and the 
successful deployment of servlets and JSP documents on that servlet/JSP 
container.</p>
<BODY>
     
<hr size="3" width="100%" align="center">    
<p>Copyright 2004, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without express written permission from Richard
Baldwin is prohibited. </p>
     
<h4> <a name="About_the_author">About the author</a></h4><b><a href="mailto:baldwin@dickbaldwin.com">Richard Baldwin</a></b><i>
  is a college professor (at Austin Community College in Austin, TX) and
private  consultant whose primary focus is a combination of Java, C#, and
XML. In addition to the many platform and/or language independent benefits
of Java and C# applications, he believes that a combination of Java, C#,
and XML will become the primary driving force in the delivery of structured
information on the Web.</i>    
<p><i>Richard has participated in numerous consulting projects, and he frequently 
 provides onsite training at the high-tech companies located in and around 
 Austin, Texas.&nbsp; He is the author of Baldwin's Programming <a
 href="http://www.dickbaldwin.com">Tutorials</a>,
  which has gained a worldwide following among experienced and aspiring programmers.
  He has also published articles in JavaPro magazine.</i> </p>
     
<p><i>In addition to his programming expertise, Richard has many years of 
 practical experience in Digital Signal Processing (DSP).&nbsp; His first
 job after he earned his Bachelor's degree was doing DSP in the Seismic Research 
 Department of Texas Instruments.&nbsp; (TI is still a world leader in DSP.)&nbsp; 
 In the following years, he applied his programming and DSP expertise to other
 interesting areas including sonar and underwater acoustics.</i> </p>
     
<p><i>Richard holds an MSEE degree from Southern Methodist University and
  has many years of experience in the application of computer technology
to  real-world problems.</i> </p>
     
<p><i><a href="mailto:baldwin@dickbaldwin.com">Baldwin@DickBaldwin.com</a></i>
  </p>
     
<p>-end- </p>
   </body>
</html>
