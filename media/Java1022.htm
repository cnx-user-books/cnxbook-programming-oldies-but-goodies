<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">

<center>
<h2>
Swing from A to Z</h2></center>

<center>
<h2>
The border Property</h2></center>

<center>
<h2>
Part 3, CompoundBorder</h2></center>
<b><i>By <a href="mailto:baldwin.richard@iname.com">Richard G. Baldwin</a></i></b>
<p>Java Programming, Lecture Notes # 1022
<p>September 4, 2000
<ul >
<li>
<a href="#Preface">Preface</a></li>

<li>
<a href="#Introduction">Introduction</a></li>

<li>
<a href="#Sample Program">Sample Program</a></li>

<li>
<a href="#Interesting Code Fragments">Interesting Code Fragments</a></li>

<li>
<a href="#Summary">Summary</a></li>

<li>
<a href="#Where To From Here">Where To From Here?</a></li>

<li>
<a href="#Complete Program Listings">Complete Program Listing</a></li>
</ul>

<hr size=3 width="100%" align=center>
<center>
<h2>
<a NAME="Preface"></a>Preface</h2></center>
This lesson is Part 3 of several parts designed to illustrate the <i>border</i>
property and the use of that property to construct fancy borders on Swing
components.
<p><b><font color="#FF0000">Viewing tip</font></b>
<p>You may find it useful to open another copy of this lesson in a separate
browser window.&nbsp; That will make it easier for you to scroll back and
forth among the different figures and listings, without losing your place,
while you are reading about them.
<p><b><font color="#FF0000">Recommended supplementary reading</font></b>
<p>It is strongly recommended that you study <a href="Java1020.htm">The
border Property, Part 1, Etched Border</a> and <a href="Java1021.htm">The
border Property, Part 2, BevelBorder and EmptyBorder</a> before embarking
on this lesson.
<p>Additional supplementary material on Swing is available at
<i>Baldwin's
Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a></i><font color="#000000">.</font>
<center>
<h2>
<a NAME="Introduction"></a>Introduction</h2></center>
<b><font color="#FF0000">What's in this lesson?</font></b>
<p><font color="#000000">This is the third of several sequential lessons
that emphasize an understanding of the <i>border</i> property along with
the use of that property to construct components having different border
styles.</font>
<p><b><font color="#FF0000">What was in the previous parts?</font></b>
<p>Part 1<font color="#000000"> set the background for future discussions,
and dealt specifically with the use of the <b>EtchedBorder</b> class. </font>Part
2<font color="#000000"> continued the discussion adding three more border
styles.</font>
<p><font color="#000000">So far, I have discussed the following border
styles.</font>
<ul>
<li>
<font color="#000000">EtchedBorder</font></li>

<li>
<font color="#000000">BevelBorder RAISED</font></li>

<li>
<font color="#000000">BevelBorder LOWERED</font></li>

<li>
<font color="#000000">EmptyBorder</font></li>
</ul>
<b><font color="#FF0000">A cosmetic problem</font></b>
<p><font color="#000000">I pointed out that when the first three border
styles listed above were applied to a <b>JLabel</b> object, the results
weren't very attractive because the ends of the text were too close to
the edge of the <b>JLabel</b> object.</font>
<p>I also pointed out that the solution to the problem described above
involves the combined use of the <b>EmptyBorder</b> and the <b>CompoundBorder</b>
classes.
<p><b><font color="#FF0000">What is a CompoundBorder?</font></b>
<p>Here is part of what Sun has to say about the <b>CompoundBorder </b>class.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Arial Narrow"><font size=-1>A
composite Border class used to compose two Border objects into a single
border by nesting an inside Border object within the insets of an outside
Border object.</font></font>
<p><font face="Arial Narrow"><font size=-1>For example, this class may
be used to add blank margin space to a component with an existing decorative
border:&nbsp;</font></font></td>
</tr>
</table>

<p><b><font color="#FF0000">Can be nested</font></b>
<p>Compound borders themselves can also be nested.
<p>That is to say, a compound border object can be used as one of the two
border objects specified for a new compound border object.&nbsp; That object
can be included in another compound border object, etc.
<p><b><font color="#FF0000">What are the long-term plans?</font></b>
<p>This lesson will introduce the <b>CompoundBorder</b>, and will illustrate
four different border styles using <b>CompoundBorder</b> that are similar
to, but much more attractive than those illustrated in the earlier lessons.
<p>Subsequent lessons will illustrate four additional styles that make
use of <b>EmptyBorder</b> and <b>CompoundBorder</b> to enhance their attractiveness.
<p>In addition, one of the lessons in this miniseries on borders will illustrate
the use of nested <b>CompoundBorder</b> objects.
<center>
<h2>
<a NAME="Sample Program"></a><font color="#000000">Sample Program</font></h2></center>
<b><font color="#FF0000">A screen shot</font></b>
<p>The name of the sample program that I will discuss to illustrate borders
is <b>Swing13</b>.
<p>A screen shot of the GUI that is produced when the program is started
is shown in Figure 1.
<p>If you have sufficient screen space, you may find it useful to open
a second copy of this lesson in another browser window so that you can
view this screen shot while reading the remaining material.
<center>
<p><img SRC="Java1022.gif" height=501 width=330>
<br>Figure 1&nbsp; A Screen Shot of the Running Program</center>

<p><b><font color="#FF0000">Twelve JLabel objects</font></b>
<p><font color="#000000">The program creates and displays twelve different
<b>JLabel</b>
objects, applying a different border style to each of them.</font>
<p><b><font color="#FF0000">See rows 3, 4, 5, and 6 of the screen shot</font></b>
<p><font color="#000000">In this lesson, I will be concentrating on the
components appearing on the third, fourth, fifth, and sixth rows.</font>
<p><b><font color="#FF0000">Combine EmptyBorder with another border</font></b>
<p><font color="#000000">Each of these components uses a <b>CompoundBorder</b>
object to combine an <b>EmptyBorder</b> object with another border object.</font>
<p><font color="#000000">The use of the <b>EmptyBorder</b> object provides
a margin of blank space between the text and the visible border, greatly
improving the appearance of the component.</font>
<center>
<h2>
<a NAME="Interesting Code Fragments"></a><font color="#000000">Interesting
Code Fragments</font></h2></center>
I will discuss the program in fragments.&nbsp; A complete listing of the
program is provided in Listing 3 near the end of this lesson.&nbsp; I will
skip those parts of the program that were discussed in the previous lessons
<p><b><font color="#FF0000">Compound Empty + BevelBorder RAISED,7,7</font></b>
<p>Listing 1 shows the code fragment that caused the label in the third
row of the screen shot to be added to the
<i>contentPane</i> of the
<b>JFrame</b>
container.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; <i>"Compound,
Empty + BevelBorder RAISED"</i>,</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; <b>new
CompoundBorder(</b></font></font>
<br><b><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<font color="#FF0000">new BevelBorder(</font></font></font></b>
<br><b><font face="Courier New,Courier"><font size=-2><font color="#FF0000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.RAISED)</font>,</font></font></b>
<br><font face="Courier New,Courier"><font size=-2><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<font color="#3333FF">new EmptyBorder(5,5,5,5</font></b><font color="#3333FF">)</font>)));</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 1</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">The specified text content</font></b>
<p><font color="#000000">The first parameter&nbsp; to the <b>makeLabel()</b>
method is highlighted in Italics in the code fragment of </font>Listing
1<font color="#000000">.&nbsp; This parameter eventually becomes part of
the text content of the label.</font>
<p><b><font color="#FF0000">The specified border style</font></b>
<p><font color="#000000">The second parameter to <b>makeLabel() </b>(highlighted
in boldface in </font>Listing 1<font color="#000000">) is a reference to
a new object of the class <b>CompoundBorder</b>.</font>
<p><b><font color="#FF0000">Construction of the CompoundBorder object</font></b>
<p>The actual construction of a compound border is achieved by passing
appropriate parameters to the constructor for the <b>CompoundBorder</b>
object.
<p><b><font color="#FF0000">The outside border is a raised BevelBorder</font></b>
<p>The first parameter (shown in red) to the constructor for <b>CompoundBorder</b>
is a reference to a <b>BevelBorder</b> object that serves as the outside
border.&nbsp; In this case, I caused it to be RAISED.
<p>This is the same border that I illustrated in an earlier lesson, which
appears on the right side of the first row of the screen shot.
<p><b><font color="#FF0000">A margin of blank space</font></b>
<p>The second parameter to the constructor for <b>CompoundBorder</b> (shown
in blue) is a reference to a new <b>EmptyBorder</b> object that serves
as the inside border.&nbsp; In this case, the <b>EmptyBorder</b> object
produces a five-pixel margin of blank space around the text.
<p><b><font color="#FF0000">A more attractive label</font></b>
<p>In my opinion, this is a much more attractive component than the one
in the right side of the first row (of the screen shot) that doesn't have
the blank space.&nbsp; Of course, this is a matter of opinion.
<p><b><font color="#FF0000">The inset values</font></b>
<p>The inset of the left border and the inset of the top border each have
a value of seven pixels for this <b>CompoundBorder</b>.&nbsp; This is the
sum of the five-pixel margin that I specified and the two pixels normally
required for the <b>BevelBorder</b>.
<p><b><font color="#FF0000">Code for three more labels</font></b>
<p>Listing 2 shows the code that was used to produce the components in
the fourth, fifth, and sixth rows of the screen shot shown earlier.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;
getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + BevelBorder LOWERED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new <b>CompoundBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new <b>BevelBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.LOWERED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5))));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + SoftBevelBorder " +</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"RAISED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
new <b>CompoundBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new <b>SoftBevelBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SoftBevelBorder.RAISED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5))));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + SoftBevelBorder " +</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"LOWERED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new <b>CompoundBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new <b>SoftBevelBorder</b>(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SoftBevelBorder.LOWERED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5))));</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 2</font></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">The compound lowered BevelBorder</font></b>
<p>The component in the fourth row is just like the one discussed above
(in the third row), except that it is LOWERED instead of RAISED.
<p>As discussed above, this border also has inset values of seven pixels
on the left and top border sections.
<p><b><font color="#FF0000">SoftBevelBorder</font></b>
<p>Another of the standard border styles that is available is the <b>SoftBevelBorder</b>.&nbsp;
Here is what Sun has to say about this border style.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="330" BGCOLOR="#66FFFF" >
<tr>
<td VALIGN=TOP WIDTH="330" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Arial Narrow"><font size=-1>A
class which implements a raised or lowered bevel with softened corners.&nbsp;</font></font></td>
</tr>
</table>

<p><b><font color="#FF0000">Compound SoftBevelBorder components</font></b>
<p>The components in the fifth and sixth rows are similar to the previous
two except that they use a <b>SoftBevelBorder</b> instead of a <b>BevelBorder</b>.
<p>Interestingly, the <b>SoftBevelBorder</b> has an inset value of three
pixels instead of two pixels as is the case with <b>BevelBorder</b>.&nbsp;
This results in total inset values of eight pixels for the compound border.
<p><b><font color="#FF0000">How do they differ?</font></b>
<p>I couldn't visually discern much difference between the regular and
soft bevel styles on my high-resolution monitor.&nbsp; Being curious, I
used an image editor to enlarge the screen shot for the left end of the
components in the third, fourth, fifth, and sixth rows just to see how
the "softening" was accomplished.
<p>In case you are interested in such things, that enlarged image is shown
in Figure 2.
<center>
<p><img SRC="Java1022A.gif" height=928 width=220>
<br>Figure 2 An Enlarged View</center>

<p>I find this sort of thing interesting because the entire process of
rendering
three-dimensional pictures on a two-dimensional screen is an optical illusion
anyway.&nbsp; I often like to look at enlarged versions to see just how
the optical illusion is created.
<center>
<h2>
<a NAME="Summary"></a>Summary</h2></center>
In this lesson, I introduced you to the <b>CompoundBorder</b> class as
a way to combine two border styles to produce a new border style.&nbsp;
One of the two combined borders serves as an inside border, and the other
serves as an outside border.
<p>Any two <b>Border</b> objects can be combined in this way, and either
of them can be a <b>CompoundBorder</b> object, leading to a nesting capability.
<p>In this lesson, I caused the inside border to be an <b>EmptyBorder</b>
object for the purpose of providing a band of blank space surrounding the
text of the <b>JLabel</b> component.
<center>
<h2>
<a NAME="Where To From Here"></a>Where To From Here?</h2></center>
I have three more border styles to illustrate in this miniseries on borders:
<ul>
<li>
LineBorder</li>

<li>
MatteBorder</li>

<li>
TitleBorder</li>
</ul>
I will illustrate two different variations on <b>MatteBorder</b>.&nbsp;
One creates a border by using icons as tiles.&nbsp; The other forms the
border using a solid, non transparent color.
<p>After illustrating and discussing these three, I will illustrate the
nesting of <b>CompoundBorder</b> objects.
<center>
<h2>
<a NAME="Complete Program Listings"></a>Complete Program Listing</h2></center>
A complete listing of the program is shown in Listing 3.
<br>&nbsp;
<table BORDER=2 CELLSPACING=0 CELLPADDING=0 WIDTH="399" BGCOLOR="#FFFF00" >
<tr>
<td VALIGN=TOP WIDTH="399" style="width:197.7pt;border:double windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt"><font face="Courier New,Courier"><font size=-2>/*File
Swing13</font></font>
<br><font face="Courier New,Courier"><font size=-2>Rev 3/28/00</font></font>
<br><font face="Courier New,Courier"><font size=-2>Copyright 2000, R.G.Baldwin</font></font>
<p><font face="Courier New,Courier"><font size=-2>Illustrates the border
property.&nbsp; This</font></font>
<br><font face="Courier New,Courier"><font size=-2>program creates and
displays several</font></font>
<br><font face="Courier New,Courier"><font size=-2>different border types
surrounding a</font></font>
<br><font face="Courier New,Courier"><font size=-2>JLabel object.</font></font>
<p><font face="Courier New,Courier"><font size=-2>Tested using JDK 1.2.2
under WinNT 4.0 WkStn</font></font>
<br><font face="Courier New,Courier"><font size=-2>**********************************/</font></font>
<p><font face="Courier New,Courier"><font size=-2>import java.awt.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import java.awt.event.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.swing.*;</font></font>
<br><font face="Courier New,Courier"><font size=-2>import javax.swing.border.*;</font></font>
<p><font face="Courier New,Courier"><font size=-2>class Swing13 extends
JFrame{</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//&nbsp;</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; public static
void main(String args[]) {</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new Swing13();</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; }//end main()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; //The purpose
of this method is to create</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // and return
an opaque pink JLabel with</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // a border.&nbsp;
The text content of the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // lable is provided
as the first</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // parameter.&nbsp;
The border type is provided</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // as the second
parameter.&nbsp; When the</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // label is displayed,
the left and top</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // insets are
displayed following the&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; // text content
of the label.</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; JLabel makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
String content,Border borderType){</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; JLabel
label = new JLabel();</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setBorder(borderType);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setOpaque(true);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setBackground(Color.pink);</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; label.setText(content
+ ","&nbsp;</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; +label.getInsets().left
+ ","</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; +label.getInsets().top);</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; return
label;</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; }//end makeLabel()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp; //---------------------------------------//</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; Swing13(){//constructor</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().setLayout(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new FlowLayout());</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"EtchedBorder",new EtchedBorder()));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"BevelBorder RAISED",new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.RAISED)));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"BevelBorder LOWERED",new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.LOWERED)));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"EmptyBorder",new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5)));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + BevelBorder RAISED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.RAISED),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + BevelBorder LOWERED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new BevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;
BevelBorder.LOWERED),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + SoftBevelBorder " +</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"RAISED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new SoftBevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SoftBevelBorder.RAISED),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + SoftBevelBorder " +</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"LOWERED",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new SoftBevelBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SoftBevelBorder.LOWERED),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + LineBorder",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new LineBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Color.blue,5),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + MatteBorder Image",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new MatteBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
19,19,19,19,new ImageIcon(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"blue-ball.gif")),new EmptyBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5,5,5,5))));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + MatteBorder Color",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new MatteBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
19,19,19,19,Color.blue),</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new EmptyBorder(5,5,5,5))));</font></font>
<br>&nbsp;
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; getContentPane().add(makeLabel(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Compound, Empty + TitledBorder",</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new CompoundBorder(new TitledBorder(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Title"),new EmptyBorder(5,5,5,5))));</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setTitle("Copyright
2000, R.G.Baldwin");</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setSize(329,500);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; setVisible(true);</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //.....................................//</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //Anonymous
inner terminator class</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; this.addWindowListener(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
new WindowAdapter(){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
public void windowClosing(</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
WindowEvent e){</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
System.exit(0);</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end windowClosing()</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}//end WindowAdapter</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; );//end
addWindowListener</font></font>
<br><font face="Courier New,Courier"><font size=-2>&nbsp;&nbsp;&nbsp; //.....................................//</font></font>
<p><font face="Courier New,Courier"><font size=-2>&nbsp; }//end constructor</font></font>
<p><font face="Courier New,Courier"><font size=-2>}//end class Swing13</font></font>
<p><b><font face="Courier New,Courier"><font size=-2>Listing 3</font></font></b></td>
</tr>
</table>

<p>
<hr size=3 width="100%" align=center>
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without express written permission from Richard
Baldwin is prohibited.
<h4>
About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
