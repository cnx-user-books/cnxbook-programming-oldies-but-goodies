<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>... in Java by Richard G Baldwin</TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<P><!--start--></P>
<I><H3 ALIGN="CENTER">Richard G Baldwin (512) 223-4758, </I><A HREF="mailto:baldwin@austin.cc.tx.us"><I>baldwin@austin.cc.tx.us</I></A><I>, </I><A HREF="http://www2.austin.cc.tx.us/baldwin/"><I>http://www2.austin.cc.tx.us/baldwin/</I></A></H3>
<H2 ALIGN="CENTER"><!--title-->Servlets, Originating Email in Servlets<!--endtitle--></H2>
<P>Java Programming, Lecture Notes # 690, Revised 3/15/99. </P>
<P><A HREF="#Preface">Preface</A> </P>
<P><A HREF="#Introduction">Introduction</A> </P>
<P><A HREF="#sample_program">Sample Program</A> </P><DIR>
<DIR>

<P><A HREF="#Interesting_Code_Fragments">Interesting Code Fragments</A> </P>
<P><A HREF="#program_listing">Program Listing</A> </P></DIR>
</DIR>

<P><HR></P>
<FONT COLOR="#ff0000"><H2 ALIGN="CENTER"><A NAME="Preface">Preface</A></H2>
</FONT><P>Students in Prof. Baldwin's <B><U>Advanced Java Programming</B></U> classes at ACC will be responsible for knowing and understanding all of the material in this lesson beginning with the spring semester of 1999. </P>
<P>This lesson was originally written on March 15, 1999. </P>
<P>The sample servlet in this lesson was tested using Win95, the JDK 1.2 download package from JavaSoft, the JSDK 2.0 download package from JavaSoft, and the <STRONG>servletrunner</STRONG> program that is included in the JSDK.</P>
<FONT COLOR="#ff0000"><H2 ALIGN="CENTER"><A NAME="Introduction">Introduction</A></H2>
</FONT><P>A common requirement for servlets in an HTTP environment is the ability to send email messages.  There are several ways that you can accomplish this.</P>
<P>You can do your own socket programming in the servlet and implement a mail transfer protocol as described in a separate lesson on network programming.</P>
<P>You can download the JavaMail API.  As of 3/15/99 the API is available at <A HREF="http://java.sun.com/products/javamail">http://java.sun.com/products/javamail</A>.  This is a large API that provides far more capability that you will probably need to construct and send simple email messages from within a servlet.</P>
<P>You can use the unsupported class from Sun named <B>sun.net.smtp.SmtpClient</B>.  This class is included in the JDK 1.2 download and is very easy to use.  The sample program in this lesson uses this class to construct and send an email message from within a servlet.</P>
<FONT COLOR="#ff0000"><H2 ALIGN="CENTER"><A NAME="sample_program"></A>Sample Program</H2>
</FONT><STRONG><P>Servlet06.java</STRONG> illustrates the ability to construct and send email messages from within a servlet.  The servlet constructs and sends an email message containing some text along with the current date and time.</P>
<P>The email message produced by one run of the servlet was as shown below:</P>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=638>
<TR><TD VALIGN="TOP" BGCOLOR="#00ffff">
<PRE>Subject: Test Msg from Servlet
   Date: Mon, 15 Mar 1999 14:21:21 -0500 (EST)
   From: <A HREF="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</A>
     To: <A HREF="mailto:baldwin@austin.cc.tx.us">baldwin@austin.cc.tx.us</A>

This is a test message.
Mon Mar 15 13:20:05 CST 1999</PRE></TD>
</TR>
</TABLE>

<P>After sending the message, the servlet reports back to the HTML client that activated the servlet that the email message has been sent.</P>
<P>You must be online and have access to a cooperating SMTP server to successfully execute this servlet.</P>
<P>The next section discusses some of the interesting code fragments that make up this servlet.</P>
<FONT COLOR="#ff0000"><H3 ALIGN="CENTER"><A NAME="Interesting_Code_Fragments">Interesting Code Fragments</A></H3>
</FONT><P>The first fragment shows the import directives with particular emphasis on the last directive that imports the class used to construct and send the email message.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
<B>import sun.net.smtp.SmtpClient;</PRE></B></TD>
</TR>
</TABLE>

<P>Next we see the beginning of the <B>doGet()</B> method and its parameters.  You have seen this in many previous lessons, so there is nothing new here.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>public class <B>Servlet06</B> extends HttpServlet{
  public void <B>doGet</B>(HttpServletRequest req, 
                    HttpServletResponse res)
                      throws ServletException, IOException{</PRE></TD>
</TR>
</TABLE>

<P>The next several fragments show how to use the constructor and methods of the <B>SmtpClient</B> class to construct and send an email message.  The names of the methods are generally indicative of the purpose of each method.</P>
<P>The next fragment instantiates an object of the <B>SmtpClient</B> class.  You will need to pass a string containing the name of your cooperating SMTP server to the constructor.  You should be able to find that name in the settings for your normal email client program.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>&#9;SmtpClient smtp = 
                      new SmtpClient("<B>YourSmtpServer.com</B>");</PRE></TD>
</TR>
</TABLE>

<P>Next, the servlet invokes the <B>from()</B> method to specify the originator of the message.  </P>
<P>In most cases, this address will need to agree with the specification of the SMTP server above.  Because of the large problem with electronic junk mail, many SMTP servers no longer accept and forward messages from unknown senders.  If you get an error message to the effect that the server doesn't relay messages, that is your clue that you don't have a proper match here.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>&#9;smtp.<B>from</B>("baldwin.richard@iname.com");</PRE></TD>
</TR>
</TABLE>

<P>Next, the servlet invokes the <B>to()</B> method to specify the addressee or recipient of the message.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>&#9;smtp.<B>to</B>("baldwin@austin.cc.tx.us");</PRE></TD>
</TR>
</TABLE>

<P>Following this, the servlet gets an output stream for the message by invoking the <B>startMessage()</B> method.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>&#9;PrintStream msg = smtp.<B>startMessage</B>();</PRE></TD>
</TR>
</TABLE>

<P>Next the servlet writes the header information and the text for the message into the output stream.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>&#9;
    &#9;//Write the message header in the output stream.
    &#9;msg.println("To: baldwin@austin.cc.tx.us");
    &#9;msg.println("Subject: Test Msg from Servlet");
    &#9;msg.println();
    &#9;
    &#9;//Write the text of the message in the output 
        // stream
    &#9;msg.println("This is a test message.");
    &#9;msg.println(new Date());//put date and time in msg</PRE></TD>
</TR>
</TABLE>

<P>When the servlet has completed writing the message text to the output stream, it closes the output stream and sends the message.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>&#9;smtp.<B>closeServer</B>();</PRE></TD>
</TR>
</TABLE>

<P>After this, the servlet constructs an HTML page and sends it back to the HTML client to notify the client that the message has been sent.  You have seen code like this in numerous previous lessons, so I won't repeat it here.  However, you can view that code in the full listing of the servlet program in the next section.</P>
<FONT COLOR="#ff0000"><H3 ALIGN="CENTER"><A NAME="program_listing"></A>Program Listing</H3>
</FONT><P>A complete listing of the program follows.</P>
<TABLE BORDER CELLSPACING=1 WIDTH=480>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#ffff00">
<PRE>/*File Servlet06.java, Copyright 1999, R.G.Baldwin

Rev 3/15/99

The purpose of this program is to illustrate sending email
messages from a servlet.

The servlet constructs and sends an email message 
containing some text along with the current date and time.
The email message produced by one run of the servlet was 
as shown below:
===============&#9;

Subject: Test Msg from Servlet
   Date: Mon, 15 Mar 1999 14:21:21 -0500 (EST)
   From: baldwin.richard@iname.com
     To: baldwin@austin.cc.tx.us

This is a test message.
Mon Mar 15 13:20:05 CST 1999

================
The unsupported class named sun.net.smtp.SmtpClient is
used to send the email message.

After sending the message, the servlet reports back to the
HTML client that activated the servlet that the email
message has been sent.

Tested using the JavaSoft servletrunner program running on
localhost as a substitute for an actual HTTP server.

You must be online to successfully execute this servlet.

Tested using JDK 1.2 and Win95.
**********************************************************/
import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
import sun.net.smtp.SmtpClient;

public class Servlet06 extends HttpServlet{
  public void doGet(HttpServletRequest req, 
                    HttpServletResponse res)
                      throws ServletException, IOException{
                        
    try {
    &#9;//Pass a string containing the name of your smtp
    &#9;// server as a parameter to the following 
        // constructor
    &#9;SmtpClient smtp = 
                      new SmtpClient("YourSmtpServer.com");
    &#9;
    &#9;//Pass your email address on your smtp server to
        // the following method.
    &#9;smtp.from("baldwin.richard@iname.com");
    &#9;
    &#9;//Pass the email address of the recipient of the 
    &#9;// message to the next method.
    &#9;smtp.to("baldwin@austin.cc.tx.us");

      //Get an output stream for the message
    &#9;PrintStream msg = smtp.startMessage();
    &#9;
    &#9;//Write the message header in the output stream.
    &#9;msg.println("To: baldwin@austin.cc.tx.us");
    &#9;msg.println("Subject: Test Msg from Servlet");
    &#9;msg.println();
    &#9;
    &#9;//Write the text of the message in the output 
        // stream
    &#9;msg.println("This is a test message.");
    &#9;msg.println(new Date());//put date and time in msg

      //Close the stream and send the messaged
    &#9;smtp.closeServer();
    &#9;
    &#9;//Notify HTML client that the message has been sent
      res.setContentType("text/html");
      PrintWriter out = res.getWriter();
    
      out.println("&lt;HTML&gt;");
      out.println("&lt;HEAD&gt;&lt;TITLE=Servlet06&lt;/TITLE&gt;&lt;/HEAD&gt;");
      out.println("&lt;BODY&gt;");
    
      out.println("Email message sent&lt;BR&gt;");

      out.println("&lt;/BODY&gt;&lt;/HTML&gt;");
    }catch( Exception e ) {
      e.printStackTrace();
    }//end catch
  }//end doGet()
}//end class Servlet06</PRE></TD>
</TR>
</TABLE>

<P>-end-<!--end--></P></BODY>
</HTML>
