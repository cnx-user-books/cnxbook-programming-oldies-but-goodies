<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">

<center>
<h2>
Enterprise JavaBeans(TM)</h2></center>

<center>
<h2>
Getting Started with EJB, Part 1</h2></center>
<b>By <a href="#BaldwinBio">Richard G. Baldwin</a></b>
<p>Java Programming, Lecture Notes # 1310
<p>November 13, 2000
<ul >
<li>
<a href="#Preface">Preface</a></li>

<li>
<a href="#Introduction">Introduction</a></li>

<li>
<a href="#What is an EJB">What is an EJB?</a></li>

<li>
<a href="#Summary">Summary</a></li>

<li>
<a href="#Where To From Here">Where To From Here?</a></li>
</ul>

<hr size=3 width="100%" align=center>
<center>
<h2>
<a NAME="Preface"></a>Preface</h2></center>
This is one in a series of lessons designed to teach you about Sun's Enterprise
JavaBeans(TM) (EJB).
<p><b><font color="#FF0000">First in a miniseries</font></b>
<p>This lesson is also the first lesson in a miniseries of several lessons
intended to get you up and running with Sun's Enterprise JavaBeans(TM)
very quickly.
<p><b><font color="#FF0000">First you learn to step, then you learn to
run</font></b>
<p>The lessons in this miniseries will show you the steps involved in writing,
compiling, deploying and executing a simple bean.&nbsp; However, the miniseries
won't expend much effort explaining why you need to take those steps.
<p><b><font color="#FF0000">More details in subsequent lessons</font></b>
<p>Subsequent lessons will come back and fill in the gaps to give you a
better understanding of each of the steps.
<p>Subsequent lessons will also teach you about the different kinds of
beans and how to use those beans in different situations.
<p><b><font color="#FF0000">Overview of the steps</font></b>
<p><font color="#000000">Here are the required steps to get your first
Enterprise JavaBeans(TM) up and running very quickly.</font>
<ul>
<li>
<font color="#000000">Download and install Java 2 Platform, Standard Edition
from Sun.&nbsp; As of the date of this writing, it can be found at the
following URL:&nbsp; <a href="http://java.sun.com/j2se/1.3/">http://java.sun.com/j2se/1.3/</a></font></li>

<li>
<font color="#000000">Download and install the Java 2 Platform, Enterprise
Edition.&nbsp; As of the date of this writing it can be found at the following
URL:&nbsp; <a href="http://java.sun.com/j2ee/download.html">http://java.sun.com/j2ee/download.html</a></font></li>

<li>
Write the bean class and any helper classes that the bean may need.</li>

<li>
Write two interfaces known as the <i>home</i> and <i>remote</i> interfaces.</li>

<li>
Write a batch file to control the compilation process for the bean and
the interface files.</li>

<li>
Use the batch file to compile the bean class, any helper classes, and the
two interfaces.</li>

<li>
Use Sun's J2EE <b>deploytool</b> program to deploy the bean into the server,
being careful to save the client jar file.&nbsp; The client jar file contains
some class files for stubs and skeletons that are required by the client.</li>

<li>
Write the client program.</li>

<li>
Write a batch file to control the compilation of the client program.</li>

<li>
Use the batch file to compile the client program.</li>

<li>
Copy the client jar file into the directory containing the client class
files.</li>

<li>
Write a batch file to control execution of the client program.</li>

<li>
Start the server running.</li>

<li>
Use the batch file to execute the client file, which in turn will cause
the bean to be executed in the server.</li>
</ul>
As you can see, there is quite a lot involved.&nbsp; However, as long as
you take it step-by-step, it's not too difficult to get it right.
<p>(Note that the use of batch files is optional.&nbsp; However, I find
that the use of batch files makes it easier for me to get it right.)
<p><b><font color="#FF0000">Viewing tip</font></b>
<p>You may find it useful to open another copy of this lesson in a separate
browser window.&nbsp; That will make it easier for you to scroll back and
forth in the material to refer back to previously-discussed material without
losing the place where you are reading.
<p><b><font color="#FF0000">Recommended supplementary reading</font></b>
<p>It is strongly recommended that you study the previous lessons on <a href="Java1305.htm">Java
2 Platform Enterprise Edition</a> before embarking on this lesson.
<p>Additional supplementary material that I have written is available at
<a href="http://gamelan.earthweb.com/dlink.index-jhtml.72.1082.-.43.jhtml">Gamelan</a>.&nbsp;
A consolidated index to that material is available at
<i>Baldwin's Java
Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a></i><font color="#000000">.</font>
<center>
<h2>
<a NAME="Introduction"></a>Introduction</h2></center>
<b><font color="#FF0000">Preview</font></b>
<p>I will show you the specific steps required to get a bean up and running
in Sun's J2EE environment.&nbsp; I will provide several explanations as
to "What is an EJB?"&nbsp; In addition, I will discuss the purpose and
goal of enterprise beans, along with a very brief description of how that
goal is achieved.
<p>Rather than to discuss EJB servers in a generic sense, I plan to teach
you specifically how to deploy beans in the <i>Java 2 Platform Reference
Implementation.</i>&nbsp; I will do this in the believe that early success
with a specific implementation will make it easier for you to expand your
knowledge into the more general world of EJB servers from different vendors.
<p><b><font color="#FF0000">A clarification</font></b>
<p><font color="#000000">Because of the likelihood of confusion regarding
the use of the term <i>beans</i>, I will begin by telling you that an EJB
is not a <i>JavaBean Component(TM)</i>, as discussed in my series of <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">tutorial
lessons</a> beginning with lesson number 500.</font>
<center>
<h2>
<a NAME="What is an EJB"></a><font color="#000000">What is an EJB?</font></h2></center>
<font color="#000000">Here is my explanation:&nbsp; <i>Enterprise JavaBeans(TM)</i>
are reusable compiled code that is designed to be installed inside a special
application server that is compliant with the <i>Java 2 Platform Enterprise
Edition</i>.</font>
<p><font color="#000000">Here is what Sun has to say on the matter: <i>"Enterprise
JavaBeans(TM) is the server side component architecture for the J2EE platform.&nbsp;
EJB enables rapid and simplified development of distributed, transactional,
secure and portable Java applications."</i></font>
<p><font color="#000000">And finally, Richard Monson-Haefel has this to
say in his excellent book entitled <u>Enterprise JavaBeans</u>, from O'Reilly:
<i>"Enterprise
JavaBeans is a standard component model for component transaction monitors."</i></font>
<p><font color="#000000">Now that you have been inundated with definitions,
lets see what enterprise beans might be good for.</font>
<p><b><font color="#FF0000">Purpose of a bean</font></b>
<p><font color="#000000">The purpose of a bean is to function as a reusable
software component in the assembly of large-scale server-side enterprise
applications.</font>
<p><b><font color="#FF0000">Goal</font></b>
<p><font color="#000000">The goal of the combination of EJB and the Java
2 Platform Enterprise Edition (J2EE) is to reduce the development cost
and reduce the time-to-market for new enterprise applications or upgrades
to existing enterprise applications.</font>
<p><b><font color="#FF0000">Achievement of goal</font></b>
<p><font color="#000000">This goal is achieved by wrapping the beans in
a special <i>container,</i> which, in combination with the server, handles
many of the complex essential services required for enterprise applications.&nbsp;
These services include concurrency, transactions, persistence, distributed
objects, naming, and security (see <u>Enterprise JavaBeans</u> by Richard
Monson-Haefel).</font>
<p><font color="#000000">Because the server and container provide these
services, the application programmer is free to concentrate on writing
code to implement business logic rather than having to write code to provide
the complex services.</font>
<p><b><font color="#FF0000">Purpose of these lessons</font></b>
<p><font color="#000000">A number of excellent books have been written
about beans (such as the book by Monson-Haefel mentioned above) that discuss
historical perspectives, theory, and details on such topics as component
transaction monitors and security.</font>
<p><font color="#000000">The purpose of these lessons is not to repeat
that information.&nbsp; Rather, the purpose of these lessons is to go beyond
the theory and show you how to actually write and deploy Enterprise Java
Beans along with the required client-side programs.</font>
<p><b><font color="#FF0000">EJBs live in servers</font></b>
<p><font color="#000000">To be of any use, a bean must be deployed in a
server that is compliant with Sun's Java 2 Platform Enterprise Edition.&nbsp;
A number of such servers are available from a variety of vendors.&nbsp;
These servers differ in many respects, particularly with regard to their
setup and administration.</font>
<p><b><font color="#FF0000">From the general to the specific</font></b>
<p><font color="#000000">Most of the books that I have read discuss servers
in a very generic way, assuming that if they teach you the general, you
can then teach yourself the specific.</font>
<p><font color="#000000">I can't quarrel with that approach because I often
use it myself in other areas of Java instruction.&nbsp; However, in this
case, I haven't found the general-to-specific approach to be very satisfactory.</font>
<p><b><font color="#FF0000">Deployment information can be confusing</font></b>
<p><font color="#000000">With the general-to-specific approach, a person
can understand everything in a book about simple enterprise beans and still
have a very difficult time getting even the simplest bean deployed and
operational.&nbsp; This is because it can be very difficult to correlate
the information in the books with the deployment information provided by
the server vendor.</font>
<p><b><font color="#FF0000">Will take the opposite approach</font></b>
<p><font color="#000000">In these lessons, I plan to take the opposite
approach.&nbsp; I plan to concentrate on the use of the <i>Java 2 Platform
Reference Implementation</i> from Sun as a J2EE-compliant server.</font>
<p><font color="#000000">I plan to provide all of the information that
you need, not only to write your beans, but also to deploy them successfully
in the J2EE server, and to access them from compatible client programs.&nbsp;
My thinking is that early success in getting simple beans deployed and
operational will make you much more likely to hang in there and learn the
more advanced material about beans that will be presented later.</font>
<p><b><font color="#FF0000">From the specific to the general</font></b>
<p><font color="#000000">My hope is that after I teach you the specific
(with regard to an EJB server) you can then obtain information about other
servers from other vendors and teach yourself how to use those servers
for deployment of your beans.</font>
<center>
<h2>
<a NAME="Summary"></a>Summary</h2></center>
This lesson is the first lesson in a miniseries intended to get you up
and running with Sun's Enterprise JavaBeans(TM) very quickly.
<p>I showed you the specific steps required to get a bean up and running
in Sun's J2EE environment.&nbsp; I provided several explanations as to
"What is an EJB?"&nbsp; I discussed the purpose and goal of EJB, along
with a very brief description as to how that goal is achieved.
<p>I explained that rather than to discuss EJB servers in a generic sense,
I plan to teach you specifically how to deploy beans in the <i>Java 2 Platform
Reference Implementation.</i>&nbsp; I will do this in the believe that
early success with a specific implementation will make it easier for you
to expand your knowledge into the more general world of EJB servers from
different vendors.
<center>
<h2>
<a NAME="Where To From Here"></a>Where To From Here?</h2></center>
In the next lesson, I will present and briefly discuss the code in a simple
bean along with the code in two interface definitions that are required
for all Enterprise JavaBeans(TM).
<br>
<hr size=3 width="100%" align=center>
<br>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or
in part in any form or medium without express written permission from Richard
Baldwin is prohibited.
<h4>
<a NAME="BaldwinBio"></a>About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-
</body>
</html>
