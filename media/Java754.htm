<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="author" content="richard g. baldwin">
   <meta name="GENERATOR" content="Mozilla/4.7 [en] (WinNT; I) [Netscape]">
   <title>... in Java by Richard G Baldwin</title>
</head>
<body link="#DD0000" vlink="#999999" alink="#FF0000" lang="EN-US">
<!--start-->
<center>
<h2>
<!--title-->JavaServer Pages, Scriptlets</h2></center>
<b><i>by Richard G. Baldwin</i></b>
<br><b><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i></b>
<p>Java Programming, Lecture Notes # 754
<p>April 20, 2000
<ul>
<li>
<a href="#_Introduction">Introduction</a></li>

<li>
<a href="#_What_is_a">What is a Scriptlet?</a></li>

<li>
<a href="#_Sample_scriptlets">Sample Scriptlets</a></li>

<li>
<a href="#_Sample_JSP_Page">Sample JSP Page</a></li>

<li>
<a href="#_JSP_Syntax_Summary">JSP Syntax Summary</a></li>
</ul>

<center>
<hr size=3 width="100%" align=center></center>

<center>
<h2>
<a NAME="_Introduction"></a>Introduction</h2></center>
<b><font color="#FF0000">What is JSP?</font></b>
<p>With JSP, fragments of Java code embedded into special HTML tags are
presented to a JSP engine. The JSP engine automatically creates, compiles,
and executes servlets to implement the behavior of the combined HTML and
embedded Java code.
<p>Previous lessons have explained the use of the following syntax elements:
<ul>
<li>
Output comments</li>

<li>
Hidden comments</li>

<li>
Declarations</li>

<li>
Expressions</li>
</ul>
This lesson will discuss <i>scriptlets</i>.
<center>
<h2>
<a NAME="_What_is_a"></a>What is a Scriptlet?</h2></center>
The scriptlet is the workhorse of JSP.&nbsp; It is basically some Java
code contained within a special JSP tag, embedded in an HTML page.
<p>A scriptlet can contain any number of language statements, variable
or method declarations, or expressions.
<p><b><font color="#FF0000">What is the syntax?</font></b>
<p>The syntax of a scriptlet is as follows:
<br>&nbsp;
<table BORDER WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;% code fragment %></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">What are they good for?</font></b>
<p>According to Sun, you can do any of the following things using scriptlets:
<ul>
<li>
Declare variables or methods to use later in the file (also see declarations
in an earlier lesson).</li>

<li>
Write expressions valid in the page scripting language (also see expressions
in an earlier lesson).</li>

<li>
Use any of the JSP implicit objects or any object declared with a <b><font face="Arial Narrow">&lt;jsp:useBean></font></b>
tag.&nbsp; (This tag will be discussed in detail in a subsequent lesson.)</li>

<li>
Write any other statement that is valid in the page scripting language
(if you use the Java programming language, the statements must conform
to the Java Language Specification).</li>
</ul>
<b><font color="#FF0000">Other stuff</font></b>
<p>You must write any needed plain text, HTML-encoded text, or other JSP
tags outside the scriptlet.
<p><b><font color="#FF0000">When are scriptlets executed?</font></b>
<p>Scriptlets are executed when the JSP engine processes the client request.
<p>If the scriptlet produces output, the output is stored in the <b>out</b>
object, from which you can display it.
<center>
<h2>
<a NAME="_Sample_scriptlets"></a>Sample Scriptlets</h2></center>
Some unrelated samples of scriptlets follow:
<br>&nbsp;
<table BORDER WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;% c = a/b; %></font></b></td>
</tr>
</table>

<p>This scriptlet divides the variable <b>a</b> by the variable <b>b</b>
and assigns the quotient to <b>c</b>.
<br>&nbsp;
<table BORDER WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;% myDate = new java.util.Date(); %></font></b></td>
</tr>
</table>

<p>This scriptlet instantiates a new object of the <b>Date</b> class and
assigns the reference to that object to the variable named <b>myDate</b>.
<p>The two scriptlets shown above are very straightforward.&nbsp; They
consist simply of a simple Java expression embedded inside a scriptlet
tag.
<p><b><font color="#FF0000">Have you noticed anything odd?</font></b>
<p>Those of you who are familiar with HTML and XML may have noticed something
a little odd about this syntax.&nbsp; In particular, the typical syntax
of HTML and XML elements is as follows:
<br>&nbsp;
<table BORDER WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;tagName attribute=”attributeValue”></font></b>
<br><b><font face="Arial Narrow">&nbsp; Element Content</font></b>
<br><b><font face="Arial Narrow">&lt;/tagName></font></b></td>
</tr>
</table>

<p>In other words, a typical element in HTML or XML consists of
<ul>
<li>
A beginning tag with optional attribute values</li>

<li>
The element content</li>

<li>
An ending tag</li>
</ul>
<b><font color="#FF0000">Some HTML elements don't require an end tag</font></b>
<p>Of course, in HTML, there are some elements that don't require an end
tag.&nbsp; In XML jargon, those elements are not “well-formed.”
<p><b><font color="#FF0000">XML has special format for empty elements</font></b>
<p>In XML, if the element doesn't contain any content, there is a special
format that can be used which, in effect, causes the beginning tag to also
serve as the end tag.
<p>However, what we have seen so far regarding JSP doesn't match any of
these.&nbsp; I won't bore you with the details, but if this is of interest
to you, you might want to pursue the matter further by taking a look at
some of my <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">XML</a>
articles.
<p><b><font color="#FF0000">Another sample scriptlet</font></b>
<p>That brings me to another sample scriptlet.&nbsp; The following sample
consists of two scriptlets.&nbsp; One forms the beginning of a Java <b>for</b>
loop, and the other forms the end of a Java <b>for</b> loop.&nbsp; The
body of the loop consists of a standard HTML break tag <b>&lt;br></b> and
a JSP expression.
<br>&nbsp;
<table BORDER WIDTH="330" BGCOLOR="#FFFF00" >
<tr>
<td><b><font face="Arial Narrow">&lt;% for (int i=0; i&lt;11; i++) { %></font></b>
<br><b><font face="Arial Narrow">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br>&nbsp;</font></b>
<br><b><font face="Arial Narrow">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=
i %></font></b>
<br><b><font face="Arial Narrow">&lt;% }//end for loop %></font></b></td>
</tr>
</table>

<p><b><font color="#FF0000">More effort required</font></b>
<p>As you can see from this sample, sometimes a lot more effort is required
to write scriptlets than would be required to write the same Java code
in a Java application, bean, applet, or servlet.
<p>In addition, if you make an error in your Java code, you don't get much
in the way of helpful compilation error messages to help you correct the
problem.&nbsp; (At least that is true with the JSWDK from Sun that I am
currently using.)
<p><b><font color="#FF0000">Using beans</font></b>
<p>This will lead us later to the concept of packaging the bulk of our
Java code in servlets or Java Beans, and to use JSP to execute them.
<p>The results produced by the beans will be embedded in the HTML-encoded
text stream.&nbsp; In other words, the combined use of JSP, servlets, and
Java Beans will give us the best of all three worlds.
<center>
<h2>
<a NAME="_Sample_JSP_Page"></a>Sample JSP Page</h2></center>
<a href="Java754-fig01.htm">Figure 1</a> is a sample JSP page that contains
the three sample scriptlets discussed above, along with some JSP declarations
and JSP expressions.
<p>I have highlighted the scriptlets in boldface to make them easier to
identify.
<p><b><font color="#FF0000">Standard Java comments</font></b>
<p>Note that in addition to using the comment tags discussed in an earlier
lesson, it is also acceptable to use standard Java comments inside the
scriptlet, as evidenced by the last scriptlet shown in <a href="Java754-fig01.htm">Figure
1</a>.
<p><a href="Java754-fig02.htm">Figure 2</a> shows the output produced by
loading this JSP page into my Netscape 4.7 browser while running the Sun
JSWDK-1.0.1 server.
<center>
<h2>
<a NAME="_JSP_Syntax_Summary"></a>JSP Syntax Summary</h2></center>
In this and previous lessons, we have learned about the following JSP syntax:
<p>Output comments:
<br><b>&lt;!-- comment</b>
<br><b>[ &lt;%= expression %> ] --></b>
<p>Hidden comments:
<br><b>&lt;%-- hidden comment --%></b>
<p>Declarations:
<br><b>&lt;%! declarations %></b>
<p>Expressions:
<br><b>&lt;%= expression %></b>
<p>Scriptlets<b>:</b>
<br><b>&lt;% code fragment %></b>
<br>&nbsp;
<p>Copyright 2000, Richard G. Baldwin.&nbsp; Reproduction in whole or in
part in any form or medium without&nbsp; express written permission from
Richard Baldwin is prohibited.&nbsp;
<h4>
About the author</h4>
<b><a href="mailto:baldwin.richard@iname.com">Richard Baldwin</a></b><i>
is a college professor and private consultant whose primary focus is a
combination of Java and XML. In addition to the many platform-independent
benefits of Java applications, he believes that a combination of Java and
XML will become the primary driving force in the delivery of structured
information on the Web.</i>
<p><i>Richard has participated in numerous consulting projects involving
Java, XML, or a combination of the two.&nbsp; He frequently provides onsite
Java and/or XML training at the high-tech companies located in and around
Austin, Texas.&nbsp; He is the author of Baldwin's Java Programming <a href="http://www.geocities.com/Athens/7077/scoop/onjava.html">Tutorials</a>,
which has gained a worldwide following among experienced and aspiring Java
programmers. He has also published articles on Java Programming in Java
Pro magazine.</i>
<p><i>Richard holds an MSEE degree from Southern Methodist University and
has many years of experience in the application of computer technology
to real-world problems.</i>
<p><i><a href="mailto:baldwin.richard@iname.com">baldwin.richard@iname.com</a></i>
<p>-end-<!--end-->
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
</body>
</html>
